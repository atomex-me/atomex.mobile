<?xml version="1.0" encoding="UTF-8"?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="atomex.Views.TezosTokens.TokenPage"
             xmlns:controls="clr-namespace:atomex.CustomElements"
             xmlns:converters="clr-namespace:atomex.Converters"
             xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
             Title="{Binding Description}"
             xmlns:vm="clr-namespace:atomex.ViewModels.CurrencyViewModels;assembly=atomex"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:BindingContext="{d:DesignInstance vm:TezosTokenViewModel}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:NotEqualsConverter x:Key="NotEqualsConverter" />
            <converters:GreaterThanZeroConverter x:Key="GreaterThanZeroConverter" />
            <converters:StringToBoolConverter x:Key="StringToBool" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <RefreshView IsRefreshing="{Binding IsRefreshing}"
                 Command="{Binding RefreshCommand}">
        <AbsoluteLayout>
            <ScrollView AbsoluteLayout.LayoutBounds="0,0,1,1"
                        AbsoluteLayout.LayoutFlags="All">
                <StackLayout Spacing="0">
                    <Frame Padding="0"
                           Margin="16"
                           HasShadow="False"
                           CornerRadius="49"
                           HeightRequest="98"
                           WidthRequest="98"
                           HorizontalOptions="Center"
                           BackgroundColor="{AppThemeBinding Dark={StaticResource IconFrameBackgroundColorDark}, Light={StaticResource IconFrameBackgroundColor}}">
                        <Image Source="{Binding TokenPreview}"
                               Margin="30" />
                    </Frame>
                    <StackLayout Margin="16,0,16,6"
                                 Orientation="Horizontal"
                                 HorizontalOptions="CenterAndExpand">
                        <Label Text="{helpers:Translate AvailableBalance}"
                               Style="{DynamicResource MainTextH5}"
                               HorizontalTextAlignment="Center"
                               VerticalTextAlignment="Center" />
                    </StackLayout>
                    <Label Style="{DynamicResource MainTextH2}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding TotalAmount, StringFormat='{0:0.#########}'}" />
                                <Span Text=" " />
                                <Span Text="{Binding CurrencyCode}" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label Text="{Binding TotalAmountInBase, StringFormat='${0:f2}'}"
                           Style="{DynamicResource AdditionalTextH5}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Margin="16,2,16,12" />
                    <StackLayout Spacing="6"
                                 Orientation="Horizontal"
                                 HorizontalOptions="CenterAndExpand">
                        <Label Style="{DynamicResource MainTextH5}"
                               HorizontalTextAlignment="Center"
                               VerticalTextAlignment="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding CurrencyCode, StringFormat='1 {0} ='}" />
                                    <Span Text=" " />
                                    <Span Text="{Binding CurrentQuote, StringFormat='${0:f2}'}" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </StackLayout>
                    <Grid RowSpacing="4"
                          ColumnSpacing="0"
                          HorizontalOptions="CenterAndExpand"
                          Margin="16,12,16,32">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="56" />
                            <RowDefinition Height="20" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ImageButton Padding="21"
                                     Margin="12,0"
                                     CornerRadius="28"
                                     HeightRequest="56"
                                     WidthRequest="56"
                                     HorizontalOptions="Center"
                                     BackgroundColor="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"
                                     Command="{Binding SendCommand}"
                                     Source="ic_send">
                            <ImageButton.Triggers>
                                <DataTrigger TargetType="ImageButton"
                                             Binding="{Binding TotalAmount, Converter={StaticResource GreaterThanZeroConverter}}"
                                             Value="False">
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding Dark={StaticResource DisabledButtonBackgroundColorDark}, Light={StaticResource DisabledButtonBackgroundColor}}" />
                                    <Setter Property="IsEnabled"
                                            Value="False" />
                                    <Setter Property="Opacity"
                                            Value="0.3" />
                                </DataTrigger>
                            </ImageButton.Triggers>
                        </ImageButton>
                        <Label Grid.Row="1"
                               Text="{helpers:Translate SendButton}"
                               Style="{DynamicResource MainTextH5}"
                               HorizontalTextAlignment="Center"
                               VerticalTextAlignment="Center"
                               Padding="0"
                               Margin="5,0">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding TotalAmount, Converter={StaticResource GreaterThanZeroConverter}}"
                                             Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.3" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Grid.Column="1"
                                     Padding="21"
                                     Margin="12,0"
                                     CornerRadius="28"
                                     HeightRequest="56"
                                     WidthRequest="56"
                                     HorizontalOptions="Center"
                                     BackgroundColor="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"
                                     Command="{Binding ReceiveCommand}"
                                     Source="ic_receive" />
                        <Label Grid.Row="1"
                               Grid.Column="1"
                               Text="{helpers:Translate ReceiveButton}"
                               Style="{DynamicResource MainTextH5}"
                               HorizontalTextAlignment="Center"
                               VerticalTextAlignment="Center"
                               Padding="0"
                               Margin="5,0" />
                        <ImageButton Grid.Column="2"
                                     Padding="19"
                                     Margin="12,0"
                                     CornerRadius="28"
                                     HeightRequest="56"
                                     WidthRequest="56"
                                     HorizontalOptions="Center"
                                     BackgroundColor="{AppThemeBinding Dark={StaticResource HighlightingButtonBackgroundColorDark}, Light={StaticResource HighlightingButtonBackgroundColor}}"
                                     Command="{Binding ConvertCurrencyCommand}"
                                     Source="ic_exchange__white"
                                     IsVisible="{Binding IsConvertable}" />
                        <Label Grid.Row="1"
                               Grid.Column="2"
                               Text="{helpers:Translate ExchangeButton}"
                               Style="{DynamicResource MainTextH5}"
                               HorizontalTextAlignment="Center"
                               VerticalTextAlignment="Center"
                               Padding="0"
                               Margin="5,0"
                               IsVisible="{Binding IsConvertable}" />
                    </Grid>
                    <ScrollView Orientation="Horizontal"
                                HorizontalScrollBarVisibility="Never"
                                HorizontalOptions="FillAndExpand"
                                Padding="8,0">
                        <Grid HorizontalOptions="CenterAndExpand"
                              ColumnSpacing="0"
                              RowSpacing="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120" />
                                <ColumnDefinition Width="120" />
                            </Grid.ColumnDefinitions>
                            <Frame Grid.ColumnSpan="2"
                                   CornerRadius="18"
                                   HasShadow="False"
                                   Padding="0"
                                   BackgroundColor="{AppThemeBinding Dark={StaticResource TabSwitcherBackgroundColorDark}, Light={StaticResource TabSwitcherBackgroundColor}}" />
                            <Button Style="{DynamicResource TabButton}"
                                    Text="{helpers:Translate Activity}"
                                    Command="{Binding ChangeCurrencyTabCommand}"
                                    CommandParameter="Activity">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding SelectedTab}"
                                                 Value="Activity">
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}" />
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark={StaticResource ActiveTabBackgroundColorDark}, Light={StaticResource ActiveTabBackgroundColor}}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding SelectedTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Activity'}"
                                                 Value="True">
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}" />
                                        <Setter Property="BackgroundColor"
                                                Value="Transparent" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                            <Button Grid.Column="1"
                                    Style="{DynamicResource TabButton}"
                                    Text="{helpers:Translate Addresses}"
                                    Command="{Binding ChangeCurrencyTabCommand}"
                                    CommandParameter="Addresses">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding SelectedTab}"
                                                 Value="Addresses">
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}" />
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark={StaticResource ActiveTabBackgroundColorDark}, Light={StaticResource ActiveTabBackgroundColor}}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding SelectedTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Addresses'}"
                                                 Value="True">
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}" />
                                        <Setter Property="BackgroundColor"
                                                Value="Transparent" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                        </Grid>
                    </ScrollView>
                    <StackLayout IsVisible="False"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                                 VerticalOptions="FillAndExpand"
                                 Margin="0,30">
                        <StackLayout.Triggers>
                            <MultiTrigger TargetType="StackLayout">
                                <MultiTrigger.Conditions>
                                    <BindingCondition Binding="{Binding SelectedTab}"
                                                      Value="Activity" />
                                    <BindingCondition Binding="{Binding IsTransfersLoading}"
                                                      Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="IsVisible"
                                        Value="True" />
                            </MultiTrigger>
                        </StackLayout.Triggers>
                        <RelativeLayout VerticalOptions="End"
                                        HorizontalOptions="Center">
                            <ActivityIndicator
                                RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0}"
                                RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0}"
                                RelativeLayout.WidthConstraint="20"
                                RelativeLayout.HeightConstraint="20"
                                BackgroundColor="Transparent"
                                IsRunning="True"
                                Color="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}" />

                        </RelativeLayout>
                        <Label Text="{helpers:Translate LoadingLabel}"
                               Style="{DynamicResource AdditionalTextH5}"
                               Margin="0,4"
                               HorizontalTextAlignment="Center"
                               VerticalTextAlignment="Start" />
                    </StackLayout>
                    <ListView ItemsSource="{Binding GroupedTransactions}"
                              SelectionMode="Single"
                              SelectedItem="{Binding SelectedTransaction, Mode=TwoWay}"
                              BackgroundColor="Transparent"
                              SeparatorVisibility="Default"
                              SeparatorColor="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"
                              IsGroupingEnabled="True"
                              VerticalScrollBarVisibility="Never"
                              HasUnevenRows="True"
                              HeightRequest="{Binding TxListViewHeight}"
                              IsVisible="False">
                        <ListView.Triggers>
                            <DataTrigger TargetType="ListView"
                                         Binding="{Binding SelectedTab}"
                                         Value="Activity">
                                <Setter Property="IsVisible"
                                        Value="True" />
                            </DataTrigger>
                        </ListView.Triggers>
                        <ListView.GroupHeaderTemplate>
                            <DataTemplate>
                                <controls:CustomViewCell BindableHeight="{Binding GroupHeight}">
                                    <StackLayout VerticalOptions="FillAndExpand"
                                                 BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                                                 Spacing="0">
                                        <Label Text="{Binding Date, StringFormat='{}{0:dddd, dd MMMM}'}"
                                               Style="{DynamicResource AdditionalTextH5}"
                                               Padding="16,0"
                                               VerticalOptions="FillAndExpand"
                                               VerticalTextAlignment="End"
                                               HorizontalTextAlignment="Start" />
                                    </StackLayout>
                                </controls:CustomViewCell>
                            </DataTemplate>
                        </ListView.GroupHeaderTemplate>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:CustomViewCell
                                    SelectedBackgroundColor="{AppThemeBinding Dark={StaticResource ListViewSelectedBackgroundColorDark}, Light={StaticResource ListViewSelectedBackgroundColor}}">
                                    <Grid Padding="16,12"
                                          HorizontalOptions="FillAndExpand"
                                          ColumnSpacing="0"
                                          RowSpacing="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="24" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <Label Text="{Binding Description}"
                                               Style="{DynamicResource MainTextH4}"
                                               HorizontalOptions="StartAndExpand"
                                               VerticalTextAlignment="Center"
                                               HorizontalTextAlignment="Start" />
                                        <Label Grid.Row="1"
                                               Style="{DynamicResource AdditionalTextH4}"
                                               HorizontalOptions="StartAndExpand"
                                               VerticalTextAlignment="Center"
                                               HorizontalTextAlignment="Start"
                                               LineBreakMode="TailTruncation"
                                               IsVisible="{Binding Alias, Converter={StaticResource StringToBool}, FallbackValue='False', TargetNullValue='False'}">
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Text="{Binding Direction}" />
                                                    <Span Text=" " />
                                                    <Span Text="{Binding Alias}" />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                        <Image Grid.Column="1"
                                               Grid.RowSpan="2"
                                               WidthRequest="20"
                                               HeightRequest="20"
                                               VerticalOptions="Center"
                                               HorizontalOptions="End">
                                            <Image.Triggers>
                                                <DataTrigger TargetType="Image"
                                                             Binding="{Binding State}"
                                                             Value="Confirmed">
                                                    <Setter Property="Source"
                                                            Value="ic_status__completed" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image"
                                                             Binding="{Binding State}"
                                                             Value="Pending">
                                                    <Setter Property="Source"
                                                            Value="ic_status__empty" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image"
                                                             Binding="{Binding State}"
                                                             Value="Failed">
                                                    <Setter Property="Source"
                                                            Value="ic_status__canceled" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image"
                                                             Binding="{Binding State}"
                                                             Value="Unconfirmed">
                                                    <Setter Property="Source"
                                                            Value="ic_status__empty" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image"
                                                             Binding="{Binding State}"
                                                             Value="Unknown">
                                                    <Setter Property="Source"
                                                            Value="ic_status__empty" />
                                                </DataTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <lottie:AnimationView Grid.Column="1"
                                                              Grid.RowSpan="2"
                                                              WidthRequest="20"
                                                              HeightRequest="20"
                                                              Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                                              AnimationSource="AssetOrBundle"
                                                              ImageAssetsFolder="Assets/Animations"
                                                              AutoPlay="True"
                                                              RepeatMode="Infinite"
                                                              Speed="1"
                                                              VerticalOptions="Center"
                                                              HorizontalOptions="End"
                                                              IsVisible="False">
                                            <lottie:AnimationView.Triggers>
                                                <DataTrigger TargetType="lottie:AnimationView"
                                                             Binding="{Binding State}"
                                                             Value="Confirmed">
                                                    <Setter Property="IsVisible"
                                                            Value="False" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="lottie:AnimationView"
                                                             Binding="{Binding State}"
                                                             Value="Pending">
                                                    <Setter Property="IsVisible"
                                                            Value="True" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="lottie:AnimationView"
                                                             Binding="{Binding State}"
                                                             Value="Failed">
                                                    <Setter Property="IsVisible"
                                                            Value="False" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="lottie:AnimationView"
                                                             Binding="{Binding State}"
                                                             Value="Unconfirmed">
                                                    <Setter Property="IsVisible"
                                                            Value="True" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="lottie:AnimationView"
                                                             Binding="{Binding State}"
                                                             Value="Unknown">
                                                    <Setter Property="IsVisible"
                                                            Value="True" />
                                                </DataTrigger>
                                            </lottie:AnimationView.Triggers>
                                        </lottie:AnimationView>
                                    </Grid>
                                </controls:CustomViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.Footer>
                            <Button Text="{helpers:Translate ShowAll}"
                                    Style="{DynamicResource TransparentButton}"
                                    IsVisible="{Binding CanShowMoreTxs}"
                                    HeightRequest="52"
                                    Command="{Binding ShowAllTxsCommand}" />
                        </ListView.Footer>
                    </ListView>
                    <ListView ItemsSource="{Binding Addresses}"
                              SelectionMode="Single"
                              SelectedItem="{Binding AddressesViewModel.SelectedAddress, Mode=TwoWay}"
                              BackgroundColor="Transparent"
                              SeparatorVisibility="None"
                              VerticalScrollBarVisibility="Never"
                              HasUnevenRows="True"
                              HeightRequest="{Binding AddressListViewHeight}"
                              Margin="0,20"
                              IsVisible="False">
                        <ListView.Triggers>
                            <DataTrigger TargetType="ListView"
                                         Binding="{Binding SelectedTab}"
                                         Value="Addresses">
                                <Setter Property="IsVisible"
                                        Value="True" />
                            </DataTrigger>
                        </ListView.Triggers>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:CustomViewCell
                                    SelectedBackgroundColor="{AppThemeBinding Dark={StaticResource ListViewSelectedBackgroundColorDark}, Light={StaticResource ListViewSelectedBackgroundColor}}">
                                    <Grid Padding="16,10"
                                          HorizontalOptions="FillAndExpand"
                                          ColumnSpacing="0"
                                          RowSpacing="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="24" />
                                            <RowDefinition Height="20" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="44" />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.ColumnSpan="2"
                                               Text="{Binding Address}"
                                               Style="{DynamicResource MainTextH4}"
                                               VerticalTextAlignment="End"
                                               HorizontalTextAlignment="Start"
                                               HorizontalOptions="FillAndExpand"
                                               LineBreakMode="MiddleTruncation" />
                                        <Label Grid.Row="1"
                                               Style="{DynamicResource AdditionalTextH5}"
                                               VerticalTextAlignment="Center"
                                               HorizontalTextAlignment="Start">
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Text="{Binding TokenBalanceString}" />
                                                    <Span Text=" / " />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                        <Label Grid.Row="1"
                                               Grid.Column="1"
                                               Style="{DynamicResource AdditionalTextH5}"
                                               VerticalTextAlignment="Center"
                                               HorizontalTextAlignment="Start">
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Text="{Binding Balance}" />
                                                    <Span Text=" " />
                                                    <Span Text="{Binding BalanceCode}" />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                        <Image Grid.Column="2"
                                               Grid.RowSpan="2"
                                               HorizontalOptions="End"
                                               WidthRequest="8"
                                               HeightRequest="12"
                                               Source="ic_forward"
                                               Margin="8,16" />
                                    </Grid>
                                </controls:CustomViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.Footer>
                            <Button Text="{helpers:Translate ShowAll}"
                                    Style="{DynamicResource TransparentButton}"
                                    IsVisible="{Binding CanShowMoreAddresses}"
                                    Command="{Binding AddressesViewModel.ShowAllAddressesCommand}" />
                        </ListView.Footer>
                    </ListView>
                </StackLayout>
            </ScrollView>
            <StackLayout Spacing="0"
                         AbsoluteLayout.LayoutBounds="0,1,1,56"
                         AbsoluteLayout.LayoutFlags="WidthProportional, YProportional"
                         IsVisible="{Binding IsRefreshing}">
                <Frame HasShadow="False"
                       CornerRadius="4"
                       HorizontalOptions="FillAndExpand"
                       Padding="0"
                       HeightRequest="48"
                       Margin="16,0"
                       BackgroundColor="{AppThemeBinding Dark={StaticResource RegularSnackBarBgColorDark}, Light={StaticResource RegularSnackBarBgColor}}">
                    <Grid Padding="20,0"
                          HorizontalOptions="FillAndExpand"
                          ColumnSpacing="27"
                          RowSpacing="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Label Text="{helpers:Translate StillUpdatingBalances}"
                               TextColor="{AppThemeBinding Dark={StaticResource RegularSnackBarTextColorDark}, Light={StaticResource RegularSnackBarTextColor}}"
                               FontFamily="{AppThemeBinding Dark={StaticResource RegularFont}, Light={StaticResource MediumFont}}"
                               FontSize="14"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="Start" />
                        <Label Grid.Column="1"
                               Text="{helpers:Translate CancelButton}"
                               TextColor="{AppThemeBinding Dark={StaticResource RegularSnackBarTextColorDark}, Light={StaticResource RegularSnackBarTextColor}}"
                               FontFamily="{AppThemeBinding Dark={StaticResource RegularFont}, Light={StaticResource MediumFont}}"
                               LineBreakMode="TailTruncation"
                               FontSize="17"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="End">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding CancelUpdateCommand}" />
                            </Label.GestureRecognizers>
                        </Label>
                    </Grid>
                </Frame>
            </StackLayout>
        </AbsoluteLayout>
    </RefreshView>
</ContentPage>