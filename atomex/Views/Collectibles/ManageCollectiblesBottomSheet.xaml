<?xml version="1.0" encoding="utf-8"?>

<pages:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 x:Class="atomex.Views.Collectibles.ManageCollectiblesBottomSheet"
                 xmlns:helpers="clr-namespace:atomex.Helpers"
                 xmlns:converters="clr-namespace:atomex.Converters"
                 xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
                 xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
                 xmlns:controls="clr-namespace:atomex.CustomElements"
                 xmlns:behavior="clr-namespace:atomex.Behaviors"
                 xmlns:vm="clr-namespace:atomex.ViewModels.CurrencyViewModels;assembly=atomex"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 mc:Ignorable="d"
                 d:BindingContext="{d:DesignInstance vm:CollectiblesViewModel}">
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation
            PositionIn="Bottom"
            PositionOut="Bottom"
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True" />
    </pages:PopupPage.Animation>
    <pages:PopupPage.Resources>
        <ResourceDictionary>
            <converters:NullToBooleanConverter x:Key="NullToBoolean" />
        </ResourceDictionary>
    </pages:PopupPage.Resources>
    <StackLayout VerticalOptions="EndAndExpand"
                 HorizontalOptions="FillAndExpand">
        <StackLayout.Behaviors>
            <behavior:SwipeDownToClosePopupPage CloseAction="OnClose"
                                                ClosingEdge="567"
                                                ClosingTimeInMs="300" />
        </StackLayout.Behaviors>
        <controls:CustomFrame CornerRadius="20,20,0,0"
                              Padding="0,14,0,0"
                              HorizontalOptions="FillAndExpand"
                              HeightRequest="667"
                              BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
            <StackLayout Spacing="0">
                <Image Source="ic_swipe__indicator"
                       WidthRequest="35"
                       HeightRequest="4"
                       Margin="0,0,0,40"
                       HorizontalOptions="Center"
                       VerticalOptions="Center" />
                <Label Text="{helpers:Translate ManageTezosTokens}"
                       Style="{DynamicResource MainTextH1}"
                       Margin="16,0,16,10"
                       HorizontalTextAlignment="Start"
                       VerticalTextAlignment="Center" />
                <ListView ItemsSource="{Binding AllCollectibles}"
                          HasUnevenRows="True"
                          SeparatorVisibility="Default"
                          SeparatorColor="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"
                          VerticalOptions="FillAndExpand"
                          BackgroundColor="Transparent"
                          SelectionMode="None"
                          Footer="">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell Height="60">
                                <StackLayout Orientation="Horizontal"
                                             Spacing="0">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ToggleCommand}" />
                                    </StackLayout.GestureRecognizers>
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout"
                                                     Binding="{Binding IsSelected}"
                                                     Value="False">
                                            <Setter Property="Opacity"
                                                    Value="0.38" />
                                        </DataTrigger>
                                    </StackLayout.Triggers>
                                    <Frame HasShadow="False"
                                           WidthRequest="28"
                                           HeightRequest="28"
                                           VerticalOptions="Center"
                                           Padding="0"
                                           Margin="16"
                                           CornerRadius="4"
                                           IsClippedToBounds="True">
                                        <Image Source="{Binding CollectibleViewModel.TokenPreview}"
                                               WidthRequest="28"
                                               HeightRequest="28"
                                               Aspect="AspectFill"
                                               BackgroundColor="{AppThemeBinding Dark={StaticResource DownloadPreviewBackgroundColorDark}, Light={StaticResource DownloadPreviewBackgroundColor}}">
                                            <Image.Triggers>
                                                <DataTrigger TargetType="Image"
                                                             Binding="{Binding CollectibleViewModel.TokenPreview, Mode=OneWay, Converter={StaticResource NullToBoolean}, FallbackValue='False', TargetNullValue='False'}"
                                                             Value="False">
                                                    <DataTrigger.EnterActions>
                                                        <behavior:FadeAnimationTrigger Action="Start" />
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image"
                                                             Binding="{Binding CollectibleViewModel.TokenPreview, Mode=OneWay, Converter={StaticResource NullToBoolean}, FallbackValue='False', TargetNullValue='False'}"
                                                             Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <behavior:FadeAnimationTrigger Action="Stop" />
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Image.Triggers>
                                        </Image>
                                    </Frame>
                                    <!-- <Image Source="{Binding CollectibleViewModel.TokenPreview}" -->
                                    <!--        HeightRequest="28" -->
                                    <!--        WidthRequest="28" -->
                                    <!--        Margin="16,0" -->
                                    <!--        VerticalOptions="Center" -->
                                    <!--        HorizontalOptions="Start" /> -->
                                    <Label Text="{Binding CollectibleViewModel.Name}"
                                           Style="{DynamicResource MainTextH4}"
                                           LineBreakMode="TailTruncation"
                                           WidthRequest="150"
                                           HorizontalTextAlignment="Start"
                                           VerticalTextAlignment="Center" />
                                    <Label Text="{Binding CollectibleViewModel.Amount}"
                                           Style="{DynamicResource MainTextH5}"
                                           HorizontalOptions="EndAndExpand"
                                           HorizontalTextAlignment="End"
                                           VerticalTextAlignment="Center" />
                                    <Switch
                                        OnColor="{AppThemeBinding Dark={StaticResource SwitchBackgroundColorDark}, Light={StaticResource SwitchBackgroundColor}}"
                                        IsToggled="{Binding IsSelected, Mode=TwoWay}"
                                        Margin="16,0"
                                        HorizontalOptions="End"
                                        VerticalOptions="Center">
                                        <Switch.Triggers>
                                            <DataTrigger TargetType="Switch"
                                                         Binding="{Binding IsSelected}"
                                                         Value="False">
                                                <Setter Property="ThumbColor"
                                                        Value="{AppThemeBinding Dark={StaticResource InactiveThumbColorDark}, Light={StaticResource InactiveThumbColor}}" />
                                            </DataTrigger>
                                            <DataTrigger TargetType="Switch"
                                                         Binding="{Binding IsSelected}"
                                                         Value="True">
                                                <Setter Property="ThumbColor"
                                                        Value="{AppThemeBinding Dark={StaticResource ActiveThumbColorDark}, Light={StaticResource ActiveThumbColor}}" />
                                            </DataTrigger>
                                        </Switch.Triggers>
                                    </Switch>
                                </StackLayout>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackLayout>
        </controls:CustomFrame>
    </StackLayout>
</pages:PopupPage>