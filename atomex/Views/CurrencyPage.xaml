<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="atomex.CurrencyPage"
             xmlns:controls="clr-namespace:atomex.CustomElements"
             xmlns:converters="clr-namespace:atomex.Converters"
             xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
             Title="{Binding Currency.Description}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:EqualsConverter x:Key="EqualsConverter"/>
            <converters:NotEqualsConverter x:Key="NotEqualsConverter"/>
            <converters:AllTrueMultiConverter x:Key="AllTrueConverter" /> 
        </ResourceDictionary>
    </ContentPage.Resources>
    <RefreshView IsRefreshing="{Binding IsRefreshing}"
                 Command="{Binding RefreshCommand}">
        <ScrollView>
            <StackLayout Spacing="0">
                <Frame Padding="0"
                       Margin="16"
                       HasShadow="False"
                       CornerRadius="49"
                       HeightRequest="98"
                       WidthRequest="98"
                       HorizontalOptions="Center"
                       BackgroundColor="{AppThemeBinding Dark={StaticResource IconFrameBackgroundColorDark}, Light={StaticResource IconFrameBackgroundColor}}">
                    <Image Source="{Binding CurrencyCode}"
                           Margin="30"/>
                </Frame>
                <StackLayout Margin="16,0"
                             Spacing="10"
                             Orientation="Horizontal"
                             HorizontalOptions="CenterAndExpand">
                    <Label TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="24"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding AvailableAmount, StringFormat='{0:0.#########}'}"/>
                                <Span Text=" "/>
                                <Span Text="{Binding CurrencyCode}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Image Source="ic_update"
                           WidthRequest="16"
                           HeightRequest="21"
                           VerticalOptions="Center"/>
                </StackLayout>
                <Label Text="{Binding AvailableAmountInBase, StringFormat='${0:f2}'}"
                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                       FontSize="14"
                       FontFamily="{DynamicResource RegularFont}"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"
                       Margin="16,4,16,12"/>
                <Label Text="{Binding AvailableAmountInBase, StringFormat='${0:f2}'}"
                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                       FontSize="14"
                       FontFamily="{DynamicResource RegularFont}"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding CurrencyCode, StringFormat='1 {0} ='}"/>
                            <Span Text=" "/>
                            <Span Text="{Binding Price, StringFormat='${0:f2}'}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Grid RowSpacing="4"
                      ColumnSpacing="24"
                      HorizontalOptions="CenterAndExpand"
                      Margin="16,12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="56" />
                        <RowDefinition Height="20" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ImageButton Padding="21"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"
                                 Command="{Binding SendCommand}"
                                 Source="ic_send"/>
                    <Label Grid.Row="1"
                           Text="{helpers:Translate SendButton}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="1"
                                 Padding="21"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"
                                 Command="{Binding ReceiveCommand}"
                                 Source="ic_receive"/>
                    <Label Grid.Row="1"
                           Grid.Column="1"
                           Text="{helpers:Translate ReceiveButton}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="2"
                                 Padding="19"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource HighlightingButtonBackgroundColorDark}, Light={StaticResource HighlightingButtonBackgroundColor}}"
                                 Source="ic_exchange"/>
                    <Label Grid.Row="1"
                           Grid.Column="2"
                           Text="{helpers:Translate ExchangeButton}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="3"
                                 Padding="19"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalButtonBackgroundColorDark}, Light={StaticResource AdditionalButtonBackgroundColor}}"
                                 Source="ic_card"/>
                    <Label Grid.Row="1"
                           Grid.Column="3"
                           Text="{helpers:Translate BuyButton}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                </Grid>
                
                <Grid Margin="8,20,8,0"
                      HorizontalOptions="FillAndExpand"
                      ColumnSpacing="0"
                      RowSpacing="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="36" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <Frame Grid.ColumnSpan="3"
                           CornerRadius="18"
                           HasShadow="False"
                           Padding="0"
                           BackgroundColor="{AppThemeBinding Dark={StaticResource TabSwitcherBackgroundColorDark}, Light={StaticResource TabSwitcherBackgroundColor}}"/>
                    <Button CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="Activity"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Activity">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Activity">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark={StaticResource ActiveTabBackgroundColorDark}, Light={StaticResource ActiveTabBackgroundColor}}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Activity'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button Grid.Column="1"
                            CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="Collectibles"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Collectibles">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Collectibles">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark={StaticResource ActiveTabBackgroundColorDark}, Light={StaticResource ActiveTabBackgroundColor}}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Collectibles'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button Grid.Column="2"
                            CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="{helpers:Translate Addresses}"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Addresses">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Addresses">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark={StaticResource ActiveTabBackgroundColorDark}, Light={StaticResource ActiveTabBackgroundColor}}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Addresses'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                </Grid>
                <ListView ItemsSource="{Binding GroupedTransactions}"
                          SelectionMode="Single"
                          SelectedItem="{Binding SelectedTransaction}"
                          ItemSelected="ItemSelected"
                          BackgroundColor="Transparent"
                          SeparatorVisibility="Default"
                          SeparatorColor="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"
                          IsGroupingEnabled="True"
                          VerticalScrollBarVisibility="Never"
                          HasUnevenRows="True"
                          RowHeight="48"
                          x:Name="TransactionsListView"
                          Footer=""
                          IsVisible="False">
                    <ListView.Triggers>
                        <DataTrigger TargetType="ListView"
                                     Binding="{Binding CurrencyActiveTab}"
                                     Value="Activity">
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </DataTrigger>
                    </ListView.Triggers>
                    <ListView.GroupHeaderTemplate>
                        <DataTemplate>
                            <controls:CustomViewCell BindableHeight="{Binding GroupHeight}">
                                <StackLayout VerticalOptions="FillAndExpand"
                                             BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                                             Spacing="0">
                                    <Label Text="{Binding Date, StringFormat='{}{0:dddd, dd MMMM}'}"
                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           Padding="16,0"
                                           FontSize="12"
                                           VerticalOptions="FillAndExpand"
                                           VerticalTextAlignment="End"
                                           HorizontalTextAlignment="Start"/>
                                </StackLayout>
                            </controls:CustomViewCell>
                        </DataTemplate>
                    </ListView.GroupHeaderTemplate>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <controls:CustomViewCell SelectedBackgroundColor="{AppThemeBinding Dark={StaticResource ListViewSelectedBackgroundColorDark}, Light={StaticResource ListViewSelectedBackgroundColor}}">
                                <Grid Padding="16,0" 
                                      HorizontalOptions="FillAndExpand"
                                      ColumnSpacing="0"
                                      RowSpacing="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="48" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="16" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding Description}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                           FontSize="16"
                                           HorizontalOptions="StartAndExpand"
                                           VerticalTextAlignment="Center"
                                           HorizontalTextAlignment="Start"/>
                                    <Image Grid.Column="1"
                                           Margin="0"
                                           HorizontalOptions="End">
                                        <Image.Triggers>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding State}"
                                                         Value="Confirmed">
                                                <Setter Property="Source"
                                                        Value="ic_status__completed"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding State}"
                                                         Value="Pending">
                                                <Setter Property="Source"
                                                        Value="ic_status__empty"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding State}"
                                                         Value="Failed">
                                                <Setter Property="Source"
                                                        Value="ic_status__canceled"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding State}"
                                                         Value="Unconfirmed">
                                                <Setter Property="Source"
                                                        Value="ic_status__empty"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding State}"
                                                         Value="Unknown">
                                                <Setter Property="Source"
                                                        Value="ic_status__empty"/>
                                            </DataTrigger>
                                        </Image.Triggers>
                                    </Image>
                                    <lottie:AnimationView Grid.Column="1"
                                                          WidthRequest="16"
                                                          HeightRequest="16"
                                                          Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                                          AnimationSource="AssetOrBundle"
                                                          ImageAssetsFolder="Assets/Animations"
                                                          AutoPlay="True"
                                                          RepeatMode="Infinite"
                                                          Speed="1"
                                                          VerticalOptions="Center"
                                                          HorizontalOptions="End"
                                                          IsVisible="False">
                                        <lottie:AnimationView.Triggers>
                                            <DataTrigger TargetType="lottie:AnimationView"
                                                         Binding="{Binding State}"
                                                         Value="Confirmed">
                                                <Setter Property="IsVisible"
                                                        Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="lottie:AnimationView"
                                                         Binding="{Binding State}"
                                                         Value="Pending">
                                                <Setter Property="IsVisible"
                                                        Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="lottie:AnimationView"
                                                         Binding="{Binding State}"
                                                         Value="Failed">
                                                <Setter Property="IsVisible"
                                                        Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="lottie:AnimationView"
                                                         Binding="{Binding State}"
                                                         Value="Unconfirmed">
                                                <Setter Property="IsVisible"
                                                        Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="lottie:AnimationView"
                                                         Binding="{Binding State}"
                                                         Value="Unknown">
                                                <Setter Property="IsVisible"
                                                        Value="True"/>
                                            </DataTrigger>
                                        </lottie:AnimationView.Triggers>
                                    </lottie:AnimationView>
                                </Grid>
                            </controls:CustomViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackLayout IsVisible="False">
                    <StackLayout.Triggers>
                        <MultiTrigger TargetType="StackLayout">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding CanShowMoreTxs}"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding CurrencyActiveTab}"
                                                  Value="Activity"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </MultiTrigger>
                    </StackLayout.Triggers>
                    <Button Text="{helpers:Translate ShowAll}"
                            BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalButtonBackgroundColorDark}, Light={StaticResource AdditionalButtonBackgroundColor}}"
                            TextColor="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"
                            Padding="16,0"
                            TextTransform="None"
                            CornerRadius="25"
                            HeightRequest="50"
                            Margin="16,0,16,16"
                            Clicked="ShowAllTxs"/>
                </StackLayout>


                <!--<ListView ItemsSource="{Binding AddressesViewModel.Addresses}"
                          SelectionMode="Single"
                          SelectedItem="{Binding SelectedAddress}"
                          ItemSelected="ItemSelected"
                          BackgroundColor="Transparent"
                          SeparatorVisibility="None"
                          VerticalScrollBarVisibility="Never"
                          HasUnevenRows="True"
                          RowHeight="44"
                          Footer=""
                          x:Name="AddressesListView"
                          IsVisible="False">
                    <ListView.Triggers>
                        <DataTrigger TargetType="ListView"
                                     Binding="{Binding CurrencyActiveTab}"
                                     Value="Addresses">
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </DataTrigger>
                    </ListView.Triggers>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <controls:CustomViewCell SelectedBackgroundColor="{AppThemeBinding Dark={StaticResource ListViewSelectedBackgroundColorDark}, Light={StaticResource ListViewSelectedBackgroundColor}}">
                                <Grid Padding="16,0" 
                                      HorizontalOptions="FillAndExpand"
                                      ColumnSpacing="0"
                                      RowSpacing="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24" />
                                        <RowDefinition Height="20" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="16" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding Address}"
                                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="16"
                                           VerticalTextAlignment="Center"
                                           HorizontalTextAlignment="Start"
                                           LineBreakMode="MiddleTruncation"
                                           Padding="0,0,0,70"/>
                                    <Label Grid.Row="1"
                                           Text="{Binding Balance}"
                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="14"
                                           VerticalTextAlignment="Center"
                                           HorizontalTextAlignment="Start"
                                           LineBreakMode="MiddleTruncation"
                                           Padding="0,0,0,70">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding }"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding }"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                    <Image Grid.Column="1"
                                           Grid.RowSpan="2"
                                           Source="RightArrow__gray"
                                           Margin="8,0"/>
                                </Grid>
                            </controls:CustomViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>-->
            </StackLayout>
        </ScrollView>
    </RefreshView>



    <!--<ListView ItemsSource="{Binding GroupedTransactions}"
              SelectionMode="Single"
              SelectedItem="{Binding SelectedTransaction}"
              ItemSelected="ItemSelected"
              BackgroundColor="Transparent"
              SeparatorVisibility="Default"
              SeparatorColor="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"
              IsGroupingEnabled="True"
              HasUnevenRows="True"
              Footer="">
        <ListView.Header>
            <StackLayout Spacing="0">
                <Frame Padding="0"
                       Margin="16"
                       HasShadow="False"
                       CornerRadius="49"
                       HeightRequest="98"
                       WidthRequest="98"
                       HorizontalOptions="Center"
                       BackgroundColor="{AppThemeBinding Dark='#1AC4DEFF', Light='#1AC4DEFF'}">
                    <Image Source="{Binding CurrencyCode}"
                           Margin="30"/>
                </Frame>
                <StackLayout Margin="16,0"
                             Spacing="10"
                             Orientation="Horizontal"
                             HorizontalOptions="CenterAndExpand">
                    <Label TextColor="{AppThemeBinding Dark='#F7DCECFF', Light={StaticResource MainTextColor}}"
                           FontSize="24"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding AvailableAmount, StringFormat='{0:0.#########}'}"/>
                                <Span Text=" "/>
                                <Span Text="{Binding CurrencyCode}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Image Source="ic_update"
                           WidthRequest="16"
                           HeightRequest="21"
                           VerticalOptions="Center"/>
                </StackLayout>
                <Label Text="{Binding AvailableAmountInBase, StringFormat='${0:f2}'}"
                       TextColor="{AppThemeBinding Dark='#61DCECFF', Light={StaticResource AdditionalTextColor}}"
                       FontSize="14"
                       FontFamily="{DynamicResource RegularFont}"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"
                       Margin="16,4,16,12"/>
                <Label Text="{Binding AvailableAmountInBase, StringFormat='${0:f2}'}"
                       TextColor="{AppThemeBinding Dark='#61DCECFF', Light={StaticResource AdditionalTextColor}}"
                       FontSize="14"
                       FontFamily="{DynamicResource RegularFont}"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding CurrencyCode, StringFormat='1 {0} ='}"/>
                            <Span Text=" "/>
                            <Span Text="{Binding Price, StringFormat='${0:f2}'}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Grid RowSpacing="4"
                      ColumnSpacing="24"
                      HorizontalOptions="CenterAndExpand"
                      Margin="16,12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="56" />
                        <RowDefinition Height="20" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ImageButton Padding="21"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark='#20439E', Light='#20439E'}"
                                 Command="{Binding SendCommand}"
                                 Source="ic_send"/>
                    <Label Grid.Row="1"
                           Text="{helpers:Translate SendButton}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="1"
                                 Padding="21"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark='#20439E', Light='#20439E'}"
                                 Command="{Binding ReceiveCommand}"
                                 Source="ic_receive"/>
                    <Label Grid.Row="1"
                           Grid.Column="1"
                           Text="{helpers:Translate ReceiveButton}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="2"
                                 Padding="19"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark='#01A299', Light='#01A299'}"
                                 Source="ic_exchange"/>
                    <Label Grid.Row="1"
                           Grid.Column="2"
                           Text="{helpers:Translate ExchangeButton}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="3"
                                 Padding="19"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark='#29DCECFF', Light='#29DCECFF'}"
                                 Source="ic_card"/>
                    <Label Grid.Row="1"
                           Grid.Column="3"
                           Text="{helpers:Translate BuyButton}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                </Grid>
                Tabs switcher
                <Grid Margin="8,20"
                      HorizontalOptions="FillAndExpand"
                      ColumnSpacing="0"
                      RowSpacing="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="36" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <Frame Grid.ColumnSpan="3"
                           CornerRadius="18"
                           HasShadow="False"
                           Padding="0"
                           BackgroundColor="{AppThemeBinding Dark='#14DCECFF', Light='#0F002041'}"/>
                    <Button CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="Activity"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            TextColor="{AppThemeBinding Dark='#61DCECFF', Light='#80000E22'}"
                            BackgroundColor="Transparent"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Activity">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Activity">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark='#29DCECFF', Light='#FFFFFF'}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Activity'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark='#61DCECFF', Light='#80000E22'}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button Grid.Column="1"
                            CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="Collectibles"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Collectibles">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Collectibles">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark='#29DCECFF', Light='#FFFFFF'}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Collectibles'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark='#61DCECFF', Light='#80000E22'}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button Grid.Column="2"
                            CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="{helpers:Translate Addresses}"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Addresses">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Addresses">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark='#29DCECFF', Light='#FFFFFF'}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Addresses'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark='#61DCECFF', Light='#80000E22'}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                </Grid>
            </StackLayout>
        </ListView.Header>
        <ListView.GroupHeaderTemplate>
            <DataTemplate>
                <ViewCell Height="36">
                    <StackLayout VerticalOptions="FillAndExpand"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                                 Spacing="0">
                        <Label Text="{Binding Date, StringFormat='{}{0:dddd, dd MMMM}'}"
                               TextColor="{AppThemeBinding Dark='#61DCECFF', Light={StaticResource AdditionalTextColor}}"
                               FontFamily="{DynamicResource RegularFont}"
                               Padding="16,0"
                               FontSize="12"
                               VerticalOptions="FillAndExpand"
                               VerticalTextAlignment="End"
                               HorizontalTextAlignment="Start"/>
                    </StackLayout>
                </ViewCell>
            </DataTemplate>
        </ListView.GroupHeaderTemplate>
        <ListView.ItemTemplate>
            <DataTemplate>
                <controls:CustomViewCell SelectedBackgroundColor="{AppThemeBinding Dark={StaticResource ListViewSelectedBackgroundColorDark}, Light={StaticResource ListViewSelectedBackgroundColor}}">
                    <Grid Padding="16,0" 
                          HorizontalOptions="FillAndExpand"
                          ColumnSpacing="0"
                          RowSpacing="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="16" />
                        </Grid.ColumnDefinitions>
                        <Label Text="{Binding Description}"
                               FontFamily="{DynamicResource RegularFont}"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               FontSize="16"
                               HorizontalOptions="StartAndExpand"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="Start"/>
                        <Image Grid.Column="1"
                               Margin="0"
                               HorizontalOptions="End">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Confirmed">
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Pending">
                                    <Setter Property="Source"
                                            Value="ic_status__empty"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Failed">
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Unconfirmed">
                                    <Setter Property="Source"
                                            Value="ic_status__empty"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Unknown">
                                    <Setter Property="Source"
                                            Value="ic_status__empty"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <lottie:AnimationView Grid.Column="1"
                                              WidthRequest="16"
                                              HeightRequest="16"
                                              Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                              AnimationSource="AssetOrBundle"
                                              ImageAssetsFolder="Assets/Animations"
                                              AutoPlay="True"
                                              RepeatMode="Infinite"
                                              Speed="1"
                                              VerticalOptions="Center"
                                              HorizontalOptions="End"
                                              IsVisible="False">
                            <lottie:AnimationView.Triggers>
                                <DataTrigger TargetType="lottie:AnimationView"
                                             Binding="{Binding State}"
                                             Value="Confirmed">
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </DataTrigger>
                                <DataTrigger TargetType="lottie:AnimationView"
                                             Binding="{Binding State}"
                                             Value="Pending">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="lottie:AnimationView"
                                             Binding="{Binding State}"
                                             Value="Failed">
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </DataTrigger>
                                <DataTrigger TargetType="lottie:AnimationView"
                                             Binding="{Binding State}"
                                             Value="Unconfirmed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="lottie:AnimationView"
                                             Binding="{Binding State}"
                                             Value="Unknown">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </lottie:AnimationView.Triggers>
                        </lottie:AnimationView>
                    </Grid>
                </controls:CustomViewCell>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>-->
</ContentPage>