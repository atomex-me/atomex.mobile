<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="atomex.CurrencyPage"
             xmlns:controls="clr-namespace:atomex.CustomElements"
             xmlns:converters="clr-namespace:atomex.Converters"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
             Title="{Binding Currency.Description}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:StringToBoolConverter x:Key="StringToBool"/>
            <converters:StringToBoolConverterInvert x:Key="StringToBoolInvert"/>
            <converters:InverseBoolConverter x:Key="InverseBool"/>
            <converters:AllTrueMultiConverter x:Key="AllTrueConverter" />
            <converters:NotEqualsConverter x:Key="NotEqualsConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ListView ItemsSource="{Binding GroupedTransactions}"
              SelectionMode="Single"
              SelectedItem="{Binding SelectedTransaction}"
              ItemSelected="ItemSelected"
              BackgroundColor="Transparent"
              SeparatorVisibility="Default"
              SeparatorColor="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"
              IsGroupingEnabled="True"
              HasUnevenRows="True"
              Footer="">
        <ListView.Header>
            <StackLayout Spacing="0">
                <Frame Padding="0"
                       Margin="16"
                       HasShadow="False"
                       CornerRadius="49"
                       HeightRequest="98"
                       WidthRequest="98"
                       HorizontalOptions="Center"
                       BackgroundColor="{AppThemeBinding Dark='#1AC4DEFF', Light='#1AC4DEFF'}">
                    <Image Source="{Binding CurrencyCode}"
                           Margin="30"/>
                </Frame>
                <StackLayout Margin="16,0"
                             Spacing="10"
                             Orientation="Horizontal"
                             HorizontalOptions="CenterAndExpand">
                    <Label TextColor="{AppThemeBinding Dark='#F7DCECFF', Light={StaticResource MainTextColor}}"
                           FontSize="24"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding AvailableAmount, StringFormat='{0:0.#########}'}"/>
                                <Span Text=" "/>
                                <Span Text="{Binding CurrencyCode}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Image Source="ic_update"
                           WidthRequest="16"
                           HeightRequest="21"
                           VerticalOptions="Center"/>
                </StackLayout>
                <Label Text="{Binding AvailableAmountInBase, StringFormat='${0:f2}'}"
                       TextColor="{AppThemeBinding Dark='#61DCECFF', Light={StaticResource AdditionalTextColor}}"
                       FontSize="14"
                       FontFamily="{DynamicResource RegularFont}"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"
                       Margin="16,4,16,12"/>
                <Label Text="{Binding AvailableAmountInBase, StringFormat='${0:f2}'}"
                       TextColor="{AppThemeBinding Dark='#61DCECFF', Light={StaticResource AdditionalTextColor}}"
                       FontSize="14"
                       FontFamily="{DynamicResource RegularFont}"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding CurrencyCode, StringFormat='1 {0} ='}"/>
                            <Span Text=" "/>
                            <Span Text="{Binding Price, StringFormat='${0:f2}'}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Grid RowSpacing="4"
                      ColumnSpacing="24"
                      HorizontalOptions="CenterAndExpand"
                      Margin="16,12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="56" />
                        <RowDefinition Height="20" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ImageButton Padding="21"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark='#20439E', Light='#20439E'}"
                                 Command="{Binding SendCommand}"
                                 Source="ic_send"/>
                    <Label Grid.Row="1"
                           Text="{helpers:Translate SendButton}"
                           TextColor="{AppThemeBinding Dark='#F7DCECFF', Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="1"
                                 Padding="21"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark='#20439E', Light='#20439E'}"
                                 Command="{Binding ReceiveCommand}"
                                 Source="ic_receive"/>
                    <Label Grid.Row="1"
                           Grid.Column="1"
                           Text="{helpers:Translate ReceiveButton}"
                           TextColor="{AppThemeBinding Dark='#F7DCECFF', Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="2"
                                    Padding="19"
                                    Margin="0"
                                    CornerRadius="28"
                                    HeightRequest="56"
                                    WidthRequest="56"
                                    HorizontalOptions="Center"
                                    BackgroundColor="{AppThemeBinding Dark='#01A299', Light='#01A299'}"
                                    Source="ic_exchange"/>
                    <Label Grid.Row="1"
                           Grid.Column="2"
                           Text="{helpers:Translate ExchangeButton}"
                           TextColor="{AppThemeBinding Dark='#F7DCECFF', Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                    <ImageButton Grid.Column="3"
                                 Padding="19"
                                 Margin="0"
                                 CornerRadius="28"
                                 HeightRequest="56"
                                 WidthRequest="56"
                                 HorizontalOptions="Center"
                                 BackgroundColor="{AppThemeBinding Dark='#29DCECFF', Light='#29DCECFF'}"
                                 Source="ic_card"/>
                    <Label Grid.Row="1"
                           Grid.Column="3"
                           Text="{helpers:Translate BuyButton}"
                           TextColor="{AppThemeBinding Dark='#F7DCECFF', Light={StaticResource MainTextColor}}"
                           FontSize="14"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           Padding="0"/>
                </Grid>
                <!--Tabs switcher-->
                <Grid Margin="8,20"
                      HorizontalOptions="FillAndExpand"
                      ColumnSpacing="0"
                      RowSpacing="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="36" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <Frame Grid.ColumnSpan="3"
                           CornerRadius="18"
                           HasShadow="False"
                           Padding="0"
                           BackgroundColor="{AppThemeBinding Dark='#14DCECFF', Light='#0F002041'}"/>
                    <Button CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="Activity"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            TextColor="{AppThemeBinding Dark='#61DCECFF', Light='#80000E22'}"
                            BackgroundColor="Transparent"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Activity">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Activity">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark='#29DCECFF', Light='#FFFFFF'}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Activity'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark='#61DCECFF', Light='#80000E22'}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button Grid.Column="1"
                            CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="Collectibles"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Collectibles">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Collectibles">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark='#29DCECFF', Light='#FFFFFF'}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Collectibles'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark='#61DCECFF', Light='#80000E22'}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button Grid.Column="2"
                            CornerRadius="16"
                            Padding="0"
                            Margin="2"
                            Text="{helpers:Translate Addresses}"
                            FontFamily="{DynamicResource RegularFont}"
                            TextTransform="None"
                            FontSize="14"
                            Command="{Binding ChangeCurrencyTabCommand}"
                            CommandParameter="Addresses">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab}"
                                         Value="Addresses">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark='#29DCECFF', Light='#FFFFFF'}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CurrencyActiveTab, Converter={StaticResource NotEqualsConverter}, ConverterParameter='Addresses'}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark='#61DCECFF', Light='#80000E22'}"/>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                </Grid>
            </StackLayout>
        </ListView.Header>
        <ListView.GroupHeaderTemplate>
            <DataTemplate>
                <ViewCell Height="36">
                    <StackLayout VerticalOptions="FillAndExpand"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                                 Spacing="0">
                        <Label Text="{Binding Date, StringFormat='{}{0:MMMM dd, yyyy}'}"
                               TextColor="{AppThemeBinding Dark='#61DCECFF', Light={StaticResource AdditionalTextColor}}"
                               FontFamily="{DynamicResource RegularFont}"
                               Padding="16,0"
                               FontSize="12"
                               VerticalOptions="FillAndExpand"
                               VerticalTextAlignment="End"
                               HorizontalTextAlignment="Start"/>
                    </StackLayout>
                </ViewCell>
            </DataTemplate>
        </ListView.GroupHeaderTemplate>
        <ListView.ItemTemplate>
            <DataTemplate>
                <controls:CustomViewCell SelectedBackgroundColor="{AppThemeBinding Dark={StaticResource ListViewSelectedBackgroundColorDark}, Light={StaticResource ListViewSelectedBackgroundColor}}"
                                         Height="48">
                    <StackLayout Spacing="0"
                                 Orientation="Horizontal"
                                 Padding="16,0">
                        <Label FontFamily="{DynamicResource RegularFont}"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               FontSize="16"
                               HorizontalOptions="Start"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="Start">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSent}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxReceived}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSwapPayment}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSwapRedeem}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSwapRefund}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSwapCall}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxTokenCall}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxTokenApprove}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label HorizontalTextAlignment="Start"
                               VerticalTextAlignment="Center"
                               HorizontalOptions="StartAndExpand"
                               FontSize="16"
                               FontFamily="{DynamicResource RegularFont}">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.######}'}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.######}'}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.######}'}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Image Margin="0"
                               Source="ic_status__completed"
                               HorizontalOptions="End"/>
                    </StackLayout>
                </controls:CustomViewCell>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>
    
    <!--<ListView ItemsSource="{Binding GroupedTransactions}"
              Style="{DynamicResource TxListViewStyle}"
              SelectionMode="Single"
              SelectedItem="{Binding SelectedTransaction}"
              ItemSelected="ItemSelected"
              CachingStrategy="RetainElement"
              BackgroundColor="Transparent"
              RefreshCommand="{Binding UpdateCurrencyCommand}"
              IsRefreshing="{Binding IsLoading}"
              Footer="">
        <ListView.Header>
            <StackLayout Spacing="0"
                         BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}">
                <StackLayout Style="{DynamicResource CurrencyHeaderLayoutStyle}">
                    <Image Style="{DynamicResource CurrencyIconStyle}"
                           Source="{Binding CurrencyCode}"/>
                    <Label Text="{Binding AvailableAmount}"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           HorizontalOptions="Center"
                           IsVisible="{Binding IsLoading, Mode=OneWay, Converter={StaticResource InverseBool}}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding TotalAmount, StringFormat='{0:0.#########}'}"
                                      FontSize="20"
                                      FontFamily="{DynamicResource BoldFont}"/>
                                <Span Text=" " /> 
                                <Span Text="{Binding CurrencyCode}"
                                      FontSize="16"
                                      FontFamily="{DynamicResource BoldFont}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label FontFamily="{DynamicResource RegularFont}"
                           FontSize="14"
                           Text="{Binding AvailableAmountInBase, StringFormat='${0:0.##}'}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           VerticalTextAlignment="Start"
                           HorizontalOptions="Center"
                           IsVisible="{Binding IsLoading, Mode=OneWay, Converter={StaticResource InverseBool}}"/>
                    <StackLayout Spacing="0"
                                 Orientation="Horizontal"
                                 HorizontalOptions="CenterAndExpand">
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding UnconfirmedAmountTappedCommand}"/>
                        </StackLayout.GestureRecognizers>
                        <StackLayout.IsVisible>
                            <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                <Binding Path="HasUnconfirmedAmount" Mode="OneWay" />
                                <Binding Path="IsLoading" Mode="OneWay" Converter="{StaticResource InverseBool}"/>
                            </MultiBinding>
                        </StackLayout.IsVisible>
                        <Image Source="ic_question"
                               WidthRequest="16"
                               HeightRequest="16"/>
                        <Label FontFamily="{DynamicResource RegularFont}"
                               Text="{Binding UnconfirmedAmount, StringFormat='{0:0.#########}'}"
                               FontSize="12"
                               Padding="5,0"
                               TextColor="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"
                               VerticalTextAlignment="Center"
                               HorizontalOptions="Center"/>
                        <Label FontFamily="{DynamicResource RegularFont}"
                               FontSize="12"
                               Text="{Binding UnconfirmedAmountInBase, StringFormat='({0:0.##}$)'}"
                               TextColor="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"
                               VerticalTextAlignment="Center"
                               HorizontalOptions="Center"/>
                    </StackLayout>
                    <Label Text="{helpers:Translate BalanceUpdatingLabel}"
                           Style="{DynamicResource RefreshLabelStyle}"
                           IsVisible="{Binding IsLoading}"/>
                    <StackLayout Style="{DynamicResource CurrencyActionButtonsLayoutStyle}">
                        <controls:LeftRoundedButton Text="{helpers:Translate SendButton}"
                                                    Style="{DynamicResource CurrencyActionButtonStyle}"
                                                    Command="{Binding SendPageCommand}">
                            <controls:LeftRoundedButton.Triggers>
                                <DataTrigger TargetType="controls:LeftRoundedButton"
                                             Binding="{Binding TotalAmount}"
                                             Value="0">
                                    <Setter Property="Opacity"
                                            Value="0.7"/>
                                </DataTrigger>
                            </controls:LeftRoundedButton.Triggers>
                        </controls:LeftRoundedButton>
                        <Button Text="{helpers:Translate ReceiveButton}"
                                Style="{DynamicResource CurrencyActionButtonStyle}"
                                Command="{Binding ReceivePageCommand}"/>
                        <Button Text="{helpers:Translate DelegateButton}"
                                IsVisible="{Binding IsStakingAvailable, FallbackValue=False, TargetNullValue=False}"
                                Style="{DynamicResource CurrencyActionButtonStyle}"
                                Command="{Binding StakingPageCommand}"/>
                        <controls:RightRoundedButton Text="{helpers:Translate ConvertButton}"
                                                     Style="{DynamicResource CurrencyActionButtonStyle}"
                                                     Command="{Binding ConvertPageCommand}"/>
                    </StackLayout>
                </StackLayout>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
                <StackLayout IsVisible="False"
                             BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                             VerticalOptions="FillAndExpand">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout"
                                     Binding="{Binding GroupedTransactions.Count}"
                                     Value="0">
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </DataTrigger>
                    </StackLayout.Triggers>
                    <Image Source="Magnifier"
                           WidthRequest="45"
                           HeightRequest="45"
                           Margin="20,40,20,10"
                           VerticalOptions="CenterAndExpand"/>
                    <Label Text="{helpers:Translate NoTransactionsLabel}"
                           FontFamily="{DynamicResource RegularFont}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           FontSize="18"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Start"/>
                    <RelativeLayout Style="{DynamicResource UpdateButtonLayoutStyle}"
                                    HorizontalOptions="Center">
                        <Button Text="{helpers:Translate UpdateButton}"
                                Style="{DynamicResource CurrencyActionButtonStyle}"
                                CornerRadius="20"
                                RelativeLayout.WidthConstraint="80"
                                RelativeLayout.HeightConstraint="40"
                                Command="{Binding UpdateCurrencyCommand}">
                            <Button.Triggers>
                                <DataTrigger TargetType="Button"
                                             Binding="{Binding IsLoading}"
                                             Value="True">
                                    <Setter Property="Opacity"
                                            Value="0.3"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Button"
                                             Binding="{Binding IsLoading}"
                                             Value="False">
                                    <Setter Property="Opacity"
                                            Value="1"/>
                                </DataTrigger>
                            </Button.Triggers>
                        </Button>
                        <ActivityIndicator RelativeLayout.XConstraint= "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=30}"
	             	                       RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=10}"
                                           RelativeLayout.WidthConstraint="20"
                                           RelativeLayout.HeightConstraint="20"
                                           BackgroundColor="Transparent"
                                           IsVisible="{Binding IsLoading}"
                                           IsRunning="{Binding IsLoading}"
                                           Color="{AppThemeBinding Dark={StaticResource LoaderColorDark}, Light=Black}"/>
                    </RelativeLayout>
                </StackLayout>
            </StackLayout>
        </ListView.Header>
        <ListView.GroupHeaderTemplate>
            <DataTemplate>
                <ViewCell Height="20">
                    <StackLayout HeightRequest="20"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                                 Spacing="0">
                        <Label Text="{Binding Date, StringFormat='{}{0:MMMM dd, yyyy}'}"
                               BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               FontFamily="{DynamicResource RegularFont}"
                               Padding="10,0"
                               FontSize="12"
                               VerticalTextAlignment="Center"
                               VerticalOptions="CenterAndExpand"/>
                    </StackLayout>
                </ViewCell>
            </DataTemplate>
        </ListView.GroupHeaderTemplate>
        <ListView.ItemTemplate>
            <DataTemplate>
                <controls:CustomViewCell SelectedBackgroundColor="{AppThemeBinding Dark={StaticResource ListViewSelectedBackgroundColorDark}, Light={StaticResource ListViewSelectedBackgroundColor}}">
                    <Grid RowSpacing="0"
                          ColumnSpacing="0"
                          VerticalOptions="Center"
                          BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.Triggers>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Confirmed">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewConfirmedStateColor}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Pending">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewPendingStateColor}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Failed">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewFailedStateColor}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Unconfirmed">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewPendingStateColor}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Unknown">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewPendingStateColor}"/>
                            </DataTrigger>
                        </Grid.Triggers>
                        <Image Grid.RowSpan="2"
                               Margin="10,15">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="Source"
                                            Value="ic_input"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="Source"
                                            Value="ic_output"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="Source"
                                            Value="ic_payment"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="Source"
                                            Value="ic_redeem"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="Source"
                                            Value="ic_refund"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="Source"
                                            Value="ic_approve"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="Source"
                                            Value="ic_approve"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="Source"
                                            Value="ic_approve"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Label Grid.Column="1"
                               Grid.ColumnSpan="2"
                               FontFamily="{DynamicResource RegularFont}"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               FontSize="14"
                               VerticalTextAlignment="End"
                               HorizontalTextAlignment="Start">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSent}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxReceived}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSwapPayment}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSwapRedeem}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSwapRefund}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxSwapCall}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxTokenCall}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="Text"
                                            Value="{helpers:Translate TxTokenApprove}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Column="3"
                               Grid.RowSpan="2"
                               HorizontalTextAlignment="End"
                               VerticalTextAlignment="Center"
                               Padding="10,0">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.######}'}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.######}'}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.######}'}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.######}'}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding CurrencyCode}"
                                                      FontFamily="{DynamicResource RegularFont}"
                                                      FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Row="1"
                               Grid.Column="1"
                               VerticalTextAlignment="Start"
                               HorizontalTextAlignment="Start"
                               FontFamily="{DynamicResource LightFont}"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               FontSize="12">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="Text" Value="{helpers:Translate ToLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="Text" Value="{helpers:Translate FromLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="Text" Value="{helpers:Translate ToLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="Text" Value="{helpers:Translate FromLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="Text" Value="{helpers:Translate FromLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="Text" Value="{helpers:Translate ToLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="Text" Value="{helpers:Translate ToLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="Text" Value="{helpers:Translate ToLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding CurrencyCode}"
                                             Value="BTC">
                                    <Setter Property="Text" Value="{helpers:Translate IdLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding CurrencyCode}"
                                             Value="LTC">
                                    <Setter Property="Text" Value="{helpers:Translate IdLabel, StringFormat='{0}:'}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Row="1"
                               Grid.Column="2"
                               VerticalTextAlignment="Start"
                               FontFamily="{DynamicResource LightFont}"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               FontSize="12"
                               Padding="3,0"
                               LineBreakMode="MiddleTruncation"
                               IsVisible="{Binding Alias, Mode=OneWay, Converter={StaticResource StringToBoolInvert}}">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="Text" Value="{Binding From, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="Text" Value="{Binding From, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="Text" Value="{Binding From, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding CurrencyCode}"
                                             Value="BTC">
                                    <Setter Property="Text" Value="{Binding Id}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding CurrencyCode}"
                                             Value="LTC">
                                    <Setter Property="Text" Value="{Binding Id}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Row="1"
                               Grid.Column="2"
                               Text="{Binding Alias}"
                               VerticalTextAlignment="Start"
                               HorizontalTextAlignment="Start"
                               LineBreakMode="TailTruncation"
                               TextColor="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"
                               FontFamily="{DynamicResource LightFont}"
                               FontSize="12"
                               Padding="3,0"
                               IsVisible="{Binding Alias, Mode=OneWay, Converter={StaticResource StringToBool}, FallbackValue='False'}"/>
                    </Grid>
                </controls:CustomViewCell>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>-->
</ContentPage>