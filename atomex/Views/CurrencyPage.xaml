<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="atomex.CurrencyPage"
             xmlns:controls="clr-namespace:atomex.CustomElements"
             xmlns:converters="clr-namespace:atomex.Converters"
             xmlns:resources="clr-namespace:atomex.Resources"
             Title="{Binding Currency.Description}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:StringToBoolConverter x:Key="StringToBool"/>
            <converters:StringToBoolConverterInvert x:Key="StringToBoolInvert"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ListView ItemsSource="{Binding GroupedTransactions}"
              IsGroupingEnabled="True"
              ItemTapped="OnListViewItemTapped"
              HasUnevenRows="True"
              SeparatorVisibility="Default"
              SeparatorColor="{DynamicResource ListViewSeparatorColor}"
              VerticalOptions="FillAndExpand"
              CachingStrategy="RetainElement"
              IsPullToRefreshEnabled="True"
              Refreshing="UpdateCurrency"
              x:Name="TxListView"
              RefreshControlColor="{DynamicResource HintTextColor}"
              BackgroundColor="{DynamicResource MainBackgroundColor}"
              Footer="">
        <ListView.Header>
            <StackLayout Spacing="0"
                         BackgroundColor="{DynamicResource AdditionalBackgroundColor}">
                <StackLayout VerticalOptions="Center" Margin="0,20">
                    <Image Style="{DynamicResource CurrencyIconStyle}"
                           Source="{Binding CurrencyCode}"/>
                    <Label Text="{Binding AvailableAmount}"
                           x:Name="AvailableAmountLabel"
                           TextColor="{DynamicResource MainTextColor}"
                           HorizontalOptions="Center">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding TotalAmount, StringFormat='{0:0.#########}'}"
                                      FontSize="20"
                                      FontFamily="{DynamicResource BoldFont}"/>
                                <Span Text=" " /> 
                                <Span Text="{Binding CurrencyCode}"
                                      FontSize="16"
                                      FontFamily="{DynamicResource BoldFont}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label x:Name="AvailableAmountInBaseLabel"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="14"
                           TextColor="{DynamicResource AdditionalTextColor}"
                           VerticalTextAlignment="Start"
                           HorizontalOptions="Center">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding AmountInBase, StringFormat='{0:0.##}'}"/>
                                <Span Text=" $"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label x:Name="RefreshLabel"
                           Text="{x:Static resources:AppResources.BalanceUpdatingLabel}"
                           Style="{DynamicResource RefreshLabelStyle}"/>
                    <StackLayout Style="{DynamicResource CurrencyActionButtonsLayoutStyle}">
                        <controls:LeftRoundedButton Text="{x:Static resources:AppResources.SendButton}"
                                                    Style="{DynamicResource CurrencyActionButtonStyle}"
                                                    Clicked="ShowSendPage"/>
                        <Button Text="{x:Static resources:AppResources.ReceiveButton}"
                                Style="{DynamicResource CurrencyActionButtonStyle}"
                                Clicked="ShowReceivePage"/>
                        <Button Text="{x:Static resources:AppResources.DelegateButton}"
                                x:Name="DelegateButton"
                                IsVisible="false"
                                Style="{DynamicResource CurrencyActionButtonStyle}"
                                Clicked="ShowDelegationPage"/>
                        <controls:RightRoundedButton Text="{x:Static resources:AppResources.ConvertButton}"
                                                        Style="{DynamicResource CurrencyActionButtonStyle}"
                                                        Clicked="ShowConversionPage"/>
                    </StackLayout>
                </StackLayout>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
                <StackLayout IsVisible="False"
                             x:Name="NoTxsLayout"
                             BackgroundColor="{DynamicResource MainBackgroundColor}"
                             VerticalOptions="FillAndExpand">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout"
                                     Binding="{Binding GroupedTransactions.Count}"
                                     Value="0">
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </DataTrigger>
                    </StackLayout.Triggers>
                    <Image Source="Magnifier"
                            WidthRequest="45"
                            HeightRequest="45"
                            Margin="20,40,20,10"
                            VerticalOptions="CenterAndExpand"/>
                    <Label Text="{x:Static resources:AppResources.NoTransactionsLabel}"
                            FontFamily="{DynamicResource RegularFont}"
                            TextColor="{DynamicResource AdditionalTextColor}"
                            FontSize="18"
                            HorizontalTextAlignment="Center"
                            VerticalTextAlignment="Start"/>
                    <RelativeLayout HorizontalOptions="Center"
                                    Margin="20">
                        <Button Text="{x:Static resources:AppResources.UpdateButton}"
                                Style="{DynamicResource CurrencyActionButtonStyle}"
                                x:Name="UpdateButton"
                                CornerRadius="20"
                                RelativeLayout.WidthConstraint="80"
                                RelativeLayout.HeightConstraint="40"
                                Clicked="UpdateCurrency"/>
                        <ActivityIndicator x:Name="Loader"
                                            RelativeLayout.XConstraint= "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=30}"
	             	                        RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=10}"
                                            RelativeLayout.WidthConstraint="20"
                                            RelativeLayout.HeightConstraint="20"
                                            Color="Black"/>
                    </RelativeLayout>
                </StackLayout>
            </StackLayout>
        </ListView.Header>
        <ListView.GroupHeaderTemplate>
            <DataTemplate>
                <ViewCell Height="20">
                    <StackLayout HeightRequest="20"
                                 BackgroundColor="{DynamicResource AdditionalBackgroundColor}"
                                 Spacing="0">
                        <Label Text="{Binding Date, StringFormat='{}{0:dd.MM.yyyy}'}"
                               BackgroundColor="{DynamicResource AdditionalBackgroundColor}"
                               TextColor="{DynamicResource AdditionalTextColor}"
                               FontFamily="{DynamicResource RegularFont}"
                               Padding="10,0"
                               FontSize="12"
                               VerticalTextAlignment="Center"
                               VerticalOptions="CenterAndExpand"/>
                    </StackLayout>
                </ViewCell>
            </DataTemplate>
        </ListView.GroupHeaderTemplate>
        <ListView.ItemTemplate>
            <DataTemplate>
                <controls:CustomViewCell SelectedBackgroundColor="{DynamicResource ListViewSelectedBackgroundColor}">
                    <Grid RowSpacing="0"
                          ColumnSpacing="0"
                          VerticalOptions="Center"
                          BackgroundColor="{DynamicResource MainBackgroudColor}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1.5*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="4.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.Triggers>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Confirmed">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewConfirmedStateColor}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Pending">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewPendingStateColor}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Failed">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewFailedStateColor}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Unconfirmed">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewPendingStateColor}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Unknown">
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource TxListViewPendingStateColor}"/>
                            </DataTrigger>
                        </Grid.Triggers>
                        <Image Grid.RowSpan="2"
                               Margin="10,15">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="Source"
                                            Value="Receive"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="Source"
                                            Value="Send"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="Source"
                                            Value="SwapPayment"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="Source"
                                            Value="SwapRedeem"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="Source"
                                            Value="SwapRefund"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="Source"
                                            Value="TxApprove"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="Source"
                                            Value="TxApprove"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="Source"
                                            Value="TxApprove"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Label Grid.Column="1"
                               Grid.ColumnSpan="2"
                               FontFamily="{DynamicResource RegularFont}"
                               TextColor="{DynamicResource MainTextColor}"
                               FontSize="14"
                               VerticalTextAlignment="End">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Output">
                                    <Setter Property="Text"
                                            Value="Sent"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="Input">
                                    <Setter Property="Text"
                                            Value="Received"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapPayment">
                                    <Setter Property="Text"
                                            Value="Swap payment"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRedeem">
                                    <Setter Property="Text"
                                            Value="Swap redeem"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapRefund">
                                    <Setter Property="Text"
                                            Value="Swap refund"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="SwapCall">
                                    <Setter Property="Text"
                                            Value="{Binding Description}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenCall">
                                    <Setter Property="Text"
                                            Value="{Binding Description}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Type}"
                                             Value="TokenApprove">
                                    <Setter Property="Text"
                                            Value="{Binding Description}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Column="3"
                                Grid.RowSpan="2"
                                HorizontalTextAlignment="End"
                                VerticalTextAlignment="Center"
                                Padding="10,0">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="Input">
                                    <Setter Property="TextColor"
                                            Value="Green"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.#####}'}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Currency.Name}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="Output">
                                    <Setter Property="TextColor"
                                            Value="Red"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Currency.Name}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapPayment">
                                    <Setter Property="TextColor"
                                            Value="Red"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Currency.Name}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapRedeem">
                                    <Setter Property="TextColor"
                                            Value="Green"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.#####}'}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Currency.Name}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapRefund">
                                    <Setter Property="TextColor"
                                            Value="Green"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='+{0:0.#####}'}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Currency.Name}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapCall">
                                    <Setter Property="TextColor"
                                            Value="Black"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Currency.Name}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="TokenCall">
                                    <Setter Property="TextColor"
                                            Value="Black"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Currency.Name}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="TokenApprove">
                                    <Setter Property="TextColor"
                                            Value="Black"/>
                                    <Setter Property="FormattedText">
                                        <Setter.Value>
                                            <FormattedString>
                                                <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="14"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Currency.Name}"
                                                        FontFamily="{DynamicResource RegularFont}"
                                                        FontSize="12"/>
                                            </FormattedString>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Row="1"
                                Grid.Column="1"
                                VerticalTextAlignment="Start"
                                FontFamily="{DynamicResource LightFont}"
                                TextColor="{DynamicResource AdditionalTextColor}"
                                FontSize="12">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="Output">
                                    <Setter Property="Text" Value="To: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="Input">
                                    <Setter Property="Text" Value="From: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapPayment">
                                    <Setter Property="Text" Value="To: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapRedeem">
                                    <Setter Property="Text" Value="From: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapRefund">
                                    <Setter Property="Text" Value="From: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapCall">
                                    <Setter Property="Text" Value="To: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="TokenCall">
                                    <Setter Property="Text" Value="To: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="TokenApprove">
                                    <Setter Property="Text" Value="To: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Currency.Name}"
                                                Value="BTC">
                                    <Setter Property="Text" Value="Id: "/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Currency.Name}"
                                                Value="LTC">
                                    <Setter Property="Text" Value="Id: "/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Row="1"
                                Grid.Column="2"
                                VerticalTextAlignment="Start"
                                FontFamily="{DynamicResource LightFont}"
                                TextColor="{DynamicResource AdditionalTextColor}"
                                FontSize="12"
                                LineBreakMode="MiddleTruncation"
                                IsVisible="{Binding Alias, Mode=OneWay, Converter={StaticResource StringToBoolInvert}}">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="Output">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="Input">
                                    <Setter Property="Text" Value="{Binding From, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapPayment">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapRedeem">
                                    <Setter Property="Text" Value="{Binding From, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapRefund">
                                    <Setter Property="Text" Value="{Binding From, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="SwapCall">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="TokenCall">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Type}"
                                                Value="TokenApprove">
                                    <Setter Property="Text" Value="{Binding To, FallbackValue='Unknown'}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Currency.Name}"
                                                Value="BTC">
                                    <Setter Property="Text" Value="{Binding Id}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                                Binding="{Binding Currency.Name}"
                                                Value="LTC">
                                    <Setter Property="Text" Value="{Binding Id}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Row="1"
                                Grid.Column="2"
                                Text="{Binding Alias}"
                                VerticalTextAlignment="Start"
                                LineBreakMode="TailTruncation"
                                TextColor="{DynamicResource HintTextColor}"
                                FontFamily="{DynamicResource LightFont}"
                                FontSize="12"
                                IsVisible="{Binding Alias, Mode=OneWay, Converter={StaticResource StringToBool}, FallbackValue='False'}"/>
                    </Grid>
                </controls:CustomViewCell>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>
</ContentPage>