<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
             xmlns:converters="clr-namespace:atomex.Converters"
             x:Class="atomex.SwapInfoPage"
             x:Name="BindingContextPage"
             Title="{helpers:Translate SwapInfoPageTitle}"
             Style="{DynamicResource MainBackgroundStyle}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:EqualsConverter x:Key="EqualsConverter"/>
            <converters:AllTrueMultiConverter x:Key="AllTrueConverter" /> 
            <converters:NullToBooleanConverter x:Key="NullToBoolean"/>
            <converters:NullToBooleanInvertConverter x:Key="NullToBooleanInvert"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <ScrollView>
            <StackLayout Spacing="0"
                         Padding="0,20,0,0">
                <Image WidthRequest="40"
                       HeightRequest="40"
                       Margin="20">
                    <Image.Triggers>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="In Progress">
                            <Setter Property="Source"
                                    Value="SwapInProgress"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="Completed">
                            <Setter Property="Source"
                                    Value="SwapCompleted"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="Canceled">
                            <Setter Property="Source"
                                    Value="SwapCanceled"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="Refunded">
                            <Setter Property="Source"
                                    Value="SwapCanceled"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="Unsettled">
                            <Setter Property="Source"
                                    Value="SwapCanceled"/>
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <Label Text="{Binding StateStringI18n}"
                       FontFamily="{DynamicResource RegularFont}"
                       FontSize="22"
                       HorizontalTextAlignment="Center">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="In Progress">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Completed">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Canceled">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Refunded">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Unsettled">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Label Text="{Binding StateDescription}"
                       Padding="10"
                       FontFamily="{DynamicResource RegularFont}"
                       FontSize="14"
                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                       HorizontalTextAlignment="Center"
                       IsVisible="False">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="In Progress">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Refunded">
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Unsettled">
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Grid Margin="20,10"
                      ColumnSpacing="0"
                      RowSpacing="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="15" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>
  
                    <Image Source="{Binding FromCurrencyCode}"
                           Margin="0,10"/>
                    <Image Source="ConvertArrow"
                           Grid.Column="1"
                           Grid.RowSpan="3"
                           WidthRequest="24"
                           VerticalOptions="CenterAndExpand"/>
                    <Image Grid.Column="2"
                           Source="{Binding ToCurrencyCode}"
                           Margin="0,10"/>
                    <Label Grid.Row="1"
                           Text="{Binding FromCurrencyCode}"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="16"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="End"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                    <Label Text="{Binding ToCurrencyCode}"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="16"
                           Grid.Row="1"
                           Grid.Column="2"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                    <Label Grid.Row="2"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="12"
                           Text="{Binding FromAmount}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Start"/>
                    <Label Grid.Row="2"
                           Grid.Column="2"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="12"
                           Text="{Binding ToAmount}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Start"/>
                </Grid>

                <Grid HorizontalOptions="FillAndExpand"
                      ColumnSpacing="0"
                      RowSpacing="0"
                      BackgroundColor="{AppThemeBinding Dark='#0FFFFFFF', Light='#E3F2FD'}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>
                    <Button CornerRadius="0"
                            Text="{helpers:Translate ProgressTab}"
                            FontFamily="{DynamicResource BoldFont}"
                            FontSize="14"
                            Clicked="OnButtonClicked"
                            CommandParameter="SwapProgress"
                            x:Name="SwapProgressButton"
                            BackgroundColor="{AppThemeBinding Dark='#0FFFFFFF', Light='#E3F2FD'}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="SwapInfoStates">
                                <VisualState Name="SwapProgress">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="SwapDetails">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource DisabledButtonTextColorDark}, Light={StaticResource DisabledButtonTextColor}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Button>
                    <Button Grid.Column="1"
                            CornerRadius="0"
                            Text="{helpers:Translate DetailsTab}"
                            FontFamily="{DynamicResource BoldFont}"
                            FontSize="14"
                            Clicked="OnButtonClicked"
                            CommandParameter="SwapDetails"
                            x:Name="SwapDetailsButton"
                            BackgroundColor="{AppThemeBinding Dark='#0FFFFFFF', Light='#E3F2FD'}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="SwapInfoStates">
                                <VisualState Name="SwapProgress">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource DisabledButtonTextColorDark}, Light={StaticResource DisabledButtonTextColor}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="SwapDetails">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Button>
                    <StackLayout Grid.Row="1"
                                 x:Name="ProgressUnderline"
                                 Style="{DynamicResource SeparatorStyle}"
                                 VerticalOptions="End">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="SwapInfoStates">
                                <VisualState Name="SwapProgress">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                        <Setter Property="HeightRequest"
                                                Value="2"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="SwapDetails">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark='#0FFFFFFF', Light='#E3F2FD'}"/>
                                        <Setter Property="HeightRequest"
                                                Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </StackLayout>
                    <StackLayout Grid.Row="1"
                                 Grid.Column="1"
                                 x:Name="DetailsUnderline"
                                 Style="{DynamicResource SeparatorStyle}"
                                 VerticalOptions="End">
                        <VisualStateManager.VisualStateGroups>
                             <VisualStateGroup Name="SwapInfoStates">
                                <VisualState Name="SwapProgress">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark='#0FFFFFFF', Light='#E3F2FD'}"/>
                                        <Setter Property="HeightRequest"
                                                Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="SwapDetails">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                        <Setter Property="HeightRequest"
                                                Value="2"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </StackLayout>
                </Grid>
                <StackLayout Padding="10,20"
                             x:Name="ProgressTab">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="SwapInfoStates">
                            <VisualState Name="SwapProgress">
                                <VisualState.Setters>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="SwapDetails">
                                <VisualState.Setters>
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid HorizontalOptions="FillAndExpand"
                          Padding="20,0"
                          ColumnSpacing="0"
                          RowSpacing="0"
                          BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>
                        <Image Source="ic_status__empty"
                               WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="In Progress">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Image WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Exchanging">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Completion">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Canceled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Initialization"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Refunded"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Initialization"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Unsettled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Initialization"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                            </Image.Triggers>
                        </Image>
                        <lottie:AnimationView WidthRequest="16"
                                              HeightRequest="16"
                                              Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                              AnimationSource="AssetOrBundle"
                                              ImageAssetsFolder="Assets/Animations"
                                              AutoPlay="True"
                                              RepeatMode="Infinite"
                                              Speed="1"
                                              VerticalOptions="Start"
                                              HorizontalOptions="Center">
                            <lottie:AnimationView.IsVisible>
                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                    <Binding Path="Status"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="Initialization"/>
                                    <Binding Path="State"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="In Progress"/>
                                </MultiBinding>
                            </lottie:AnimationView.IsVisible>
                        </lottie:AnimationView>
                        <Image Grid.Row="1"
                               Source="ic_line__empty"
                               VerticalOptions="Center"
                               HorizontalOptions="Center"
                               Aspect="AspectFill"
                               WidthRequest="1"
                               HeightRequest="40"/>
                        <Image Grid.Row="1"
                               Source="ic_line__full"
                               Aspect="AspectFill"
                               WidthRequest="1"
                               HeightRequest="40"
                               VerticalOptions="Center"
                               HorizontalOptions="Center">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Initialization">
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Label Text="{helpers:Translate Initialization}"
                               Grid.Column="1"
                               Padding="10,0"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="18"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               VerticalTextAlignment="Start">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Initialization"/>
                            </Label.GestureRecognizers>
                        </Label>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     Padding="10,0">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Initialization"/>
                            </StackLayout.GestureRecognizers>
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout"
                                             Binding="{Binding ExpandedStatus}"
                                             Value="Initialization">
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <Label Text="{Binding InitStatusDesc}"
                                   FontFamily="{DynamicResource RegularFont}"
                                   FontSize="12"
                                   TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                   VerticalTextAlignment="Start"/>
                        </StackLayout>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     BackgroundColor="Transparent"
                                     Padding="10,0,5,0"
                                     BindableLayout.ItemsSource="{Binding InitStatusMessages}"
                                     IsVisible="False">
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout"
                                             Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                             Value="Initialization">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Initialization"/>
                            </StackLayout.GestureRecognizers>
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <StackLayout Spacing="0"
                                                 Padding="0,2">
                                        <StackLayout Spacing="0"
                                                     Orientation="Horizontal">
                                            <Image Source="Tick"
                                                   Margin="0,2,8,0"
                                                   VerticalOptions="Start"
                                                   WidthRequest="10"
                                                   HeightRequest="10">
                                                <Image.Triggers>
                                                    <DataTrigger TargetType="Image"
                                                                 Binding="{Binding IsCompleted}"
                                                                 Value="True">
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </DataTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Initialization"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Canceled"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Initialization"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Unsettled"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Initialization"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Refunded"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                </Image.Triggers>
                                            </Image>
                                            <lottie:AnimationView WidthRequest="10"
                                                                  HeightRequest="10"
                                                                  Margin="0,2,8,0"
                                                                  Animation="{AppThemeBinding Dark=loader__white.json, Light=loader_light__blue.json}"
                                                                  AnimationSource="AssetOrBundle"
                                                                  ImageAssetsFolder="Assets/Animations"
                                                                  AutoPlay="True"
                                                                  RepeatMode="Infinite"
                                                                  Speed="1"
                                                                  VerticalOptions="Start"
                                                                  HorizontalOptions="Center"
                                                                  IsVisible="False">
                                                <lottie:AnimationView.Triggers>
                                                    <MultiTrigger TargetType="lottie:AnimationView">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Initialization"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="In Progress"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                </lottie:AnimationView.Triggers>
                                            </lottie:AnimationView>
                                            <Label FontFamily="{DynamicResource RegularFont}"
                                                   Text="{Binding Description}"
                                                   FontSize="12"
                                                   TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                   VerticalTextAlignment="Start"
                                                   IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}"/>
                                            <StackLayout Spacing="0"
                                                         Orientation="Horizontal"
                                                         IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                <Label FontFamily="{DynamicResource RegularFont}"
                                                       FontSize="12"
                                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                       VerticalTextAlignment="Start"
                                                       IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                                                    <Label.FormattedText>
                                                        <FormattedString>
                                                            <Span Text="{Binding Description}"/>
                                                            <Span Text=" "/>
                                                            <Span Text="{Binding ExplorerLink.Text}"/>
                                                        </FormattedString>
                                                    </Label.FormattedText>
                                                </Label>
                                                <Label FontFamily="{DynamicResource RegularFont}"
                                                       FontSize="12"
                                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                       VerticalTextAlignment="Start"
                                                       IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                    <Label.FormattedText>
                                                        <FormattedString>
                                                            <Span Text="{Binding Description}"/>
                                                            <Span Text=" "/>
                                                            <Span Text="{Binding ExplorerLink.Text}"
                                                                  TextDecorations="Underline"
                                                                  TextColor="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}">
                                                                <Span.GestureRecognizers>
                                                                    <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                          CommandParameter="{Binding ExplorerLink.Url}"/>
                                                                </Span.GestureRecognizers>
                                                            </Span>
                                                        </FormattedString>
                                                    </Label.FormattedText>
                                                </Label>
                                            </StackLayout>
                                        </StackLayout>
                                    </StackLayout>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                        <StackLayout Grid.Column="2"
                                     Grid.RowSpan="2">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Initialization"/>
                            </StackLayout.GestureRecognizers>
                            <Image Source="DownArrow"
                                   HeightRequest="10"
                                   WidthRequest="10"
                                   Margin="0,5,0,0"
                                   VerticalOptions="StartAndExpand"
                                   HorizontalOptions="Center"
                                   Rotation="0">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding BindingContext.InitStatusMessages.Count, Source={x:Reference BindingContextPage}}"
                                                 Value="0">
                                        <Setter Property="IsVisible"
                                                Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                 Value="Initialization">
                                        <Setter Property="Rotation"
                                                Value="180"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                        </StackLayout>
                    </Grid>
                    <Grid HorizontalOptions="FillAndExpand"
                          Padding="20,0"
                          ColumnSpacing="0"
                          RowSpacing="0"
                          BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>
                        <Image Source="ic_status__empty"
                               WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="In Progress">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Image WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Completion">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Completion"/>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="In Progress"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Canceled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Initialization"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Canceled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Exchanging"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Refunded"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Exchanging"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Unsettled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Exchanging"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                            </Image.Triggers>
                        </Image>
                        <lottie:AnimationView WidthRequest="16"
                                              HeightRequest="16"
                                              Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                              AnimationSource="AssetOrBundle"
                                              ImageAssetsFolder="Assets/Animations"
                                              AutoPlay="True"
                                              RepeatMode="Infinite"
                                              Speed="1"
                                              VerticalOptions="Start"
                                              HorizontalOptions="Center">
                            <lottie:AnimationView.IsVisible>
                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                    <Binding Path="Status"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="Exchanging"/>
                                    <Binding Path="State"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="In Progress"/>
                                </MultiBinding>
                            </lottie:AnimationView.IsVisible>
                        </lottie:AnimationView>
                        <Image Grid.Row="1"
                               Source="ic_line__empty"
                               VerticalOptions="Center"
                               HorizontalOptions="Center"
                               Aspect="AspectFill"
                               WidthRequest="1"
                               HeightRequest="40">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding ExpandedStatus}"
                                             Value="Exchanging">
                                    <Setter Property="HeightRequest"
                                            Value="60"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Image Grid.Row="1"
                               Source="ic_line__full"
                               VerticalOptions="Center"
                               HorizontalOptions="Center"
                               Aspect="AspectFill"
                               WidthRequest="1"
                               HeightRequest="40"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding ExpandedStatus}"
                                             Value="Exchanging">
                                    <Setter Property="HeightRequest"
                                            Value="60"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Completion">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Label Text="{helpers:Translate Exchanging}"
                               Grid.Column="1"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="18"
                               BackgroundColor="Transparent"
                               Padding="10,0,5,0"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               VerticalTextAlignment="Start">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Exchanging"/>
                            </Label.GestureRecognizers>
                        </Label>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     Padding="10,0">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Exchanging"/>
                            </StackLayout.GestureRecognizers>
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout"
                                             Binding="{Binding ExpandedStatus}"
                                             Value="Exchanging">
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <Label Text="{Binding ExchangeStatusDesc}"
                                   FontFamily="{DynamicResource RegularFont}"
                                   FontSize="12"
                                   TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                   VerticalTextAlignment="Start"/>
                        </StackLayout>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     Padding="10,0"
                                     BindableLayout.ItemsSource="{Binding ExchangeStatusMessages}"
                                     IsVisible="False">
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout"
                                             Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                             Value="Exchanging">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Exchanging"/>
                            </StackLayout.GestureRecognizers>
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <StackLayout Spacing="0"
                                                 Padding="0,2">
                                        <StackLayout Spacing="0"
                                                     Orientation="Horizontal">
                                            <Image Source="Tick"
                                                   Margin="0,2,8,0"
                                                   VerticalOptions="Start"
                                                   WidthRequest="10"
                                                   HeightRequest="10"
                                                   IsVisible="False">
                                                <Image.Triggers>
                                                    <DataTrigger TargetType="Image"
                                                                 Binding="{Binding IsCompleted}"
                                                                 Value="True">
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </DataTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Exchanging"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Canceled"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Exchanging"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Unsettled"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Exchanging"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Refunded"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                </Image.Triggers>
                                            </Image>
                                            <lottie:AnimationView WidthRequest="10"
                                                                  HeightRequest="10"
                                                                  Margin="0,2,8,0"
                                                                  Animation="{AppThemeBinding Dark=loader__white.json, Light=loader_light__blue.json}"
                                                                  AnimationSource="AssetOrBundle"
                                                                  ImageAssetsFolder="Assets/Animations"
                                                                  AutoPlay="True"
                                                                  RepeatMode="Infinite"
                                                                  Speed="1"
                                                                  VerticalOptions="Start"
                                                                  HorizontalOptions="Center"
                                                                  IsVisible="False">
                                                <lottie:AnimationView.Triggers>
                                                    <MultiTrigger TargetType="lottie:AnimationView">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Exchanging"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="In Progress"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                </lottie:AnimationView.Triggers>
                                            </lottie:AnimationView>
                                            <Label FontFamily="{DynamicResource RegularFont}"
                                                   Text="{Binding Description}"
                                                   FontSize="12"
                                                   TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                   VerticalTextAlignment="Start"
                                                   IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}"/>
                                            <StackLayout Spacing="0"
                                                         Orientation="Horizontal"
                                                         IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                <Label FontFamily="{DynamicResource RegularFont}"
                                                       FontSize="12"
                                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                       VerticalTextAlignment="Start"
                                                       IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                                                    <Label.FormattedText>
                                                        <FormattedString>
                                                            <Span Text="{Binding Description}"/>
                                                            <Span Text=" "/>
                                                            <Span Text="{Binding ExplorerLink.Text}"/>
                                                        </FormattedString>
                                                    </Label.FormattedText>
                                                </Label>
                                                <Label FontFamily="{DynamicResource RegularFont}"
                                                       FontSize="12"
                                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                       VerticalTextAlignment="Start"
                                                       IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                    <Label.FormattedText>
                                                        <FormattedString>
                                                            <Span Text="{Binding Description}"/>
                                                            <Span Text=" "/>
                                                            <Span Text="{Binding ExplorerLink.Text}"
                                                                  TextDecorations="Underline"
                                                                  TextColor="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}">
                                                                <Span.GestureRecognizers>
                                                                    <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                          CommandParameter="{Binding ExplorerLink.Url}"/>
                                                                </Span.GestureRecognizers>
                                                            </Span>
                                                        </FormattedString>
                                                    </Label.FormattedText>
                                                </Label>
                                            </StackLayout>
                                        </StackLayout>
                                    </StackLayout>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                        <StackLayout Grid.Column="2"
                                     Grid.RowSpan="2">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Exchanging"/>
                            </StackLayout.GestureRecognizers>
                            <Image Source="DownArrow"
                                   HeightRequest="10"
                                   WidthRequest="10"
                                   Margin="0,5,0,0"
                                   VerticalOptions="Start"
                                   HorizontalOptions="Center"
                                   Rotation="0">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding BindingContext.ExchangeStatusMessages.Count, Source={x:Reference BindingContextPage}}"
                                                 Value="0">
                                        <Setter Property="IsVisible"
                                                Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                 Value="Exchanging">
                                        <Setter Property="Rotation"
                                                Value="180"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                        </StackLayout>
                    </Grid>
                    <Grid HorizontalOptions="FillAndExpand"
                          Padding="20,0"
                          ColumnSpacing="0"
                          RowSpacing="0"
                          BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>
                        <Image Source="ic_status__empty"
                               WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="In Progress">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Image WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Canceled">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Unsettled">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Refunded">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <lottie:AnimationView WidthRequest="16"
                                              HeightRequest="16"
                                              Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                              AnimationSource="AssetOrBundle"
                                              ImageAssetsFolder="Assets/Animations"
                                              AutoPlay="True"
                                              RepeatMode="Infinite"
                                              Speed="1"
                                              VerticalOptions="Start"
                                              HorizontalOptions="Center">
                            <lottie:AnimationView.IsVisible>
                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                    <Binding Path="Status"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="Completion"/>
                                    <Binding Path="State"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="In Progress"/>
                                </MultiBinding>
                            </lottie:AnimationView.IsVisible>
                        </lottie:AnimationView>
                        <Label Text="{helpers:Translate Completion}"
                               Grid.Column="1"
                               Padding="10,0"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="18"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               VerticalTextAlignment="Start">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Completion"/>
                            </Label.GestureRecognizers>
                        </Label>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     Padding="10,0">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Completion"/>
                            </StackLayout.GestureRecognizers>
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout"
                                             Binding="{Binding ExpandedStatus}"
                                             Value="Completion">
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <Label Text="{Binding CompletionStatusDesc}"
                                   FontFamily="{DynamicResource RegularFont}"
                                   FontSize="12"
                                   TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                   VerticalTextAlignment="Start"/>
                        </StackLayout>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     BackgroundColor="Transparent"
                                     Padding="10,0,5,0"
                                     BindableLayout.ItemsSource="{Binding CompletionStatusMessages}"
                                     IsVisible="False">
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout"
                                             Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                             Value="Completion">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Completion"/>
                            </StackLayout.GestureRecognizers>
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <StackLayout Spacing="0"
                                                 Padding="0,2">
                                        <StackLayout Spacing="0"
                                                     Orientation="Horizontal">
                                            <Image Source="Tick"
                                                   Margin="0,2,8,0"
                                                   VerticalOptions="Start"
                                                   WidthRequest="10"
                                                   HeightRequest="10"
                                                   IsVisible="False">
                                                <Image.Triggers>
                                                    <DataTrigger TargetType="Image"
                                                                 Binding="{Binding IsCompleted}"
                                                                 Value="True">
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </DataTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Completion"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Canceled"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Completion"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Unsettled"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger TargetType="Image">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Completion"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="Refunded"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Source"
                                                                Value="ic_close__red"/>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                </Image.Triggers>
                                            </Image>
                                            <lottie:AnimationView WidthRequest="10"
                                                                  HeightRequest="10"
                                                                  Margin="0,2,6,0"
                                                                  Animation="{AppThemeBinding Dark=loader__white.json, Light=loader_light__blue.json}"
                                                                  AnimationSource="AssetOrBundle"
                                                                  ImageAssetsFolder="Assets/Animations"
                                                                  AutoPlay="True"
                                                                  RepeatMode="Infinite"
                                                                  Speed="1"
                                                                  VerticalOptions="Start"
                                                                  HorizontalOptions="Center"
                                                                  IsVisible="False">
                                                <lottie:AnimationView.Triggers>
                                                    <MultiTrigger TargetType="lottie:AnimationView">
                                                        <MultiTrigger.Conditions>
                                                            <BindingCondition Binding="{Binding IsCompleted}"
                                                                              Value="False"/>
                                                            <BindingCondition Binding="{Binding BindingContext.Status, Source={x:Reference BindingContextPage}}"
                                                                              Value="Completion"/>
                                                            <BindingCondition Binding="{Binding BindingContext.State, Source={x:Reference BindingContextPage}}"
                                                                              Value="In Progress"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="IsVisible"
                                                                Value="True"/>
                                                    </MultiTrigger>
                                                </lottie:AnimationView.Triggers>
                                            </lottie:AnimationView>
                                            <Label FontFamily="{DynamicResource RegularFont}"
                                                   Text="{Binding Description}"
                                                   FontSize="12"
                                                   TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                   VerticalTextAlignment="Start"
                                                   IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}"/>
                                            <StackLayout Spacing="0"
                                                         Orientation="Horizontal"
                                                         IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                <Label FontFamily="{DynamicResource RegularFont}"
                                                       FontSize="12"
                                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                       VerticalTextAlignment="Start"
                                                       IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                                                    <Label.FormattedText>
                                                        <FormattedString>
                                                            <Span Text="{Binding Description}"/>
                                                            <Span Text=" "/>
                                                            <Span Text="{Binding ExplorerLink.Text}"/>
                                                        </FormattedString>
                                                    </Label.FormattedText>
                                                </Label>
                                                <Label FontFamily="{DynamicResource RegularFont}"
                                                       FontSize="12"
                                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                       VerticalTextAlignment="Start"
                                                       IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                    <Label.FormattedText>
                                                        <FormattedString>
                                                            <Span Text="{Binding Description}"/>
                                                            <Span Text=" "/>
                                                            <Span Text="{Binding ExplorerLink.Text}"
                                                                  TextDecorations="Underline"
                                                                  TextColor="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}">
                                                                <Span.GestureRecognizers>
                                                                    <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                          CommandParameter="{Binding ExplorerLink.Url}"/>
                                                                </Span.GestureRecognizers>
                                                            </Span>
                                                        </FormattedString>
                                                    </Label.FormattedText>
                                                </Label>
                                            </StackLayout>
                                        </StackLayout>
                                    </StackLayout>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                        <StackLayout Grid.Column="2"
                                     Grid.RowSpan="2">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                      CommandParameter="Completion"/>
                            </StackLayout.GestureRecognizers>
                            <Image Source="DownArrow"
                                   HeightRequest="10"
                                   WidthRequest="10"
                                   Margin="0,5,0,0"
                                   VerticalOptions="Start"
                                   HorizontalOptions="Center"
                                   Rotation="0">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding BindingContext.CompletionStatusMessages.Count, Source={x:Reference BindingContextPage}}"
                                                 Value="0">
                                        <Setter Property="IsVisible"
                                                Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                 Value="Completion">
                                        <Setter Property="Rotation"
                                                Value="180"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                        </StackLayout>
                    </Grid>
                </StackLayout>

                <StackLayout Padding="20"
                             x:Name="DetailsTab">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="SwapInfoStates">
                            <VisualState Name="SwapProgress">
                                <VisualState.Setters>
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="SwapDetails">
                                <VisualState.Setters>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <StackLayout Orientation="Horizontal"
                                 Padding="20,5">
                        <Label Text="{helpers:Translate Price, StringFormat='{0}:'}"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="14"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="Start"/>
                        <Label Text="{Binding Price}"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="14"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               HorizontalOptions="FillAndExpand"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="End"/>
                    </StackLayout>
                </StackLayout>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
