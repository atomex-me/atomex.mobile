<?xml version="1.0" encoding="UTF-8" ?>
<pages:PopupPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:helpers="clr-namespace:atomex.Helpers"
    xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
    xmlns:controls="clr-namespace:atomex.CustomElements"
    xmlns:converters="clr-namespace:atomex.Converters"
    xmlns:behavior="clr-namespace:atomex.Behaviors"
    xmlns:zxing="clr-namespace:ZXing.Net.Mobile.Forms;assembly=ZXing.Net.Mobile.Forms"
    xmlns:zxcm="clr-namespace:ZXing.Common;assembly=zxing.portable"
    x:Class="atomex.Views.ReceiveBottomSheet">
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation 
            PositionIn="Bottom"
            PositionOut="Bottom"
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True"/>
    </pages:PopupPage.Animation>
    <pages:PopupPage.Resources>
        <ResourceDictionary>
            <converters:NullToBooleanConverter x:Key="NullToBool"/>
            <converters:StringToBoolConverter x:Key="StringToBool"/>
        </ResourceDictionary>
    </pages:PopupPage.Resources>
    <StackLayout VerticalOptions="EndAndExpand"
                 HorizontalOptions="FillAndExpand">
        <StackLayout.Behaviors>
            <behavior:SwipeDownToClosePopupPage CloseAction="OnClose"
                                                ClosingEdge="448"
                                                ClosingTimeInMs="300"/>
        </StackLayout.Behaviors>
        <controls:CustomFrame CornerRadius="20,20,0,0"
                              Padding="0,14"
                              HorizontalOptions="FillAndExpand"
                              HeightRequest="558"
                              BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
            <StackLayout Spacing="0">
                <Image Source="ic_swipe__indicator"
                       WidthRequest="35"
                       HeightRequest="4"
                       Margin="0,0,0,40"
                       HorizontalOptions="Center"
                       VerticalOptions="Center"/>
                <Label Text="{Binding ReceivingAddressLabel}"
                       Style="{DynamicResource MainTextH2}"
                       Margin="24,0,24,24"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"/>
                <StackLayout Spacing="0">
                    <zxing:ZXingBarcodeImageView BarcodeValue="{Binding SelectedAddress.Address, FallbackValue='Atomex'}"
                                                 BarcodeFormat="QR_CODE"
                                                 Margin="0">
                    <zxing:ZXingBarcodeImageView.BarcodeOptions>
                        <zxcm:EncodingOptions Width="150"
                                              Height="150"
                                              Margin="0"/>
                    </zxing:ZXingBarcodeImageView.BarcodeOptions>
                </zxing:ZXingBarcodeImageView>
                </StackLayout>
                <Label Text="{Binding SelectedAddress.Address}"
                       Style="{DynamicResource MainTextH4}"
                       LineBreakMode="CharacterWrap"
                       HorizontalTextAlignment="Center"
                       Margin="24,24,24,4"/>
                <Label Style="{DynamicResource AdditionalTextH5}"
                       HorizontalTextAlignment="Center">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding SelectedAddress.AvailableBalance, StringFormat='{0:0.#########}'}"/>
                            <Span Text=" "/>
                            <Span Text="{Binding SelectedAddress.CurrencyCode}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Frame Style="{DynamicResource MainClickableFrame}"
                       WidthRequest="200"
                       Margin="24,12">
                    <Frame.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding CopyCommand}"/>
                    </Frame.GestureRecognizers>
                    <Frame.Triggers>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding IsCopied}"
                                     Value="False">
                            <Setter Property="BackgroundColor"
                                    Value="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding IsCopied}"
                                     Value="True">
                            <Setter Property="BackgroundColor"
                                    Value="{AppThemeBinding Dark={StaticResource HighlightingButtonBackgroundColorDark}, Light={StaticResource HighlightingButtonBackgroundColor}}"/>
                        </DataTrigger>
                    </Frame.Triggers>
                    <StackLayout Spacing="10"
                                 Orientation="Horizontal"
                                 HorizontalOptions="Center">
                        <Image HeightRequest="18"
                               WidthRequest="18"
                               VerticalOptions="Center">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding IsCopied}"
                                             Value="False">
                                    <Setter Property="Source"
                                            Value="ic_copy__white"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding IsCopied}"
                                             Value="True">
                                    <Setter Property="Source"
                                            Value="ic_tick"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Label Text="{Binding CopyButtonName}"
                               Style="{DynamicResource MainClickableLabel}">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding IsCopied}"
                                             Value="False">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource MainButtonTextColorDark}, Light={StaticResource MainButtonTextColor}}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding IsCopied}"
                                             Value="True">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource HighlightingButtonTextColorDark}, Light={StaticResource HighlightingButtonTextColor}}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                    </StackLayout>
                </Frame>
                <Frame Style="{DynamicResource AdditionalClickableFrame}"
                       WidthRequest="200">
                    <Frame.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ShareCommand}"/>
                    </Frame.GestureRecognizers>
                    <RelativeLayout HeightRequest="50">
                        <StackLayout Spacing="10"
                                     RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=0}"
                                     RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
                                     Orientation="Horizontal"
                                     HorizontalOptions="Center">
                            <Image HeightRequest="18"
                                   WidthRequest="18"
                                   VerticalOptions="Center"
                                   Source="ic_share">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding IsShared}"
                                                 Value="True">
                                        <Setter Property="IsVisible"
                                                Value="False"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                            <Label Text="{helpers:Translate ShareButton}"
                                   Style="{DynamicResource AdditionalClickableLabel}"
                                   VerticalTextAlignment="Center"
                                   HorizontalTextAlignment="Start">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding IsShared}"
                                                 Value="True">
                                        <Setter Property="IsVisible"
                                                Value="False"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <ActivityIndicator RelativeLayout.XConstraint= "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor =.5, Constant=-12}"
	             	                           RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor =.5, Constant=-12}"
                                               RelativeLayout.WidthConstraint="24"
                                               RelativeLayout.HeightConstraint="24"
                                               Color="#92C8F9"
                                               BackgroundColor="Transparent"
                                               IsRunning="{Binding IsShared}"
                                               IsVisible="{Binding IsShared}"/>
                        </StackLayout>
                    </RelativeLayout>
                </Frame>
                <Button Text="{Binding MyAddressesButtonName}"
                        Style="{DynamicResource TransparentButton}"
                        Margin="70,12,70,45"
                        Command="{Binding ShowReceiveAddressesCommand}"/>
            </StackLayout>
        </controls:CustomFrame>
    </StackLayout>
</pages:PopupPage>

