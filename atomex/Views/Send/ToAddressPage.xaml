<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    x:Class="atomex.Views.Send.ToAddressPage"
    x:Name="BindingContextPage"
    xmlns:helpers="clr-namespace:atomex.Helpers"
    xmlns:custom="clr-namespace:atomex.CustomElements"
    xmlns:input="clr-namespace:Plugin.InputKit.Shared.Controls;assembly=Plugin.InputKit"
    xmlns:behaviors="clr-namespace:EventToCommandBehavior"
    Style="{DynamicResource MainBackgroundStyle}">
    <ContentPage.ToolbarItems>
        <ToolbarItem IconImageSource="ScanTest"
                     Order="Primary"
                     Priority="0"
                     Command="{Binding ScanAddressCommand}"/>
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <StackLayout>
            <Label Text="{helpers:Translate ReceiveTo}"
                   Style="{DynamicResource CreateSwapTitleStyle}"
                   HorizontalTextAlignment="Start"
                   FontSize="30"
                   Margin="0,20"/>
            <Grid HorizontalOptions="FillAndExpand"
                  ColumnSpacing="0"
                  RowSpacing="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*" />
                    <ColumnDefinition Width="5*" />
                </Grid.ColumnDefinitions>
                <Button CornerRadius="0"
                        Text="{helpers:Translate ExternalAddress}"
                        FontFamily="{DynamicResource RegularFont}"
                        FontSize="14"
                        Clicked="OnButtonClicked"
                        CommandParameter="External"
                        x:Name="ExternalAddressButton"
                        BackgroundColor="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState Name="External">
                                <VisualState.Setters>
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="My">
                                <VisualState.Setters>
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource DisabledButtonTextColorDark}, Light={StaticResource DisabledButtonTextColor}}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Button>
                <Button Grid.Column="1"
                        CornerRadius="0"
                        Text="{helpers:Translate MyAddresses}"
                        FontFamily="{DynamicResource RegularFont}"
                        FontSize="14"
                        Clicked="OnButtonClicked"
                        CommandParameter="My"
                        x:Name="MyAddressButton"
                        BackgroundColor="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState Name="External">
                                <VisualState.Setters>
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource DisabledButtonTextColorDark}, Light={StaticResource DisabledButtonTextColor}}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="My">
                                <VisualState.Setters>
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Button>
                <StackLayout Grid.Row="1"
                             x:Name="ExternalAddressUnderline"
                             Style="{DynamicResource SeparatorStyle}"
                             VerticalOptions="End">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState Name="External">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                    <Setter Property="HeightRequest"
                                            Value="2"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="My">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding Dark='#29DCECFF', Light='#E3F2FD'}"/>
                                    <Setter Property="HeightRequest"
                                            Value="1"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </StackLayout>
                <StackLayout Grid.Row="1"
                             Grid.Column="1"
                             x:Name="MyAddressUnderline"
                             Style="{DynamicResource SeparatorStyle}"
                             VerticalOptions="End">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState Name="External">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding Dark='#29DCECFF', Light='#E3F2FD'}"/>
                                    <Setter Property="HeightRequest"
                                            Value="1"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="My">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                    <Setter Property="HeightRequest"
                                            Value="2"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </StackLayout>
            </Grid>
            <StackLayout Spacing="15"
                         Margin="0,20"
                         x:Name="ExternalAddressTab">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState Name="My">
                            <VisualState.Setters>
                                <Setter Property="IsVisible"
                                        Value="False"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="External">
                            <VisualState.Setters>
                                <Setter Property="IsVisible"
                                        Value="True"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Frame Padding="0"
                       HeightRequest="56"
                       BorderColor="{AppThemeBinding Dark='#29DCECFF', Light='#29000E22'}"
                       BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                       CornerRadius="5"
                       Margin="15,0"
                       HasShadow="False">
                    <custom:CustomEntry Placeholder="{helpers:Translate ExternalAddress}"
                                        Style="{DynamicResource EntryStyle}"
                                        FontSize="16"
                                        HorizontalTextAlignment="Start"
                                        VerticalTextAlignment="Center"
                                        Margin="15,0"/>
                </Frame>
                <input:CheckBox Text="{helpers:Translate SaveToMyAddresses}"
                                Margin="15,0"
                                BoxSizeRequest="18"
                                TextFontSize="16"
                                IsChecked="False"
                                Type="Material"
                                Color="{AppThemeBinding Dark='#92C8F9', Light={StaticResource MainButtonBackgroundColor}}"
                                IconColor="{AppThemeBinding Dark='#F7000E22', Light={StaticResource MainButtonTextColor}}"
                                TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
            </StackLayout>
            <StackLayout Spacing="5"
                         x:Name="MyAddressesTab">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState Name="My">
                            <VisualState.Setters>
                                <Setter Property="IsVisible"
                                        Value="True"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="External">
                            <VisualState.Setters>
                                <Setter Property="IsVisible"
                                        Value="False"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <StackLayout Orientation="Horizontal"
                         HorizontalOptions="FillAndExpand"
                         Margin="15,0">
                <custom:CustomEntry Placeholder="{helpers:Translate MyAddresses}"
                                    Style="{DynamicResource EntryStyle}"
                                    FontSize="14"
                                    HorizontalTextAlignment="Start"
                                    VerticalTextAlignment="Center"
                                    VerticalOptions="FillAndExpand"
                                    HorizontalOptions="FillAndExpand"
                                    x:Name="AddressesEntry">
                    <custom:CustomEntry.Behaviors>
                        <behaviors:EventToCommandBehavior EventName="TextChanged"
                                                          Command="{Binding SearchAddressCommand}"
                                                          CommandParameter="{Binding Source={x:Reference AddressesEntry},Path=Text}"/>
                    </custom:CustomEntry.Behaviors>
                </custom:CustomEntry>
                <Button TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                        BackgroundColor="{AppThemeBinding Dark='#29DCECFF', Light='#E3F2FD'}"
                        WidthRequest="132"
                        HeightRequest="32"
                        HorizontalOptions="End"
                        CornerRadius="16"
                        FontSize="14"
                        Padding="0"
                        Margin="0,10"
                        FontFamily="{DynamicResource RegularFont}"
                        Command="{Binding ChangeSortTypeCommand}"
                        TextTransform="Lowercase">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button"
                                        Binding="{Binding SortByBalance}"
                                        Value="True">
                            <Setter Property="Text"
                                    Value="Sort by balance"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Button"
                                        Binding="{Binding SortByBalance}"
                                        Value="False">
                            <Setter Property="Text"
                                    Value="Sort by date"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <ImageButton BackgroundColor="{AppThemeBinding Dark='#29DCECFF', Light='#E3F2FD'}"
                                Padding="6"
                                Margin="0,10"
                                HorizontalOptions="End"
                                HeightRequest="32"
                                WidthRequest="32"
                                CornerRadius="16"
                                Command="{Binding ChangeSortDirectionCommand}">
                    <ImageButton.Triggers>
                        <DataTrigger TargetType="ImageButton"
                                        Binding="{Binding SortIsAscending}"
                                        Value="True">
                            <Setter Property="Source"
                                    Value="ic_sort__up"/>
                        </DataTrigger>
                        <DataTrigger TargetType="ImageButton"
                                        Binding="{Binding SortIsAscending}"
                                        Value="False">
                            <Setter Property="Source"
                                    Value="ic_sort__down"/>
                        </DataTrigger>
                    </ImageButton.Triggers>
                </ImageButton>
            </StackLayout>
            <StackLayout Style="{DynamicResource SeparatorStyle}"
                         Margin="15,0,0,0"/>
            <ListView ItemsSource="{Binding Addresses}"
                      SelectionMode="None"
                      CachingStrategy="RetainElement"
                      HasUnevenRows="True"
                      SeparatorVisibility="None"
                      BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                      VerticalOptions="FillAndExpand"
                      Footer="">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Grid ColumnSpacing="0"
                                  RowSpacing="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32" />
                                    <RowDefinition Height="32" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="6*" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>
                                <!--<Grid.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding BindingContext.SelectFromCurrencyCommand, Source={x:Reference BindingContextPage}}"
                                                          Tapped="OnItemTapped"
                                                          CommandParameter="{Binding .}"/>
                                </Grid.GestureRecognizers>-->
                                <Image Grid.RowSpan="2"
                                       WidthRequest="20"
                                       HeightRequest="20"
                                       Margin="10,0"
                                       VerticalOptions="CenterAndExpand"
                                       Source="Tick"/>
                                <Label Grid.Column="1"
                                       Text="{Binding Currency.Description}"
                                       FontFamily="{DynamicResource RegularFont}"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       FontSize="16"
                                       Margin="0,3"
                                       VerticalTextAlignment="End"
                                       HorizontalTextAlignment="Start"/>
                                <Label Grid.Row="1"
                                       Grid.Column="1"
                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                       FontFamily="{DynamicResource RegularFont}"
                                       FontSize="14"
                                       VerticalTextAlignment="Start"
                                       HorizontalTextAlignment="Start">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding AvailableAmount, StringFormat='{0:#########}'}"/>
                                            <Span Text=" " /> 
                                            <Span Text="{Binding CurrencyCode}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Image Grid.RowSpan="2"
                                       Grid.Column="2"
                                       WidthRequest="24"
                                       HeightRequest="24"
                                       Margin="20,0"
                                       VerticalOptions="CenterAndExpand"
                                       Source="ic_copy"/>
                            </Grid>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            </StackLayout>
            <StackLayout VerticalOptions="EndAndExpand"
                         BackgroundColor="{AppThemeBinding Dark='#12FFFFFF', Light='#E3F2FD'}">
                <Button Text="{helpers:Translate ConfirmButton}"
                        Margin="15,10"
                        Style="{DynamicResource MainButtonStyle}"
                        Command="{Binding ConfirmToAddressCommand}"/>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>
