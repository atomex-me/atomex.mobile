<?xml version="1.0" encoding="UTF-8" ?>
<pages:PopupPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:helpers="clr-namespace:atomex.Helpers"
    xmlns:input="clr-namespace:Plugin.InputKit.Shared.Controls;assembly=Plugin.InputKit"
    xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
    xmlns:controls="clr-namespace:atomex.CustomElements"
    x:Class="atomex.Views.Send.WarningConfirmationBottomSheet">
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation 
            PositionIn="Bottom"
            PositionOut="Bottom"
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True"/>
    </pages:PopupPage.Animation>
    <StackLayout VerticalOptions="EndAndExpand"
                 HorizontalOptions="FillAndExpand">
        <controls:CustomFrame CornerRadius="20,20,0,0"
                              Padding="16"
                              HorizontalOptions="FillAndExpand"
                              HeightRequest="556"
                              BackgroundColor="{AppThemeBinding Dark='#203040', Light={StaticResource MainBackgroundColor}}">
        <StackLayout Spacing="0">
            <Label Text="{helpers:Translate Warning}"
                   TextColor="#FF7A00"
                   FontSize="30"
                   FontFamily="{DynamicResource RefularFont}"
                   Padding="0,20"
                   HorizontalTextAlignment="Start"/>
            <Label Text="{Binding RecommendedMaxAmountWarning.TooltipText}"
                   TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                   FontSize="14"
                   LineHeight="1.25"
                   FontFamily="{DynamicResource RegularFont}"
                   HorizontalTextAlignment="Start"/>
            <input:RadioButtonGroupView>
                <StackLayout Style="{DynamicResource SeparatorStyle}"
                             Margin="0,20"/>
                <input:RadioButton Text="{Binding SendRecommendedAmountMenu}"
                                   IsChecked="{Binding UseRecommendedAmount, Mode=TwoWay}"
                                   TextFontSize="16"
                                   CircleColor="{AppThemeBinding Dark='#92C8F9', Light={StaticResource MainButtonBackgroundColor}}"
                                   Color="{AppThemeBinding Dark='#92C8F9', Light={StaticResource MainButtonBackgroundColor}}"
                                   TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}">
                    <input:RadioButton.Triggers>
                        <DataTrigger TargetType="input:RadioButton"
                                     Binding="{Binding UseRecommendedAmount}"
                                     Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </DataTrigger>
                    </input:RadioButton.Triggers>
                </input:RadioButton>
                <StackLayout Style="{DynamicResource SeparatorStyle}"
                             Margin="0,20"/>
                <input:RadioButton Text="{Binding SendEnteredAmountMenu}"
                                   IsChecked="{Binding UseEnteredAmount, Mode=TwoWay}"
                                   TextFontSize="16"
                                   CircleColor="{AppThemeBinding Dark='#92C8F9', Light={StaticResource MainButtonBackgroundColor}}"
                                   Color="{AppThemeBinding Dark='#92C8F9', Light={StaticResource MainButtonBackgroundColor}}"
                                   TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}">
                    <input:RadioButton.Triggers>
                        <DataTrigger TargetType="input:RadioButton"
                                     Binding="{Binding UseEnteredAmount}"
                                     Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </DataTrigger>
                    </input:RadioButton.Triggers>
                </input:RadioButton>
                <StackLayout Style="{DynamicResource SeparatorStyle}"                             
                             Margin="0,20"/>
            </input:RadioButtonGroupView>
            <StackLayout VerticalOptions="EndAndExpand">
                <RelativeLayout HeightRequest="44">
                    <Button Text="{helpers:Translate SendButton}"
                            CornerRadius="8"
                            BackgroundColor="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"
                            TextColor="{AppThemeBinding Dark={StaticResource MainButtonTextColorDark}, Light={StaticResource MainButtonTextColor}}"
                            FontSize="17"
                            RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=0}"
                            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
                            HorizontalOptions="FillAndExpand"
                            FontFamily="{DynamicResource RegularFont}"
                            Command="{Binding NextCommand}">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding IsLoading}"
                                         Value="True">
                                <Setter Property="IsEnabled"
                                        Value="False"/>
                                <Setter Property="Text"
                                        Value=""/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CanSend}"
                                         Value="False">
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark='#34DCECFF', Light='#34000E22'}"/>
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark='#29DCECFF', Light='#29000E22'}"/>
                                <Setter Property="Opacity"
                                        Value="0.5"/>
                                <Setter Property="IsEnabled"
                                        Value="False"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CanSend}"
                                         Value="True">
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"/>
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainButtonTextColorDark}, Light={StaticResource MainButtonTextColor}}"/>
                                <Setter Property="Opacity"
                                        Value="1"/>
                                <Setter Property="IsEnabled"
                                        Value="True"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    <ActivityIndicator RelativeLayout.XConstraint= "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor =.5, Constant=-12}"
	             	                   RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor =.5, Constant=-12}"
                                       RelativeLayout.WidthConstraint="24"
                                       RelativeLayout.HeightConstraint="24"
                                       Color="#92C8F9"
                                       BackgroundColor="Transparent"
                                       IsRunning="{Binding IsLoading}"
                                       IsVisible="{Binding IsLoading}"/>
                </RelativeLayout>
            </StackLayout>
        </StackLayout>
        </controls:CustomFrame>
    </StackLayout>
</pages:PopupPage>
