<?xml version="1.0" encoding="UTF-8" ?>
<pages:PopupPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:helpers="clr-namespace:atomex.Helpers"
    xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
    xmlns:controls="clr-namespace:atomex.CustomElements"
    xmlns:behavior="clr-namespace:atomex.Behaviors"
    xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
    xmlns:converters="clr-namespace:atomex.Converters"
    x:Class="atomex.Views.SwapBottomSheet"
    x:Name="BindingContextPage"
    Title="{helpers:Translate SwapInfoPageTitle}"
    Style="{DynamicResource MainBackgroundStyle}">
    <pages:PopupPage.Resources>
        <ResourceDictionary>
            <converters:EqualsConverter x:Key="EqualsConverter"/>
            <converters:AllTrueMultiConverter x:Key="AllTrueConverter" /> 
            <converters:NullToBooleanConverter x:Key="NullToBoolean"/>
            <converters:NullToBooleanInvertConverter x:Key="NullToBooleanInvert"/>
        </ResourceDictionary>
    </pages:PopupPage.Resources>
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation 
            PositionIn="Bottom"
            PositionOut="Bottom"
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True"/>
    </pages:PopupPage.Animation>
    <StackLayout VerticalOptions="EndAndExpand"
                 HorizontalOptions="FillAndExpand">
        <StackLayout.Behaviors>
            <behavior:SwipeDownToClosePopupPage CloseAction="OnClose"
                                                ClosingEdge="520"
                                                ClosingTimeInMs="300"/>
        </StackLayout.Behaviors>
        <controls:CustomFrame CornerRadius="20,20,0,0"
                              Padding="0,14"
                              HorizontalOptions="FillAndExpand"
                              HeightRequest="620"
                              BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
            <StackLayout Spacing="0">
                <Image Source="ic_swipe__indicator"
                       WidthRequest="35"
                       HeightRequest="4"
                       Margin="0,0,0,40"
                       HorizontalOptions="Center"
                       VerticalOptions="Center"/>
                <ScrollView>
                    <StackLayout Spacing="0"
                                 Padding="0,0,0,20">
                        <Image WidthRequest="40"
                               HeightRequest="40">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="In Progress">
                                    <Setter Property="Source"
                                            Value="SwapInProgress"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="Source"
                                            Value="SwapCompleted"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Canceled">
                                    <Setter Property="Source"
                                            Value="SwapCanceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Refunded">
                                    <Setter Property="Source"
                                            Value="SwapCanceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Unsettled">
                                    <Setter Property="Source"
                                            Value="SwapCanceled"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Label Text="{Binding StateStringI18n}"
                               FontFamily="{DynamicResource BoldFont}"
                               FontSize="24"
                               Padding="24,12"
                               HorizontalTextAlignment="Center">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding State}"
                                             Value="In Progress">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding State}"
                                             Value="Canceled">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding State}"
                                             Value="Refunded">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding State}"
                                             Value="Unsettled">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Text="{Binding StateDescription}"
                               Padding="24,0"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="12"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               HorizontalTextAlignment="Center"
                               IsVisible="False">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding State}"
                                             Value="In Progress">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding State}"
                                             Value="Refunded">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding State}"
                                             Value="Unsettled">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Grid Margin="24,32"
                              ColumnSpacing="0"
                              RowSpacing="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="4*" />
                            </Grid.ColumnDefinitions>
                            <Image Source="{Binding FromCurrencyCode}"
                                   HorizontalOptions="Center"/>
                            <Image Source="ConvertArrow"
                                   Grid.Column="1"
                                   WidthRequest="20"
                                   VerticalOptions="CenterAndExpand"/>
                            <Image Grid.Column="2"
                                   Source="{Binding ToCurrencyCode}"
                                   HorizontalOptions="Center"/>
                            <Label Grid.Row="1"
                                   FontFamily="{DynamicResource RegularFont}"
                                   FontSize="12"
                                   HorizontalTextAlignment="Center"
                                   VerticalTextAlignment="Center"
                                   TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding FromAmount}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding FromCurrencyCode}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                            <Label FontFamily="{DynamicResource RegularFont}"
                                   FontSize="12"
                                   Grid.Row="1"
                                   Grid.Column="2"
                                   HorizontalTextAlignment="Center"
                                   VerticalTextAlignment="Center"
                                   TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding ToAmount}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding ToCurrencyCode}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                        </Grid>

                        <!--Tabs switcher-->
                        <Grid Margin="14,0"
                              HorizontalOptions="FillAndExpand"
                              ColumnSpacing="0"
                              RowSpacing="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*" />
                                <ColumnDefinition Width="5*" />
                            </Grid.ColumnDefinitions>
                            <Frame Grid.ColumnSpan="2"
                                   CornerRadius="18"
                                   HasShadow="False"
                                   Padding="0"
                                   BackgroundColor="{AppThemeBinding Dark={StaticResource TabSwitcherBackgroundColorDark}, Light={StaticResource TabSwitcherBackgroundColor}}"/>
                            <Button CornerRadius="16"
                                    Padding="0"
                                    Margin="2"
                                    Clicked="OnButtonClicked"
                                    CommandParameter="SwapProgress"
                                    x:Name="ProgressButton"
                                    Text="{helpers:Translate ProgressTab}"
                                    FontFamily="{DynamicResource RegularFont}"
                                    FontSize="14"
                                    TextTransform="None">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="SwapInfoStates">
                                        <VisualState Name="SwapProgress">
                                            <VisualState.Setters>
                                                <Setter Property="TextColor"
                                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                                <Setter Property="BackgroundColor"
                                                        Value="{AppThemeBinding Dark={StaticResource ActiveTabBackgroundColorDark}, Light={StaticResource ActiveTabBackgroundColor}}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState Name="SwapDetails">
                                            <VisualState.Setters>
                                                <Setter Property="TextColor"
                                                        Value="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"/>
                                                <Setter Property="BackgroundColor"
                                                        Value="Transparent"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Button>
                            <Button Grid.Column="1"
                                    CornerRadius="16"
                                    Padding="0"
                                    Margin="2"
                                    Text="{helpers:Translate DetailsTab}"
                                    FontFamily="{DynamicResource RegularFont}"
                                    FontSize="14"
                                    TextTransform="None"
                                    Clicked="OnButtonClicked"
                                    CommandParameter="SwapDetails"
                                    x:Name="DetailsButton">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="SwapInfoStates">
                                        <VisualState Name="SwapProgress">
                                            <VisualState.Setters>
                                                <Setter Property="TextColor"
                                                        Value="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"/>
                                                <Setter Property="BackgroundColor"
                                                        Value="Transparent"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState Name="SwapDetails">
                                            <VisualState.Setters>
                                                <Setter Property="TextColor"
                                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                                                <Setter Property="BackgroundColor"
                                                        Value="{AppThemeBinding Dark={StaticResource ActiveTabBackgroundColorDark}, Light={StaticResource ActiveTabBackgroundColor}}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Button>
                        </Grid>

                        <!--Progress tab-->
                        <StackLayout Padding="24,32"
                                     BackgroundColor="Transparent"
                                     x:Name="ProgressTab">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="SwapInfoStates">
                                    <VisualState Name="SwapProgress">
                                        <VisualState.Setters>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState Name="SwapDetails">
                                        <VisualState.Setters>
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalOptions="FillAndExpand"
                                  ColumnSpacing="20"
                                  RowSpacing="8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="10" />
                                </Grid.ColumnDefinitions>
                                <Image Source="ic_status__empty"
                                       WidthRequest="24"
                                       HeightRequest="24"
                                       VerticalOptions="Start"
                                       HorizontalOptions="Center"
                                       IsVisible="False">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="In Progress">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <Image WidthRequest="24"
                                       HeightRequest="24"
                                       VerticalOptions="Start"
                                       HorizontalOptions="Center"
                                       IsVisible="False">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding Status}"
                                                     Value="Exchanging">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__completed"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding Status}"
                                                     Value="Completion">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__completed"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__completed"/>
                                        </DataTrigger>
                                        <MultiTrigger TargetType="Image">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding State}"
                                                                  Value="Canceled"/>
                                                <BindingCondition Binding="{Binding Status}"
                                                                  Value="Initialization"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger>
                                        <MultiTrigger TargetType="Image">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding State}"
                                                                  Value="Refunded"/>
                                                <BindingCondition Binding="{Binding Status}"
                                                                  Value="Initialization"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger>
                                        <MultiTrigger TargetType="Image">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding State}"
                                                                  Value="Unsettled"/>
                                                <BindingCondition Binding="{Binding Status}"
                                                                  Value="Initialization"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger>
                                    </Image.Triggers>
                                </Image>
                                <lottie:AnimationView WidthRequest="24"
                                                      HeightRequest="24"
                                                      Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                                      AnimationSource="AssetOrBundle"
                                                      ImageAssetsFolder="Assets/Animations"
                                                      AutoPlay="True"
                                                      RepeatMode="Infinite"
                                                      Speed="1"
                                                      VerticalOptions="Start"
                                                      HorizontalOptions="Center">
                                    <lottie:AnimationView.IsVisible>
                                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                            <Binding Path="Status"
                                                     Mode="OneWay"
                                                     Converter="{StaticResource EqualsConverter}"
                                                     ConverterParameter="Initialization"/>
                                            <Binding Path="State"
                                                     Mode="OneWay"
                                                     Converter="{StaticResource EqualsConverter}"
                                                     ConverterParameter="In Progress"/>
                                        </MultiBinding>
                                    </lottie:AnimationView.IsVisible>
                                </lottie:AnimationView>
                                <Image Grid.Row="1"
                                       Source="ic_line__empty"
                                       VerticalOptions="Center"
                                       HorizontalOptions="Center"
                                       Aspect="AspectFill"
                                       WidthRequest="1"
                                       HeightRequest="40"/>
                                <Image Grid.Row="1"
                                       Source="ic_line__full"
                                       Aspect="AspectFill"
                                       WidthRequest="1"
                                       HeightRequest="40"
                                       VerticalOptions="Center"
                                       HorizontalOptions="Center">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding Status}"
                                                     Value="Initialization">
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <Label Text="{helpers:Translate Initialization}"
                                       Grid.Column="1"
                                       FontFamily="{DynamicResource BoldFont}"
                                       FontSize="20"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       VerticalTextAlignment="Start">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Initialization"/>
                                    </Label.GestureRecognizers>
                                </Label>
                                <StackLayout Grid.Row="1"
                                             Grid.Column="1"
                                             Spacing="0">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Initialization"/>
                                    </StackLayout.GestureRecognizers>
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout"
                                                     Binding="{Binding ExpandedStatus}"
                                                     Value="Initialization">
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </DataTrigger>
                                    </StackLayout.Triggers>
                                    <Label Text="{Binding InitStatusDesc}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="14"
                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                           VerticalTextAlignment="Start"/>
                                </StackLayout>
                                <StackLayout Grid.Row="1"
                                             Grid.Column="1"
                                             Spacing="0"
                                             BackgroundColor="Transparent"
                                             BindableLayout.ItemsSource="{Binding InitStatusMessages}"
                                             IsVisible="False">
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout"
                                                     Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                     Value="Initialization">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </StackLayout.Triggers>
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Initialization"/>
                                    </StackLayout.GestureRecognizers>
                                    <BindableLayout.ItemTemplate>
                                        <DataTemplate>
                                            <StackLayout Spacing="0"
                                                         Padding="0,4">
                                                <StackLayout Spacing="0"
                                                             Orientation="Horizontal">
                                                    <Label FontFamily="{DynamicResource RegularFont}"
                                                           Text="{Binding Description}"
                                                           FontSize="14"
                                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                           VerticalTextAlignment="Start"
                                                           IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}"/>
                                                    <StackLayout Spacing="0"
                                                                 Orientation="Horizontal"
                                                                 IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                        <Label FontFamily="{DynamicResource RegularFont}"
                                                               FontSize="14"
                                                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                               VerticalTextAlignment="Start"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                                                            <Label.FormattedText>
                                                                <FormattedString>
                                                                    <Span Text="{Binding Description}"/>
                                                                    <Span Text=" "/>
                                                                    <Span Text="{Binding ExplorerLink.Text}"/>
                                                                </FormattedString>
                                                            </Label.FormattedText>
                                                        </Label>
                                                        <Label FontFamily="{DynamicResource RegularFont}"
                                                               FontSize="14"
                                                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                               VerticalTextAlignment="Start"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                            <Label.FormattedText>
                                                                <FormattedString>
                                                                    <Span Text="{Binding Description}"/>
                                                                    <Span Text=" "/>
                                                                    <Span Text="{Binding ExplorerLink.Text}"
                                                                          TextDecorations="Underline"
                                                                          TextColor="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}">
                                                                        <Span.GestureRecognizers>
                                                                            <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                                  CommandParameter="{Binding ExplorerLink.Url}"/>
                                                                        </Span.GestureRecognizers>
                                                                    </Span>
                                                                </FormattedString>
                                                            </Label.FormattedText>
                                                        </Label>
                                                        <Image Source="ic_export__green"
                                                               VerticalOptions="Center"
                                                               HorizontalOptions="EndAndExpand"
                                                               WidthRequest="10"
                                                               HeightRequest="10"
                                                               Margin="12,0,0,0"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                            <Image.GestureRecognizers>
                                                                <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                      CommandParameter="{Binding ExplorerLink.Url}"/>
                                                            </Image.GestureRecognizers>
                                                        </Image>
                                                    </StackLayout>
                                                </StackLayout>
                                            </StackLayout>
                                        </DataTemplate>
                                    </BindableLayout.ItemTemplate>
                                </StackLayout>
                                <StackLayout Grid.Column="2"
                                             Grid.RowSpan="2">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Initialization"/>
                                    </StackLayout.GestureRecognizers>
                                    <Image Source="DownArrow"
                                           HeightRequest="10"
                                           WidthRequest="10"
                                           Margin="0,5,0,0"
                                           VerticalOptions="StartAndExpand"
                                           HorizontalOptions="Center"
                                           Rotation="0">
                                        <Image.Triggers>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding BindingContext.InitStatusMessages.Count, Source={x:Reference BindingContextPage}}"
                                                         Value="0">
                                                <Setter Property="IsVisible"
                                                        Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                         Value="Initialization">
                                                <Setter Property="Rotation"
                                                        Value="180"/>
                                            </DataTrigger>
                                        </Image.Triggers>
                                    </Image>
                                </StackLayout>
                            </Grid>
                            <Grid HorizontalOptions="FillAndExpand"
                                  ColumnSpacing="20"
                                  RowSpacing="8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="10" />
                                </Grid.ColumnDefinitions>
                                <Image Source="ic_status__empty"
                                       WidthRequest="24"
                                       HeightRequest="24"
                                       VerticalOptions="Start"
                                       HorizontalOptions="Center"
                                       IsVisible="False">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="In Progress">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <Image WidthRequest="24"
                                       HeightRequest="24"
                                       VerticalOptions="Start"
                                       HorizontalOptions="Center"
                                       IsVisible="False">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding Status}"
                                                     Value="Completion">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__completed"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__completed"/>
                                        </DataTrigger>
                                        <MultiTrigger TargetType="Image">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding Status}"
                                                                  Value="Completion"/>
                                                <BindingCondition Binding="{Binding State}"
                                                                  Value="In Progress"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source"
                                                    Value="ic_status__completed"/>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger>
                                        <MultiTrigger TargetType="Image">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding State}"
                                                                  Value="Canceled"/>
                                                <BindingCondition Binding="{Binding Status}"
                                                                  Value="Initialization"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger>
                                        <MultiTrigger TargetType="Image">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding State}"
                                                                  Value="Canceled"/>
                                                <BindingCondition Binding="{Binding Status}"
                                                                  Value="Exchanging"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger>
                                        <MultiTrigger TargetType="Image">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding State}"
                                                                  Value="Refunded"/>
                                                <BindingCondition Binding="{Binding Status}"
                                                                  Value="Exchanging"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger>
                                        <MultiTrigger TargetType="Image">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding State}"
                                                                  Value="Unsettled"/>
                                                <BindingCondition Binding="{Binding Status}"
                                                                  Value="Exchanging"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger>
                                    </Image.Triggers>
                                </Image>
                                <lottie:AnimationView WidthRequest="24"
                                                      HeightRequest="24"
                                                      Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                                      AnimationSource="AssetOrBundle"
                                                      ImageAssetsFolder="Assets/Animations"
                                                      AutoPlay="True"
                                                      RepeatMode="Infinite"
                                                      Speed="1"
                                                      VerticalOptions="Start"
                                                      HorizontalOptions="Center">
                                    <lottie:AnimationView.IsVisible>
                                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                            <Binding Path="Status"
                                                     Mode="OneWay"
                                                     Converter="{StaticResource EqualsConverter}"
                                                     ConverterParameter="Exchanging"/>
                                            <Binding Path="State"
                                                     Mode="OneWay"
                                                     Converter="{StaticResource EqualsConverter}"
                                                     ConverterParameter="In Progress"/>
                                        </MultiBinding>
                                    </lottie:AnimationView.IsVisible>
                                </lottie:AnimationView>
                                <Image Grid.Row="1"
                                       Source="ic_line__empty"
                                       VerticalOptions="Center"
                                       HorizontalOptions="Center"
                                       Aspect="AspectFill"
                                       WidthRequest="1"
                                       HeightRequest="40">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding ExpandedStatus}"
                                                     Value="Exchanging">
                                            <Setter Property="HeightRequest"
                                                    Value="60"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <Image Grid.Row="1"
                                       Source="ic_line__full"
                                       VerticalOptions="Center"
                                       HorizontalOptions="Center"
                                       Aspect="AspectFill"
                                       WidthRequest="1"
                                       HeightRequest="40"
                                       IsVisible="False">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding ExpandedStatus}"
                                                     Value="Exchanging">
                                            <Setter Property="HeightRequest"
                                                    Value="60"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding Status}"
                                                     Value="Completion">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <Label Text="{helpers:Translate Exchanging}"
                                       Grid.Column="1"
                                       FontFamily="{DynamicResource BoldFont}"
                                       FontSize="20"
                                       BackgroundColor="Transparent"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       VerticalTextAlignment="Start">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Exchanging"/>
                                    </Label.GestureRecognizers>
                                </Label>
                                <StackLayout Grid.Row="1"
                                             Grid.Column="1"
                                             Spacing="0">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Exchanging"/>
                                    </StackLayout.GestureRecognizers>
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout"
                                                     Binding="{Binding ExpandedStatus}"
                                                     Value="Exchanging">
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </DataTrigger>
                                    </StackLayout.Triggers>
                                    <Label Text="{Binding ExchangeStatusDesc}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="14"
                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                           VerticalTextAlignment="Start"/>
                                </StackLayout>
                                <StackLayout Grid.Row="1"
                                             Grid.Column="1"
                                             Spacing="0"
                                             BindableLayout.ItemsSource="{Binding ExchangeStatusMessages}"
                                             IsVisible="False">
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout"
                                                     Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                     Value="Exchanging">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </StackLayout.Triggers>
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Exchanging"/>
                                    </StackLayout.GestureRecognizers>
                                    <BindableLayout.ItemTemplate>
                                        <DataTemplate>
                                            <StackLayout Spacing="0"
                                                         Padding="0,4">
                                                <StackLayout Spacing="0"
                                                             Orientation="Horizontal"
                                                             HorizontalOptions="FillAndExpand">
                                                    <Label FontFamily="{DynamicResource RegularFont}"
                                                           Text="{Binding Description}"
                                                           FontSize="14"
                                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                           VerticalTextAlignment="Start"
                                                           IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}"/>
                                                    <StackLayout Spacing="0"
                                                                 Orientation="Horizontal"
                                                                 HorizontalOptions="FillAndExpand" 
                                                                 IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                        <Label FontFamily="{DynamicResource RegularFont}"
                                                               FontSize="14"
                                                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                               VerticalTextAlignment="Start"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                                                            <Label.FormattedText>
                                                                <FormattedString>
                                                                    <Span Text="{Binding Description}"/>
                                                                    <Span Text=" "/>
                                                                    <Span Text="{Binding ExplorerLink.Text}"/>
                                                                </FormattedString>
                                                            </Label.FormattedText>
                                                        </Label>
                                                        <Label FontFamily="{DynamicResource RegularFont}"
                                                               FontSize="14"
                                                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                               VerticalTextAlignment="Start"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                            <Label.FormattedText>
                                                                <FormattedString>
                                                                    <Span Text="{Binding Description}"/>
                                                                    <Span Text=" "/>
                                                                    <Span Text="{Binding ExplorerLink.Text}"
                                                                          TextDecorations="Underline"
                                                                          TextColor="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}">
                                                                        <Span.GestureRecognizers>
                                                                            <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                                  CommandParameter="{Binding ExplorerLink.Url}"/>
                                                                        </Span.GestureRecognizers>
                                                                    </Span>
                                                                </FormattedString>
                                                            </Label.FormattedText>
                                                        </Label>
                                                        <Image Source="ic_export__green"
                                                               VerticalOptions="Center"
                                                               HorizontalOptions="EndAndExpand"
                                                               WidthRequest="10"
                                                               HeightRequest="10"
                                                               Margin="12,0,0,0"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                            <Image.GestureRecognizers>
                                                                <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                      CommandParameter="{Binding ExplorerLink.Url}"/>
                                                            </Image.GestureRecognizers>
                                                        </Image>
                                                    </StackLayout>
                                                </StackLayout>
                                            </StackLayout>
                                        </DataTemplate>
                                    </BindableLayout.ItemTemplate>
                                </StackLayout>
                                <StackLayout Grid.Column="2"
                                             Grid.RowSpan="2">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Exchanging"/>
                                    </StackLayout.GestureRecognizers>
                                    <Image Source="DownArrow"
                                           HeightRequest="10"
                                           WidthRequest="10"
                                           Margin="0,5,0,0"
                                           VerticalOptions="Start"
                                           HorizontalOptions="Center"
                                           Rotation="0">
                                        <Image.Triggers>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding BindingContext.ExchangeStatusMessages.Count, Source={x:Reference BindingContextPage}}"
                                                         Value="0">
                                                <Setter Property="IsVisible"
                                                        Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                         Value="Exchanging">
                                                <Setter Property="Rotation"
                                                        Value="180"/>
                                            </DataTrigger>
                                        </Image.Triggers>
                                    </Image>
                                </StackLayout>
                            </Grid>
                            <Grid HorizontalOptions="FillAndExpand"
                                  ColumnSpacing="20"
                                  RowSpacing="8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="10" />
                                </Grid.ColumnDefinitions>
                                <Image Source="ic_status__empty"
                                       WidthRequest="24"
                                       HeightRequest="24"
                                       VerticalOptions="Start"
                                       HorizontalOptions="Center"
                                       IsVisible="False">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="In Progress">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <Image WidthRequest="24"
                                       HeightRequest="24"
                                       VerticalOptions="Start"
                                       HorizontalOptions="Center"
                                       IsVisible="False">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__completed"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Canceled">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Unsettled">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Refunded">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                            <Setter Property="Source"
                                                    Value="ic_status__canceled"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <lottie:AnimationView WidthRequest="24"
                                                      HeightRequest="24"
                                                      Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                                      AnimationSource="AssetOrBundle"
                                                      ImageAssetsFolder="Assets/Animations"
                                                      AutoPlay="True"
                                                      RepeatMode="Infinite"
                                                      Speed="1"
                                                      VerticalOptions="Start"
                                                      HorizontalOptions="Center">
                                    <lottie:AnimationView.IsVisible>
                                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                            <Binding Path="Status"
                                                     Mode="OneWay"
                                                     Converter="{StaticResource EqualsConverter}"
                                                     ConverterParameter="Completion"/>
                                            <Binding Path="State"
                                                     Mode="OneWay"
                                                     Converter="{StaticResource EqualsConverter}"
                                                     ConverterParameter="In Progress"/>
                                        </MultiBinding>
                                    </lottie:AnimationView.IsVisible>
                                </lottie:AnimationView>
                                <Label Text="{helpers:Translate Completion}"
                                       Grid.Column="1"
                                       FontFamily="{DynamicResource BoldFont}"
                                       FontSize="20"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       VerticalTextAlignment="Start">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Completion"/>
                                    </Label.GestureRecognizers>
                                </Label>
                                <StackLayout Grid.Row="1"
                                             Grid.Column="1"
                                             Spacing="0">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Completion"/>
                                    </StackLayout.GestureRecognizers>
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout"
                                                     Binding="{Binding ExpandedStatus}"
                                                     Value="Completion">
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </DataTrigger>
                                    </StackLayout.Triggers>
                                    <Label Text="{Binding CompletionStatusDesc}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="14"
                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                           VerticalTextAlignment="Start"/>
                                </StackLayout>
                                <StackLayout Grid.Row="1"
                                             Grid.Column="1"
                                             Spacing="0"
                                             BackgroundColor="Transparent"
                                             BindableLayout.ItemsSource="{Binding CompletionStatusMessages}"
                                             IsVisible="False">
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout"
                                                     Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                     Value="Completion">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </StackLayout.Triggers>
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Completion"/>
                                    </StackLayout.GestureRecognizers>
                                    <BindableLayout.ItemTemplate>
                                        <DataTemplate>
                                            <StackLayout Spacing="0"
                                                         Padding="0,4">
                                                <StackLayout Spacing="0"
                                                             Orientation="Horizontal">
                                                    <Label FontFamily="{DynamicResource RegularFont}"
                                                           Text="{Binding Description}"
                                                           FontSize="14"
                                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                           VerticalTextAlignment="Start"
                                                           IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}"/>
                                                    <StackLayout Spacing="0"
                                                                 Orientation="Horizontal"
                                                                 HorizontalOptions="FillAndExpand"
                                                                 IsVisible="{Binding ExplorerLink, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                        <Label FontFamily="{DynamicResource RegularFont}"
                                                               FontSize="14"
                                                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                               VerticalTextAlignment="Start"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                                                            <Label.FormattedText>
                                                                <FormattedString>
                                                                    <Span Text="{Binding Description}"/>
                                                                    <Span Text=" "/>
                                                                    <Span Text="{Binding ExplorerLink.Text}"/>
                                                                </FormattedString>
                                                            </Label.FormattedText>
                                                        </Label>
                                                        <Label FontFamily="{DynamicResource RegularFont}"
                                                               FontSize="14"
                                                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                                               VerticalTextAlignment="Start"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                            <Label.FormattedText>
                                                                <FormattedString>
                                                                    <Span Text="{Binding Description}"/>
                                                                    <Span Text=" "/>
                                                                    <Span Text="{Binding ExplorerLink.Text}"
                                                                          TextDecorations="Underline"
                                                                          TextColor="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}">
                                                                        <Span.GestureRecognizers>
                                                                            <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                                  CommandParameter="{Binding ExplorerLink.Url}"/>
                                                                        </Span.GestureRecognizers>
                                                                    </Span>
                                                                </FormattedString>
                                                            </Label.FormattedText>
                                                        </Label>
                                                        <Image Source="ic_export__green"
                                                               VerticalOptions="Center"
                                                               HorizontalOptions="EndAndExpand"
                                                               WidthRequest="10"
                                                               HeightRequest="10"
                                                               Margin="12,0,0,0"
                                                               IsVisible="{Binding ExplorerLink.Url, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                                                            <Image.GestureRecognizers>
                                                                <TapGestureRecognizer Command="{Binding BindingContext.OpenInExplorerCommand, Source={x:Reference BindingContextPage}}"
                                                                                      CommandParameter="{Binding ExplorerLink.Url}"/>
                                                            </Image.GestureRecognizers>
                                                        </Image>
                                                    </StackLayout>
                                                </StackLayout>
                                            </StackLayout>
                                        </DataTemplate>
                                    </BindableLayout.ItemTemplate>
                                </StackLayout>
                                <StackLayout Grid.Column="2"
                                             Grid.RowSpan="2">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ExpandStatusCommand}"
                                                              CommandParameter="Completion"/>
                                    </StackLayout.GestureRecognizers>
                                    <Image Source="DownArrow"
                                           HeightRequest="10"
                                           WidthRequest="10"
                                           Margin="0,5,0,0"
                                           VerticalOptions="Start"
                                           HorizontalOptions="Center"
                                           Rotation="0">
                                        <Image.Triggers>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding BindingContext.CompletionStatusMessages.Count, Source={x:Reference BindingContextPage}}"
                                                         Value="0">
                                                <Setter Property="IsVisible"
                                                        Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding BindingContext.ExpandedStatus, Source={x:Reference BindingContextPage}}"
                                                         Value="Completion">
                                                <Setter Property="Rotation"
                                                        Value="180"/>
                                            </DataTrigger>
                                        </Image.Triggers>
                                    </Image>
                                </StackLayout>
                            </Grid>
                        </StackLayout>

                        <!--Details tab-->
                        <StackLayout Padding="16,24"
                                     BackgroundColor="Transparent"
                                     x:Name="DetailsTab">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="SwapInfoStates">
                                    <VisualState Name="SwapProgress">
                                        <VisualState.Setters>
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState Name="SwapDetails">
                                        <VisualState.Setters>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <StackLayout>
                                <Label Text="{helpers:Translate Price}"
                                       FontFamily="{DynamicResource RegularFont}"
                                       FontSize="14"
                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                       VerticalTextAlignment="Center"
                                       HorizontalTextAlignment="Start"/>
                                <Label Text="{Binding Price}"
                                       FontFamily="{DynamicResource RegularFont}"
                                       FontSize="16"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       VerticalTextAlignment="Center"
                                       HorizontalTextAlignment="Start"/>
                            </StackLayout>
                        </StackLayout>
                    </StackLayout>
                </ScrollView>
            </StackLayout>
        </controls:CustomFrame>
    </StackLayout>
</pages:PopupPage>
