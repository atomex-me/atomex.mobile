<?xml version="1.0" encoding="UTF-8"?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             xmlns:custom="clr-namespace:atomex.CustomElements"
             xmlns:converters="clr-namespace:atomex.Converters"
             xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
             xmlns:behaviors="clr-namespace:EventToCommandBehavior"
             x:Class="atomex.Views.CreateSwap.ExchangePage"
             Style="{DynamicResource MainBackgroundStyle}">
     <ContentPage.Resources>
        <ResourceDictionary>
            <converters:NullToBooleanConverter x:Key="NullToBoolean"/>
            <converters:NullToBooleanInvertConverter x:Key="NullToBooleanInvert"/>
            <converters:AllTrueMultiConverter x:Key="AllTrueConverter" />
            <converters:EqualsConverter x:Key="EqualsConverter"/>
            <converters:StringToBoolConverter x:Key="StringToBool"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ListView ItemsSource="{Binding GroupedSwaps}"
              IsGroupingEnabled="True"
              SelectionMode="Single"
              SelectedItem="{Binding SelectedSwap}"
              ItemSelected="ItemSelected"
              HasUnevenRows="True"
              SeparatorVisibility="Default"
              SeparatorColor="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"
              BackgroundColor="Transparent"
              CachingStrategy="RecycleElement">
        <ListView.Header>
            <StackLayout Spacing="0">
                <Label Text="{helpers:Translate ExchangePageTitle}"
                       Style="{DynamicResource TitleTextStyle}"/>
                <Grid HorizontalOptions="Fill"
                      ColumnSpacing="0"
                      RowSpacing="4"
                      Margin="16">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="60" />
                        <RowDefinition Height="40" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Frame Grid.RowSpan="2"
                           Grid.ColumnSpan="3"
                           HorizontalOptions="FillAndExpand"
                           HasShadow="False"
                           CornerRadius="16"
                           BackgroundColor="{AppThemeBinding Dark='Transparent', Light={StaticResource AdditionalBackgroundColor}}"
                           BorderColor="{AppThemeBinding Dark='#29DCECFF', Light={StaticResource AdditionalBackgroundColor}}">
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding FromViewModel.SelectCurrencyCommand}"/>
                        </Frame.GestureRecognizers>
                    </Frame>
                    <Frame BackgroundColor="{AppThemeBinding Dark='#29DCECFF', Light={StaticResource MainBackgroundColor}}"
                           BorderColor="Transparent"
                           Padding="5"
                           HasShadow="False"
                           Margin="16,0,0,0"
                           HeightRequest="35"
                           CornerRadius="20"
                           VerticalOptions="End"
                           IsVisible="{Binding FromViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding FromViewModel.SelectCurrencyCommand}"/>
                        </Frame.GestureRecognizers>
                        <StackLayout Spacing="8"
                                     Orientation="Horizontal"
                                     HorizontalOptions="Center">
                            <Image Source="{Binding FromViewModel.CurrencyViewModel.CurrencyCode}"
                                   WidthRequest="22"
                                   HeightRequest="22"
                                   Margin="0,5"/>
                            <Label Text="{Binding FromViewModel.CurrencyViewModel.CurrencyCode}"
                                   FontFamily="{DynamicResource RegularFont}"
                                   FontSize="16"
                                   VerticalTextAlignment="Center"
                                   TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                        </StackLayout>
                    </Frame>
                    <Label Grid.Row="1"
                           Margin="18,10,0,0"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="12"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           IsVisible="{Binding FromViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}"
                           MaxLines="1"
                           LineBreakMode="MiddleTruncation"
                           Text="{Binding FromViewModel.Address}"/>
                    <Button Grid.Row="1"
                            Grid.Column="1"
                            Text="{helpers:Translate MaxButton}"
                            BorderColor="{AppThemeBinding Dark='#29C4DEFF', Light='#1F000E22'}"
                            BackgroundColor="Transparent"
                            BorderWidth="1"
                            TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                            FontSize="12"
                            Padding="0"
                            TextTransform="Lowercase"
                            HeightRequest="30"
                            Margin="10,0"
                            CornerRadius="15"
                            VerticalOptions="Start"
                            Command="{Binding FromViewModel.MaxCommand}"
                            IsVisible="{Binding FromViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}"/>
                    <Label Grid.Row="1"
                           Grid.Column="2"
                           Margin="16,0"
                           Text="{Binding FromViewModel.AmountInBase, StringFormat='${0:f2}'}"
                           HorizontalTextAlignment="End"
                           VerticalTextAlignment="Start"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="14"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           IsVisible="{Binding FromViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}"/>
                    <Label Grid.RowSpan="2"
                           Grid.ColumnSpan="2"
                           Text="{helpers:Translate ChooseFromCurrency}"
                           VerticalTextAlignment="Center"
                           Padding="16,0"
                           FontSize="20"
                           FontFamily="{DynamicResource RegularFont}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           IsVisible="{Binding FromViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding FromViewModel.SelectCurrencyCommand}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <custom:CustomEntry Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Keyboard="Numeric"
                                        Text="{Binding FromViewModel.AmountString, Mode=TwoWay}"
                                        Style="{DynamicResource EntryStyle}"
                                        FontSize="24"
                                        HorizontalTextAlignment="End"
                                        VerticalTextAlignment="End"
                                        Margin="5,0,16,5"
                                        IsVisible="{Binding FromViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                        <custom:CustomEntry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="Focused"
                                                              Command="{Binding FromViewModel.RaiseGotInputFocusCommand}"/>
                        </custom:CustomEntry.Behaviors>
                        <custom:CustomEntry.Triggers>
                            <DataTrigger TargetType="custom:CustomEntry"
                                         Binding="{Binding FromViewModel.IsAmountValid}"
                                         Value="False">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="custom:CustomEntry"
                                         Binding="{Binding FromViewModel.IsAmountValid}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                            </DataTrigger>
                        </custom:CustomEntry.Triggers>
                    </custom:CustomEntry>
                    <Label Grid.Column="1"
                           Grid.ColumnSpan="2"
                           Grid.RowSpan="2"
                           Text="0"
                           FontSize="24"
                           Margin="16,0"
                           HorizontalTextAlignment="End"
                           VerticalTextAlignment="Center"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           IsVisible="{Binding FromViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding FromViewModel.SelectCurrencyCommand}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <Image Grid.Row="2"
                           Margin="10"
                           Source="ic_swap"
                           HeightRequest="18"
                           WidthRequest="18"
                           HorizontalOptions="Center">
                        <Image.IsVisible>
                            <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                <Binding Path="FromViewModel.CurrencyViewModel"
                                         Mode="OneWay"
                                         Converter="{StaticResource NullToBoolean}"/>
                                <Binding Path="ToViewModel.CurrencyViewModel"
                                         Mode="OneWay"
                                         Converter="{StaticResource NullToBoolean}"/>
                            </MultiBinding>                   
                        </Image.IsVisible>
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding SwapCurrenciesCommand}"/>
                        </Image.GestureRecognizers>
                    </Image>
                    <StackLayout Grid.Row="2"
                                 Grid.Column="1"
                                 Grid.ColumnSpan="2"
                                 Spacing="0"
                                 HeightRequest="18"
                                 HorizontalOptions="End"
                                 Orientation="Horizontal">
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding AvailableAmountTooltipCommand}"/>
                        </StackLayout.GestureRecognizers>
                        <StackLayout.IsVisible>
                            <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                <Binding Path="FromViewModel.CurrencyViewModel"
                                         Mode="OneWay"
                                         Converter="{StaticResource NullToBoolean}"/>
                                <Binding Path="ToViewModel.CurrencyViewModel"
                                         Mode="OneWay"
                                         Converter="{StaticResource NullToBoolean}"/>
                            </MultiBinding>                   
                        </StackLayout.IsVisible>
                        <Label HorizontalTextAlignment="End"
                               VerticalTextAlignment="Center"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="12">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{helpers:Translate Available}"/>
                                    <Span Text=" "/>
                                    <Span Text="{Binding EstimatedMaxFromAmount, StringFormat='{0:0.#########}'}"/>
                                    <Span Text=" "/>
                                    <Span Text="{Binding FromViewModel.CurrencyViewModel.CurrencyCode}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Image Source="ic_question"
                               Margin="5,0"
                               WidthRequest="12"
                               HeightRequest="12"/>
                    </StackLayout>
                    <Frame Grid.Row="3"
                           Grid.RowSpan="2"
                           Grid.ColumnSpan="3"
                           HorizontalOptions="FillAndExpand"
                           HasShadow="False"
                           CornerRadius="16"
                           BackgroundColor="{AppThemeBinding Dark='Transparent', Light={StaticResource AdditionalBackgroundColor}}"
                           BorderColor="{AppThemeBinding Dark='#29DCECFF', Light={StaticResource AdditionalBackgroundColor}}">
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ToViewModel.SelectCurrencyCommand}"/>
                        </Frame.GestureRecognizers>
                    </Frame>
                    <Frame Grid.Row="3"
                           Padding="5"
                           Margin="16,0,0,0"
                           HeightRequest="35"
                           HasShadow="False"
                           CornerRadius="20"
                           VerticalOptions="End"
                           BackgroundColor="{AppThemeBinding Dark='#29DCECFF', Light={StaticResource MainBackgroundColor}}"
                           BorderColor="Transparent"
                           IsVisible="{Binding ToViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ToViewModel.SelectCurrencyCommand}"/>
                        </Frame.GestureRecognizers>
                        <StackLayout Spacing="8"
                                     Orientation="Horizontal"
                                     HorizontalOptions="Center">
                            <Image Source="{Binding ToViewModel.CurrencyViewModel.CurrencyCode}"
                                   WidthRequest="22"
                                   HeightRequest="22"
                                   Margin="0,5"/>
                            <Label Text="{Binding ToViewModel.CurrencyViewModel.CurrencyCode}"
                                   FontFamily="{DynamicResource RegularFont}"
                                   FontSize="16"
                                   VerticalTextAlignment="Center"
                                   TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                        </StackLayout>
                    </Frame>
                    <custom:CustomEntry Grid.Row="3"
                                        Grid.ColumnSpan="2"
                                        Grid.Column="1"
                                        Keyboard="Numeric"
                                        Text="{Binding ToViewModel.AmountString, Mode=TwoWay}"
                                        Style="{DynamicResource EntryStyle}"                                    
                                        FontSize="24"
                                        HorizontalTextAlignment="End"
                                        VerticalTextAlignment="End"
                                        Margin="5,0,16,5"
                                        IsVisible="{Binding ToViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                        <custom:CustomEntry.Triggers>
                            <DataTrigger TargetType="custom:CustomEntry"
                                         Binding="{Binding ToViewModel.IsAmountValid}"
                                         Value="False">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                            </DataTrigger>
                            <DataTrigger TargetType="custom:CustomEntry"
                                         Binding="{Binding FromViewModel.IsAmountValid}"
                                         Value="True">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                            </DataTrigger>
                        </custom:CustomEntry.Triggers>
                        <custom:CustomEntry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="Focused"
                                                              Command="{Binding ToViewModel.RaiseGotInputFocusCommand}"/>
                        </custom:CustomEntry.Behaviors>
                    </custom:CustomEntry>
                    <Label Grid.Row="3"
                           Grid.RowSpan="2"
                           Grid.ColumnSpan="2"
                           Text="{helpers:Translate ChooseToCurrency}"
                           VerticalTextAlignment="Center"
                           Padding="16,0"
                           FontSize="20"
                           FontFamily="{DynamicResource RegularFont}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           IsVisible="{Binding ToViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ToViewModel.SelectCurrencyCommand}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <Label Grid.Row="3"
                           Grid.Column="1"
                           Grid.ColumnSpan="2"
                           Grid.RowSpan="2"
                           Text="0"
                           FontSize="24"
                           Margin="16,0"
                           HorizontalTextAlignment="End"
                           VerticalTextAlignment="Center"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           IsVisible="{Binding ToViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBooleanInvert}}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ToViewModel.SelectCurrencyCommand}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <Label Grid.Row="4"
                           Text="{Binding ToViewModel.Address}"
                           Margin="18,10,0,0"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="12"
                           MaxLines="1"
                           LineBreakMode="MiddleTruncation"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           IsVisible="{Binding ToViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}"/>
                    <Label Grid.Row="4"
                           Grid.Column="2"
                           Margin="16,0"
                           Text="{Binding ToViewModel.AmountInBase, StringFormat='${0:f2}'}"
                           HorizontalTextAlignment="End"
                           VerticalTextAlignment="Start"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="14"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           IsVisible="{Binding ToViewModel.CurrencyViewModel, Mode=OneWay, Converter={StaticResource NullToBoolean}}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ToViewModel.SelectCurrencyCommand}"/>
                        </Label.GestureRecognizers>
                    </Label>
                </Grid>
                <StackLayout Orientation="Horizontal"
                             Padding="18,0,0,10"
                             HorizontalOptions="Start"
                             VerticalOptions="Center"
                             Spacing="0">
                    <StackLayout.IsVisible>
                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                            <Binding Path="FromViewModel.CurrencyViewModel"
                                     Mode="OneWay"
                                     Converter="{StaticResource NullToBoolean}"/>
                            <Binding Path="ToViewModel.CurrencyViewModel"
                                     Mode="OneWay"
                                     Converter="{StaticResource NullToBoolean}"/>
                            <Binding Path="UseRedeemAddress"
                                     Mode="OneWay"/>
                        </MultiBinding>
                    </StackLayout.IsVisible>
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ChangeRedeemAddress}"/>
                    </StackLayout.GestureRecognizers>
                    <Label Text="{helpers:Translate ChangeRedeemAddress}"
                           HorizontalTextAlignment="Start"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="16"/>
                    <Image Source="{AppThemeBinding Dark=RightArrow__white, Light=RightArrow__black}"
                           Margin="10,0"
                           HeightRequest="12"
                           WidthRequest="12"/>
                </StackLayout>
                <StackLayout Spacing="2"
                             Padding="17,0">
                    <StackLayout.IsVisible>
                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                            <Binding Path="FromViewModel.CurrencyViewModel"
                                     Mode="OneWay"
                                     Converter="{StaticResource NullToBoolean}"/>
                            <Binding Path="ToViewModel.CurrencyViewModel"
                                     Mode="OneWay"
                                     Converter="{StaticResource NullToBoolean}"/>
                        </MultiBinding>
                    </StackLayout.IsVisible>
                    <Label HorizontalTextAlignment="Start"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="12">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{helpers:Translate EstimatedPriceLabel}"/>
                                <Span Text=" 1 "/>
                                <Span Text="{Binding BaseCurrencyCode}"/>
                                <Span Text=" = "/>
                                <Span Text="{Binding EstimatedPrice, StringFormat='{0:0.#########}'}"/>
                                <Span Text=" "/>
                                <Span Text="{Binding QuoteCurrencyCode}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <StackLayout Spacing="0"
                                 Orientation="Horizontal">
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding EstNetworkFeeTooltipCommand}"/>
                        </StackLayout.GestureRecognizers>
                        <Label HorizontalTextAlignment="Start"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="12">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{helpers:Translate EstimatedNetworkFeeLabel}"/>
                                    <Span Text=" "/>
                                    <Span Text="{Binding EstimatedTotalNetworkFeeInBase, StringFormat='${0:f2}'}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Image Source="ic_question"
                               Margin="5,0"
                               WidthRequest="12"
                               HeightRequest="12"/>
                    </StackLayout>
                </StackLayout>
                <StackLayout Margin="16,12,16,0"
                             IsVisible="False">
                    <StackLayout.Triggers>
                        <MultiTrigger TargetType="StackLayout">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding AmountToFeeRatioWarning.RelatedTo}"
                                                  Value="All"/>
                                <BindingCondition Binding="{Binding AmountToFeeRatioWarning.Text, Converter={StaticResource StringToBool}}"
                                                  Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </MultiTrigger>
                    </StackLayout.Triggers>
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding AmountToFeeRatioTooltipCommand}"/>
                    </StackLayout.GestureRecognizers>
                    <StackLayout Orientation="Horizontal"
                                 HorizontalOptions="FillAndExpand">
                        <Label Text="{Binding AmountToFeeRatioWarning.Text}"
                               FontSize="12"
                               FontFamily="{DynamicResource RegularFont}"
                               TextColor="#FFA800"
                               HorizontalTextAlignment="Start"
                               HorizontalOptions="StartAndExpand"
                               VerticalOptions="Center">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding AmountToFeeRatioWarning.Type}"
                                             Value="Warning">
                                    <Setter Property="TextColor"
                                            Value="#FFA800"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding AmountToFeeRatioWarning.Type}"
                                             Value="Error">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Image WidthRequest="12"
                               HeightRequest="12"
                               Source="ic_question"
                               HorizontalOptions="End"
                               Margin="0,0,30,0"
                               VerticalOptions="Center"
                               IsVisible="{Binding AmountToFeeRatioWarning.TooltipText, Converter={StaticResource StringToBool}}">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding AmountToFeeRatioWarning.Type}"
                                             Value="Error">
                                    <Setter Property="Source"
                                            Value="ic_question__error"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding AmountToFeeRatioWarning.Type}"
                                             Value="Warning">
                                    <Setter Property="Source"
                                            Value="ic_question__warning"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                    </StackLayout>
                </StackLayout>
                <StackLayout Margin="16,12,16,0"
                             IsVisible="False">
                    <StackLayout.Triggers>
                        <MultiTrigger TargetType="StackLayout">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Message.RelatedTo}"
                                                  Value="All"/>
                                <BindingCondition Binding="{Binding Message.Text, Converter={StaticResource StringToBool}}"
                                                  Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </MultiTrigger>
                    </StackLayout.Triggers>
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding MessageTooltipCommand}"/>
                    </StackLayout.GestureRecognizers>
                    <StackLayout Orientation="Horizontal"
                                 HorizontalOptions="FillAndExpand">
                        <Label Text="{Binding Message.Text}"
                               FontSize="12"
                               FontFamily="{DynamicResource RegularFont}"
                               TextColor="#FFA800"
                               HorizontalTextAlignment="Start"
                               HorizontalOptions="StartAndExpand"
                               VerticalOptions="Center">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Message.Type}"
                                             Value="Warning">
                                    <Setter Property="TextColor"
                                            Value="#FFA800"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding Message.Type}"
                                             Value="Error">
                                    <Setter Property="TextColor"
                                            Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Image WidthRequest="12"
                               HeightRequest="12"
                               Source="ic_question"
                               HorizontalOptions="End"
                               Margin="0,0,30,0"
                               VerticalOptions="Center"
                               IsVisible="{Binding Message.TooltipText, Converter={StaticResource StringToBool}}">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Message.Type}"
                                             Value="Error">
                                    <Setter Property="Source"
                                            Value="ic_question__error"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Message.Type}"
                                             Value="Warning">
                                    <Setter Property="Source"
                                            Value="ic_question__warning"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                    </StackLayout>
                </StackLayout>
                <StackLayout VerticalOptions="End"
                             Margin="16">
                    <StackLayout.IsVisible>
                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                            <Binding Path="FromViewModel.CurrencyViewModel"
                                     Mode="OneWay"
                                     Converter="{StaticResource NullToBoolean}"/>
                            <Binding Path="ToViewModel.CurrencyViewModel"
                                     Mode="OneWay"
                                     Converter="{StaticResource NullToBoolean}"/>
                        </MultiBinding>
                    </StackLayout.IsVisible>
                    <Button Text="{helpers:Translate ExchangeLabel}"
                            CornerRadius="25"
                            BackgroundColor="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"
                            TextColor="{AppThemeBinding Dark={StaticResource MainButtonTextColorDark}, Light={StaticResource MainButtonTextColor}}"
                            FontSize="17"
                            HeightRequest="50"
                            HorizontalOptions="FillAndExpand"
                            FontFamily="{DynamicResource RegularFont}"
                            Command="{Binding ConvertCommand}">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CanExchange}"
                                         Value="False">
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark='#34DCECFF', Light='#34000E22'}"/>
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark='#29DCECFF', Light='#29000E22'}"/>
                                <Setter Property="Opacity"
                                        Value="0.5"/>
                                <Setter Property="IsEnabled"
                                        Value="False"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding CanExchange}"
                                         Value="True">
                                <Setter Property="BackgroundColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"/>
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource MainButtonTextColorDark}, Light={StaticResource MainButtonTextColor}}"/>
                                <Setter Property="Opacity"
                                        Value="1"/>
                                <Setter Property="IsEnabled"
                                        Value="True"/>
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                </StackLayout>
            </StackLayout>
        </ListView.Header>
        <ListView.GroupHeaderTemplate>
            <DataTemplate>
                <ViewCell Height="20">
                    <StackLayout HeightRequest="20"
                                 BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                                 Spacing="0">
                        <Label Text="{Binding Date, StringFormat='{}{0:MMMM dd, yyyy}'}"
                               BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               FontFamily="{DynamicResource RegularFont}"
                               Padding="10,0"
                               FontSize="12"
                               VerticalTextAlignment="Center"
                               VerticalOptions="CenterAndExpand"/>
                    </StackLayout>
                    </ViewCell>
            </DataTemplate>
        </ListView.GroupHeaderTemplate>
        <ListView.Footer>
            <StackLayout>
                <Button Text="{helpers:Translate ShowAll}"
                        BackgroundColor="{AppThemeBinding Dark='#29DCECFF', Light='#F7DCECFF'}"
                        TextColor="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"
                        Padding="16,0"
                        Margin="16,0"
                        CornerRadius="25"
                        HeightRequest="50"
                        IsVisible="{Binding CanShowMoreSwaps}"
                        Command="{Binding ShowAllSwapsCommand}"/>
                <Label Text="{helpers:Translate SwapHistoryText}"
                       BackgroundColor="Transparent"
                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                       FontFamily="{DynamicResource RegularFont}"
                       Padding="20,10"
                       FontSize="14"
                       VerticalTextAlignment="Center"
                       HorizontalTextAlignment="Center"/>
            </StackLayout>
        </ListView.Footer>
        <ListView.ItemTemplate>
            <DataTemplate>
                <custom:CustomViewCell SelectedBackgroundColor="{AppThemeBinding Dark={StaticResource ListViewSelectedBackgroundColorDark}, Light={StaticResource ListViewSelectedBackgroundColor}}">
                    <Grid Padding="8"
                          RowSpacing="0"
                          ColumnSpacing="5">
                        <Grid.Triggers>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Canceled">
                                <Setter Property="Opacity"
                                        Value="0.5"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Refunded">
                                <Setter Property="Opacity"
                                        Value="0.5"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding State}"
                                         Value="Unsettled">
                                <Setter Property="Opacity"
                                        Value="0.5"/>
                            </DataTrigger>
                        </Grid.Triggers>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding FromCurrencyCode}"
                               Grid.RowSpan="2"
                               WidthRequest="32"
                               HeightRequest="32"
                               VerticalOptions="CenterAndExpand"/>
                        <Label Grid.Column="1"
                               Text="{Binding FromCurrencyCode}"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               FontSize="14"
                               FontFamily="{DynamicResource RegularFont}"
                               VerticalTextAlignment="End"
                               HorizontalTextAlignment="Start"/>
                        <Label Grid.Row="1"
                               Grid.Column="1"
                               Text="{Binding FromAmount, StringFormat='{0:0.000000000}'}"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               FontSize="12"
                               FontFamily="{DynamicResource RegularFont}"
                               VerticalTextAlignment="Start"
                               HorizontalTextAlignment="Start"/>
                        <Image Grid.Column="2"
                               Grid.RowSpan="3"
                               WidthRequest="24"
                               VerticalOptions="CenterAndExpand">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="Source"
                                            Value="ConvertArrow"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="In Progress">
                                    <Setter Property="Source"
                                            Value="ConvertArrow"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Canceled">
                                    <Setter Property="Source"
                                            Value="ConvertArrowFailure"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Refunded">
                                    <Setter Property="Source"
                                            Value="ConvertArrowFailure"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Unsettled">
                                    <Setter Property="Source"
                                            Value="ConvertArrowFailure"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <Image Source="{Binding ToCurrencyCode}"
                                Grid.Column="3"
                                Grid.RowSpan="2"
                                WidthRequest="32"
                                HeightRequest="32"
                                VerticalOptions="CenterAndExpand"/>
                        <Label Grid.Column="4"
                                Text="{Binding ToCurrencyCode}"
                                TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                FontSize="14"
                                FontFamily="{DynamicResource RegularFont}"
                                VerticalTextAlignment="End"
                                HorizontalTextAlignment="Start"/>
                        <Label Grid.Row="1"
                                Grid.Column="4"
                                Text="{Binding ToAmount, StringFormat='{0:0.000000000}'}"
                                TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                FontSize="12"
                                FontFamily="{DynamicResource RegularFont}"
                                VerticalTextAlignment="Start"
                                HorizontalTextAlignment="Start"/>
                        <Image Grid.Column="5"
                                Grid.RowSpan="2"
                                WidthRequest="24"
                                HeightRequest="24"
                                VerticalOptions="CenterAndExpand">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                                Binding="{Binding State}"
                                                Value="Completed">
                                    <Setter Property="Source"
                                            Value="SwapCompleted"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                                Binding="{Binding State}"
                                                Value="In Progress">
                                    <Setter Property="Source"
                                            Value="ic_status__empty"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                                Binding="{Binding State}"
                                                Value="Canceled">
                                    <Setter Property="Source"
                                            Value="SwapCanceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                                Binding="{Binding State}"
                                                Value="Refunded">
                                    <Setter Property="Source"
                                            Value="SwapCanceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                                Binding="{Binding State}"
                                                Value="Unsettled">
                                    <Setter Property="Source"
                                            Value="SwapCanceled"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <lottie:AnimationView Grid.Column="5"
                                                Grid.RowSpan="2"
                                                WidthRequest="24"
                                                HeightRequest="24"
                                                Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                                AnimationSource="AssetOrBundle"
                                                ImageAssetsFolder="Assets/Animations"
                                                AutoPlay="True"
                                                RepeatMode="Infinite"
                                                Speed="1"
                                                VerticalOptions="Center"
                                                HorizontalOptions="Center">
                            <lottie:AnimationView.IsVisible>
                                <Binding Path="State"
                                            Mode="OneWay"
                                            Converter="{StaticResource EqualsConverter}"
                                            ConverterParameter="In Progress"/>
                            </lottie:AnimationView.IsVisible>
                        </lottie:AnimationView>
                    </Grid>
                </custom:CustomViewCell>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>
</ContentPage>