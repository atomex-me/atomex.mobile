<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:resources="clr-namespace:atomex.Resources"
             xmlns:custom="clr-namespace:atomex.CustomElements"
             xmlns:converters="clr-namespace:atomex.Converters"
             x:Class="atomex.Views.CreateNewWallet.VerificationMnemonicPage"
             Title="{Binding Title}"
             Style="{DynamicResource AdditionalBackgroundStyle}">
    <ContentPage.Resources>
        <converters:AllTrueMultiConverter x:Key="AllTrueConverter" />
    </ContentPage.Resources>
    <ScrollView x:Name="Page">
        <StackLayout HorizontalOptions="CenterAndExpand"
                     VerticalOptions="CenterAndExpand">
            <Label Text="{x:Static resources:AppResources.MnemonicVerificationStepLabel}"
                   Style="{DynamicResource CreateNewWalletTitleStyle}"
                   Margin="20,0"/>
            <Label Text="{x:Static resources:AppResources.MnemonicVerificationDescriptionText}"
                   Style="{DynamicResource CreateNewWalletTextStyle}"
                   Margin="20,0"/>
            <Grid Margin="0,10"
                  BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                <Grid.Triggers>
                    <DataTrigger TargetType="Grid"
                                 Binding="{Binding TargetMnemonicSubstr.Count}"
                                 Value="0">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </Grid.Triggers>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <FlexLayout BindableLayout.ItemsSource="{Binding TargetMnemonicSubstr}"
                            Padding="10"
                            Direction="Row"
                            Wrap="Wrap"
                            AlignItems="Center"
                            JustifyContent="Center">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate>
                            <Frame Style="{DynamicResource EntryFrameStyle}"
                                   BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                                   CornerRadius="6"
                                   Padding="0"
                                   Margin="3"
                                   HeightRequest="36">
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer CommandParameter="{Binding ., Mode=TwoWay}" Tapped="OnTargetWordTapped"/>
                                </Frame.GestureRecognizers>
                                <Label Text="{Binding .}"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       FontFamily="{DynamicResource RegularFont}"
                                       LineBreakMode="WordWrap"
                                       FontSize="16"
                                       VerticalTextAlignment="Center"
                                       HorizontalTextAlignment="Center"
                                       Padding="8,0"/>
                            </Frame>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>
            </Grid>
            <Grid Padding="10,0,10,90">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.Triggers>
                    <DataTrigger TargetType="Grid"
                                 Binding="{Binding SourceMnemonicSubstr.Count}"
                                 Value="0">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </Grid.Triggers>
                <StackLayout Grid.Row="0">
                    <FlexLayout BindableLayout.ItemsSource="{Binding SourceMnemonicSubstr}"
                                Direction="Row"
                                Wrap="Wrap"
                                AlignItems="Center"
                                JustifyContent="Center">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <Frame Style="{DynamicResource EntryFrameStyle}"
                                       BackgroundColor="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"
                                       CornerRadius="6"
                                       Padding="0"
                                       Margin="3"
                                       HeightRequest="36">
                                    <Frame.GestureRecognizers>
                                        <TapGestureRecognizer CommandParameter="{Binding ., Mode=TwoWay}" Tapped="OnSourceWordTapped"/>
                                    </Frame.GestureRecognizers>
                                    <Label Text="{Binding .}"
                                           TextColor="{AppThemeBinding Dark={StaticResource MainButtonTextColorDark}, Light={StaticResource MainButtonTextColor}}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="16"
                                           VerticalTextAlignment="Center"
                                           HorizontalTextAlignment="Center"
                                           LineBreakMode="WordWrap"
                                           Padding="8,0"/>
                                </Frame>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </FlexLayout>
                </StackLayout>
            </Grid>
            <StackLayout Spacing="0"
                         Margin="30,0">
                <StackLayout.IsVisible>
                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                        <Binding Path="MnemonicVeryfied" Mode="OneWay" />
                        <Binding Path="UseDerivedKeyPswd" Mode="OneWay" />
                    </MultiBinding>
                </StackLayout.IsVisible>
                <Label Text="{x:Static resources:AppResources.DerivedVerificationDescriptionText}"
                       Style="{DynamicResource CreateNewWalletTextStyle}"
                       Margin="0,10"/>
                <custom:CustomFrame x:Name="PasswordFrame"
                                    CornerRadius="10"
                                    Style="{DynamicResource EntryFrameStyle}">
                    <StackLayout HeightRequest="60">
                        <RelativeLayout RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}">
                            <Label x:Name="PasswordHint"
                                   Style="{DynamicResource EntryHintStyle}"
                                   VerticalTextAlignment="Center"
                                   RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}"
                                   RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=1}"/>
                            <custom:CustomEntry x:Name="PasswordEntry"
                                                Placeholder="{x:Static resources:AppResources.PasswordEntryPlaceholder}"
                                                Keyboard="Text"
                                                Focused="PasswordEntryFocused"
                                                Unfocused="PasswordEntryFocused"
                                                IsPassword="True"
                                                Style="{DynamicResource CustomEntryStyle}"
                                                TextChanged="OnPasswordTextChanged"
                                                RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}"
                                                RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=1}"/>
                        </RelativeLayout>
                    </StackLayout>
                </custom:CustomFrame>
            </StackLayout>
            <Label Text="{Binding Warning}"
                   Style="{DynamicResource ErrorTextStyle}"
                   Margin="0">
                <Label.Triggers>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Warning}"
                                 Value="">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </Label.Triggers>
            </Label>
            <Button Text="{x:Static resources:AppResources.NextButton}"
                    IsEnabled="{Binding MnemonicVeryfied}"
                    Style="{DynamicResource MainButtonStyle}"
                    Margin="30"
                    Clicked="OnNextButtonClicked">
                <Button.IsVisible>
                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                        <Binding Path="MnemonicVeryfied" Mode="OneWay" />
                        <Binding Path="DerivedPswdVeryfied" Mode="OneWay" />
                    </MultiBinding>
                </Button.IsVisible>
            </Button>
        </StackLayout>
    </ScrollView>
</ContentPage>
