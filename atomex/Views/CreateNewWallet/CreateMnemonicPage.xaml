<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             xmlns:custom="clr-namespace:atomex.CustomElements"
             xmlns:converters="clr-namespace:atomex.Converters"
             xmlns:behaviors="clr-namespace:EventToCommandBehavior"
             x:Class="atomex.Views.CreateNewWallet.CreateMnemonicPage"
             Title="{Binding Title}"
             Style="{DynamicResource MainBackgroundStyle}">
    <ContentPage.Resources>
        <converters:StringToBoolConverter x:Key="StringToBool"/>
    </ContentPage.Resources>
    <ScrollView x:Name="Page">
        <StackLayout HorizontalOptions="CenterAndExpand"
                     VerticalOptions="CenterAndExpand"
                     Spacing="0"
                     Style="{DynamicResource CreateWalletStackLayoutStyle}">
            <Label Text="{helpers:Translate MnemonicPhraseStepLabel}"
                   Style="{DynamicResource CreateNewWalletTitleStyle}"/>
            <Label Text="{helpers:Translate MnemonicDescriptionText}"
                   Style="{DynamicResource CreateNewWalletLeftAlignTextStyle}"/>
            <Grid HorizontalOptions="Fill"
                  ColumnSpacing="0"
                  RowSpacing="0"
                  Margin="0,10,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="35" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="9*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <custom:CustomFrame Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    CornerRadius="20,20,0,0"
                                    Style="{DynamicResource EntryFrameStyle}"
                                    x:Name="LanguageFrame">
                    <custom:CustomFrame.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnLanguagePickerClicked"/>
                    </custom:CustomFrame.GestureRecognizers>
                </custom:CustomFrame>
                <custom:CustomPicker Grid.Row="1"
                                     ItemsSource="{Binding Languages}"
                                     ItemDisplayBinding="{Binding Name}"
                                     SelectedItem="{Binding Language}"
                                     x:Name="LanguagePicker"
                                     Focused="OnLanguagePickerFocused"
                                     Unfocused="OnLanguagePickerFocused"
                                     Style="{DynamicResource CustomPickerStyle}">
                    <custom:CustomPicker.Behaviors>
                        <behaviors:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                          Command="{Binding ClearMnemonicCommand}"/>
                    </custom:CustomPicker.Behaviors>
                </custom:CustomPicker>
                <Label Text ="{helpers:Translate LanguageLabel}"
                       Style="{DynamicResource PickerHintStyle}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnLanguagePickerClicked"/>
                    </Label.GestureRecognizers>
                </Label>
                <Image Grid.RowSpan="2"
                       Grid.Column="1"
                       Source="DownArrow"
                       Margin="0,25,20,25"
                       HeightRequest="10">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnLanguagePickerClicked"/>
                    </Image.GestureRecognizers>
                </Image>
                <custom:CustomFrame Grid.Row="3"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    CornerRadius="0,0,20,20"
                                    x:Name="WordCountFrame"
                                    Style="{DynamicResource EntryFrameStyle}">
                    <Frame.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnWordCountPickerClicked"/>
                    </Frame.GestureRecognizers>
                </custom:CustomFrame>
                <custom:CustomPicker Grid.Row="4"
                                     ItemsSource="{Binding WordCountToEntropyLength}"
                                     ItemDisplayBinding="{Binding WordCount}"
                                     SelectedItem="{Binding Entropy}"
                                     x:Name="WordCountPicker"
                                     Focused="OnWordCountPickerFocused"
                                     Unfocused="OnWordCountPickerFocused"
                                     Style="{DynamicResource CustomPickerStyle}">
                    <custom:CustomPicker.Behaviors>
                        <behaviors:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                          Command="{Binding ClearMnemonicCommand}"/>
                    </custom:CustomPicker.Behaviors>
                </custom:CustomPicker>
                <Label Grid.Row="3"
                       Text ="{helpers:Translate WordCountLabel}"
                       Style="{DynamicResource PickerHintStyle}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnWordCountPickerClicked"/>
                    </Label.GestureRecognizers>
                </Label>
                <Image Grid.RowSpan="2"
                       Grid.Row="3"
                       Grid.Column="1"
                       Source="DownArrow"
                       Margin="0,25,20,25"
                       HeightRequest="10">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnWordCountPickerClicked"/>
                    </Image.GestureRecognizers>
                </Image>
            </Grid>
            <StackLayout Orientation="Horizontal"
                         Padding="10">
                <Label Text="{helpers:Translate UseDerivedKeyPswd}"
                       FontFamily="{DynamicResource RegularFont}"
                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                       FontSize="14"
                       VerticalTextAlignment="Center"
                       HorizontalTextAlignment="Center">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding UseDerivedPswdInfoCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
                <Image Source="ic_question"
                       WidthRequest="16"
                       HeightRequest="16">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding UseDerivedPswdInfoCommand}"/>
                    </Image.GestureRecognizers>
                </Image>
                <Switch OnColor="{AppThemeBinding Dark={StaticResource MainButtonBackgroundColorDark}, Light={StaticResource MainButtonBackgroundColor}}"
                        IsToggled="{Binding UseDerivedKeyPswd, Mode=TwoWay}"
                        Toggled="OnUseDerivedPswdToggled"
                        HorizontalOptions="EndAndExpand"
                        VerticalOptions="Center"/>
            </StackLayout>
            <StackLayout Spacing="1"
                         IsVisible="{Binding UseDerivedKeyPswd}">
                <custom:CustomFrame x:Name="PasswordFrame"
                                    CornerRadius="20,20,0,0"
                                    Style="{DynamicResource EntryFrameStyle}">
                    <StackLayout HeightRequest="60">
                        <RelativeLayout RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}">
                            <Label x:Name="PasswordHint"
                                   Style="{DynamicResource EntryHintStyle}"
                                   VerticalTextAlignment="Center"
                                   RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}"
                                   RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=1}"/>
                            <custom:CustomEntry x:Name="PasswordEntry"
                                                Placeholder="{helpers:Translate PasswordEntryPlaceholder}"
                                                Keyboard="Text"
                                                Focused="PasswordEntryFocused"
                                                Unfocused="PasswordEntryFocused"
                                                IsPassword="True"
                                                Style="{DynamicResource CustomEntryStyle}"
                                                TextChanged="OnPasswordTextChanged"
                                                RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}"
                                                RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=1}">
                                <custom:CustomEntry.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="Focused"
                                                                      Command="{Binding ClearWarningCommand}"/>
                                    <behaviors:EventToCommandBehavior EventName="TextChanged"
                                                                      Command="{Binding DerivedPswdChangedCommand}"
                                                                      CommandParameter="{Binding Source={x:Reference PasswordEntry},Path=Text}"/>
                                </custom:CustomEntry.Behaviors>
                            </custom:CustomEntry>
                        </RelativeLayout>
                    </StackLayout>
                </custom:CustomFrame>
                <custom:CustomFrame x:Name="PasswordConfirmationFrame"
                                    CornerRadius="0,0,20,20"
                                    Style="{DynamicResource EntryFrameStyle}">
                    <StackLayout HeightRequest="60">
                        <RelativeLayout RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}">
                            <Label x:Name="PasswordConfirmationHint"
                                   Style="{DynamicResource EntryHintStyle}"
                                   VerticalTextAlignment="Center"
                                   RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}"
                                   RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=1}"/>
                            <custom:CustomEntry x:Name="PasswordConfirmationEntry"
                                                Placeholder="{helpers:Translate PasswordConfirmationEntryPlaceholder}"
                                                Keyboard="Text"
                                                Focused="PasswordConfirmationEntryFocused"
                                                Unfocused="PasswordConfirmationEntryFocused"
                                                IsPassword="True"
                                                Style="{DynamicResource CustomEntryStyle}"
                                                TextChanged="OnPasswordConfirmationTextChanged"
                                                RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}"
                                                RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=1}">
                                <custom:CustomEntry.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="Focused"
                                                                      Command="{Binding ClearWarningCommand}"/>
                                    <behaviors:EventToCommandBehavior EventName="TextChanged"
                                                                      Command="{Binding DerivedPswdConfirmationChangedCommand}"
                                                                      CommandParameter="{Binding Source={x:Reference PasswordConfirmationEntry},Path=Text}"/>
                                </custom:CustomEntry.Behaviors>
                            </custom:CustomEntry>
                        </RelativeLayout>
                    </StackLayout>
                </custom:CustomFrame>
            </StackLayout>
            <Label Text="{Binding Warning}"
                   Style="{DynamicResource ErrorTextH5CenterAlign}">
                <Label.Triggers>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Warning}"
                                 Value="">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </Label.Triggers>
            </Label>
            <StackLayout Spacing="0"
                         x:Name="MnemonicPhraseFrame"
                         Margin="0,20">
                <StackLayout>
                    <FlexLayout BindableLayout.ItemsSource="{Binding MnemonicSubstr, Mode=OneWay}"
                                BackgroundColor="Transparent"
                                Direction="Row"
                                Wrap="Wrap"
                                AlignItems="Center"
                                JustifyContent="Center">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <StackLayout>
                                    <Frame Style="{DynamicResource SeedWordFrameStyle}">
                                        <Label Text="{Binding .}"
                                               Style="{DynamicResource SeedWordLabelStyle}"/>
                                    </Frame>
                                </StackLayout>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </FlexLayout>
                </StackLayout>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         x:Name="LoseMnemonicLabel"
                         IsVisible="{Binding Mnemonic, Converter={StaticResource StringToBool}}">
                <Image Source="ic_question__warning"
                       HeightRequest="16"
                       WidthRequest="16"
                       Margin="0,0,10,0"/>
                <Label Text="{helpers:Translate LoseMnemonicPhraseText}"
                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                       FontFamily="{DynamicResource RegularFont}"
                       FontSize="14"
                       HorizontalTextAlignment="Start"/>
            </StackLayout>
            <Button Text="{helpers:Translate NextButton}"
                    Margin="0,20"
                    x:Name="NextButton"
                    Style="{DynamicResource MainButton}"
                    Command="{Binding SetMnemonicCommand}"
                    Clicked="OnNextButtonClicked">
                <Button.Triggers>
                    <DataTrigger TargetType="Button"
                                 Binding="{Binding Mnemonic}"
                                 Value="">
                        <Setter Property="Text"
                                Value="{helpers:Translate GenerateButton}"/>
                    </DataTrigger>
                </Button.Triggers>
            </Button>
        </StackLayout>
    </ScrollView>
</ContentPage>