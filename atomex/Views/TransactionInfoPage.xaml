<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             x:Class="atomex.TransactionInfoPage"
             Title="{helpers:Translate TransactionInfoPageTitle}"
             Style="{DynamicResource MainBackgroundStyle}">
    <ScrollView>
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         HeightRequest="60"
                         Margin="20,5,20,0">
                <Image Style="{DynamicResource TxImageStyle}">
                    <Image.Triggers>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Type}"
                                     Value="Input">
                            <Setter Property="Source"
                                    Value="ic_input"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Type}"
                                     Value="Output">
                            <Setter Property="Source"
                                    Value="ic_output"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Type}"
                                     Value="SwapPayment">
                            <Setter Property="Source"
                                    Value="ic_payment"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Type}"
                                     Value="SwapRedeem">
                            <Setter Property="Source"
                                    Value="ic_redeem"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Type}"
                                     Value="SwapRefund">
                            <Setter Property="Source"
                                    Value="ic_refund"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Type}"
                                     Value="SwapCall">
                        <Setter Property="Source"
                                Value="ic_approve"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Type}"
                                     Value="TokenCall">
                            <Setter Property="Source"
                                    Value="ic_approve"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Type}"
                                     Value="TokenApprove">
                            <Setter Property="Source"
                                    Value="ic_approve"/>
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <Label Text="{Binding Amount}"
                        VerticalTextAlignment="Center"
                        Padding="10,0">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Type}"
                                     Value="Input">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                            <Setter Property="FormattedText">
                                <Setter.Value>
                                    <FormattedString>
                                        <Span Text="{Binding Amount, StringFormat='+{0:0.#########}'}"
                                              Style="{DynamicResource TxAmountLabelStyle}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Currency.Name}"
                                              Style="{DynamicResource TxAmountCodeLabelStyle}"/>
                                    </FormattedString>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Type}"
                                     Value="Output">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                            <Setter Property="FormattedText">
                                <Setter.Value>
                                    <FormattedString>
                                        <Span Text="{Binding Amount, StringFormat='{0:0.#########}'}"
                                              Style="{DynamicResource TxAmountLabelStyle}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Currency.Name}"
                                              Style="{DynamicResource TxAmountCodeLabelStyle}"/>
                                    </FormattedString>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Type}"
                                     Value="SwapPayment">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                            <Setter Property="FormattedText">
                                <Setter.Value>
                                    <FormattedString>
                                        <Span Text="{Binding Amount, StringFormat='{0:0.#########}'}"
                                              Style="{DynamicResource TxAmountLabelStyle}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Currency.Name}"
                                              Style="{DynamicResource TxAmountCodeLabelStyle}"/>
                                    </FormattedString>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Type}"
                                     Value="SwapRedeem">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                            <Setter Property="FormattedText">
                                <Setter.Value>
                                    <FormattedString>
                                        <Span Text="{Binding Amount, StringFormat='+{0:0.#########}'}"
                                              Style="{DynamicResource TxAmountLabelStyle}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Currency.Name}"
                                              Style="{DynamicResource TxAmountCodeLabelStyle}"/>
                                    </FormattedString>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Type}"
                                     Value="SwapRefund">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                            <Setter Property="FormattedText">
                                <Setter.Value>
                                    <FormattedString>
                                        <Span Text="{Binding Amount, StringFormat='+{0:0.#########}'}"
                                              Style="{DynamicResource TxAmountLabelStyle}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Currency.Name}"
                                              Style="{DynamicResource TxAmountCodeLabelStyle}"/>
                                    </FormattedString>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Type}"
                                     Value="SwapCall">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                            <Setter Property="FormattedText">
                                <Setter.Value>
                                    <FormattedString>
                                        <Span Text="{Binding Amount, StringFormat='{0:0.#########}'}"
                                              Style="{DynamicResource TxAmountLabelStyle}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Currency.Name}"
                                              Style="{DynamicResource TxAmountCodeLabelStyle}"/>
                                    </FormattedString>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Type}"
                                     Value="TokenCall">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                            <Setter Property="FormattedText">
                                <Setter.Value>
                                    <FormattedString>
                                        <Span Text="{Binding Amount, StringFormat='{0:0.#########}'}"
                                              Style="{DynamicResource TxAmountLabelStyle}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Currency.Name}"
                                              Style="{DynamicResource TxAmountCodeLabelStyle}"/>
                                    </FormattedString>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Type}"
                                     Value="TokenApprove">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                            <Setter Property="FormattedText">
                                <Setter.Value>
                                    <FormattedString>
                                        <Span Text="{Binding Amount, StringFormat='{0:0.#########}'}"
                                              Style="{DynamicResource TxAmountLabelStyle}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Currency.Name}"
                                              Style="{DynamicResource TxAmountCodeLabelStyle}"/>
                                    </FormattedString>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Frame CornerRadius="8"
                       Padding="2"
                       Margin="0,15"
                       HasShadow="False"
                       HorizontalOptions="EndAndExpand">
                    <Frame.Triggers>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding State}"
                                     Value="Confirmed">
                            <Setter Property="BackgroundColor"
                                    Value="{DynamicResource TxConfirmedStateColor}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding State}"
                                     Value="Pending">
                            <Setter Property="BackgroundColor"
                                    Value="{DynamicResource TxPendingStateColor}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding State}"
                                     Value="Failed">
                            <Setter Property="BackgroundColor"
                                    Value="{DynamicResource TxFailedStateColor}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding State}"
                                     Value="Unconfirmed">
                            <Setter Property="BackgroundColor"
                                    Value="{DynamicResource TxUnconfirmedStateColor}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding State}"
                                     Value="Unknown">
                            <Setter Property="BackgroundColor"
                                    Value="{DynamicResource TxUnknownStateColor}"/>
                        </DataTrigger>
                    </Frame.Triggers>
                    <Label Padding="10,0"
                           Style="{DynamicResource TxStateLabelStyle}"
                           Text="{Binding State}" />
                </Frame>
            </StackLayout>
            <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}">
                <Label Text="{helpers:Translate Description}"
                       Style="{DynamicResource TxInfoRowTitleStyle}"/>
                <Label Text="{Binding Description}"
                       Style="{DynamicResource TxInfoRowTextStyle}"/>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}">
                <StackLayout Orientation="Horizontal">
                    <StackLayout HorizontalOptions="FillAndExpand">
                        <Label Text="{helpers:Translate TransactionId}"
                               Style="{DynamicResource TxInfoRowTitleStyle}"/>
                        <Label Text="{Binding Id}"
                               Style="{DynamicResource TxInfoRowTextStyle}"
                               LineBreakMode="MiddleTruncation"/>
                    </StackLayout>
                    <ImageButton Source="Copy"
                                 Style="{DynamicResource TxInfoCopyButtonStyle}"
                                 Command="{Binding CopyTxIdCommand}"/>
                </StackLayout>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}">
                <Label Text="{helpers:Translate TransactionTime}"
                       Style="{DynamicResource TxInfoRowTitleStyle}"/>
                <Label Text="{Binding LocalTime, StringFormat='{}{0:dd.MM.yyyy HH:mm}'}"
                       Style="{DynamicResource TxInfoRowTextStyle}"/>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding From, FallbackValue={Null}}"
                                 Value="{Null}">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <StackLayout Orientation="Horizontal">
                    <StackLayout HorizontalOptions="FillAndExpand">
                        <Label Text="{helpers:Translate FromLabel}"
                               Style="{DynamicResource TxInfoRowTitleStyle}"/>
                        <Label Text="{Binding From}"
                               Style="{DynamicResource TxInfoRowTextStyle}"
                               LineBreakMode="MiddleTruncation"/>
                    </StackLayout>
                    <ImageButton Source="Copy"
                                 Style="{DynamicResource TxInfoCopyButtonStyle}"
                                 Command="{Binding CopyFromAddressCommand}"/>
                </StackLayout>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding To, FallbackValue={Null}}"
                                 Value="{Null}">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <StackLayout Orientation="Horizontal">
                    <StackLayout HorizontalOptions="FillAndExpand">
                        <Label Text="{helpers:Translate ToLabel}"
                               Style="{DynamicResource TxInfoRowTitleStyle}"/>
                        <Label Text="{Binding To}"
                               Style="{DynamicResource TxInfoRowTextStyle}"
                               LineBreakMode="MiddleTruncation"/>
                    </StackLayout>
                    <ImageButton Source="Copy"
                                 Style="{DynamicResource TxInfoCopyButtonStyle}"
                                 Command="{Binding CopyToAddressCommand}"/>
                </StackLayout>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding GasPrice, FallbackValue={Null}}"
                                 Value="{Null}">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Label Text="{helpers:Translate GasPriceLabel}"
                       Style="{DynamicResource TxInfoRowTitleStyle}"/>
                <Label Text="{Binding GasPrice}"
                       Style="{DynamicResource TxInfoRowTextStyle}"/>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding GasLimit, FallbackValue={Null}}"
                                 Value="{Null}">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Label Text="{helpers:Translate GasLimitLabel}"
                       Style="{DynamicResource TxInfoRowTitleStyle}"/>
                <Label Text="{Binding GasLimit}"
                       Style="{DynamicResource TxInfoRowTextStyle}"/>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding GasUsed, FallbackValue={Null}}"
                                 Value="{Null}">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Label Text="{helpers:Translate GasUsedLabel}"
                       Style="{DynamicResource TxInfoRowTitleStyle}"/>
                <Label Text="{Binding GasUsed}"
                       Style="{DynamicResource TxInfoRowTextStyle}"/>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding Fee, FallbackValue={Null}}"
                                 Value="{Null}">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Label Text="{helpers:Translate FeeLabel}"
                       Style="{DynamicResource TxInfoRowTitleStyle}"/>
                <Label Text="{Binding Fee}"
                       Style="{DynamicResource TxInfoRowTextStyle}">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding Fee} "/>
                            <Span Text=" "/>
                            <Span Text="{Binding Currency.FeeCode}"></Span>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <StackLayout Style="{DynamicResource TxInfoRowStyle}"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding IsInternal, FallbackValue={Null}}"
                                 Value="{Null}">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Label Text="{helpers:Translate IsInternalLabel}"
                      Style="{DynamicResource TxInfoRowTitleStyle}"/>
                <Label Text="{Binding IsInternal}"
                       Style="{DynamicResource TxInfoRowTextStyle}">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding IsInternal}"
                                     Value="True">
                            <Setter Property="Text"
                                    Value="{helpers:Translate Yes}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding IsInternal}"
                                     Value="False">
                            <Setter Property="Text"
                                    Value="{helpers:Translate No}"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            </StackLayout>
            <Button Text="{helpers:Translate ShowInExplorerButton}"
                    Style="{DynamicResource TransparentButtonStyle}"
                    Command="{Binding ShowInExplorerCommand}"/>
            <StackLayout Style="{DynamicResource SeparatorStyle}"/>
            <Button Text="{helpers:Translate DeleteButton}"
                    Style="{DynamicResource TransparentButtonStyle}"
                    TextColor="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"
                    IsVisible="{Binding CanBeRemoved}"
                    Command="{Binding DeleteTxCommand}"/>
            <StackLayout Style="{DynamicResource SeparatorStyle}"
                         IsVisible="{Binding CanBeRemoved}"/>
        </StackLayout>
    </ScrollView>
</ContentPage>
