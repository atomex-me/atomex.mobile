<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:zxing="clr-namespace:ZXing.Net.Mobile.Forms;assembly=ZXing.Net.Mobile.Forms"
             xmlns:zxcm="clr-namespace:ZXing.Common;assembly=zxing.portable"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             xmlns:custom="clr-namespace:atomex.CustomElements"
             xmlns:converters="clr-namespace:atomex.Converters"
             x:Class="atomex.ReceivePage"
             Title="{helpers:Translate ReceivePageTitle}"
             Style="{DynamicResource AdditionalBackgroundStyle}">
    <ContentPage.Resources>
    <ResourceDictionary>
        <converters:InverseBoolConverter x:Key="InverseBool"/>
    </ResourceDictionary>
    </ContentPage.Resources>
    <ScrollView>
        <StackLayout HorizontalOptions="Center"
                     VerticalOptions="CenterAndExpand"
                     Padding="30,5"
                     Spacing="0">
            <Grid VerticalOptions="Fill"
                  HorizontalOptions="Fill"
                  RowSpacing="0"
                  ColumnSpacing="0"
                  HeightRequest="54">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <Frame Grid.RowSpan="3"
                       Grid.ColumnSpan="3"
                       CornerRadius="10"
                       x:Name="AddressFrame"
                       Style="{DynamicResource EntryFrameStyle}">
                    <Frame.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ShowReceiveAddressesCommand}"/>
                    </Frame.GestureRecognizers>
                </Frame>   
                <Label Text="{helpers:Translate AddressLabel}"
                       Style="{DynamicResource PickerHintStyle}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ShowReceiveAddressesCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
                <Label Grid.Row="1"
                       Grid.RowSpan="2"
                       FontFamily="{DynamicResource RegularFont}"
                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                       Text="{Binding SelectedAddress.Address, StringFormat='{0} -'}"
                       FontSize="12"
                       LineBreakMode="MiddleTruncation"
                       HorizontalTextAlignment="Start"
                       VerticalTextAlignment="Start">
                    <Label.Padding>
                        <OnPlatform x:TypeArguments="Thickness" iOS="20,5,0,0" Android="20,1,0,0"/>
                    </Label.Padding>
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ShowReceiveAddressesCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
                <Label Grid.Row="1"
                       Grid.Column="1"
                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                       HorizontalTextAlignment="Start"
                       VerticalTextAlignment="Start">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding SelectedAddress.ShowTokenBalance}"
                                     Value="True">
                            <Setter Property="Grid.RowSpan"
                                    Value="2"/>
                        </DataTrigger>
                    </Label.Triggers>
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding SelectedAddress.AvailableBalance, StringFormat='{0:0.#########}'}"
                                  FontSize="12"
                                  FontFamily="{DynamicResource BoldFont}"/>
                            <Span Text=" "/>
                            <Span Text="{Binding SelectedAddress.CurrencyCode}"
                                  FontSize="10"
                                  FontFamily="{DynamicResource BoldFont}"/>
                        </FormattedString>
                    </Label.FormattedText>
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ShowReceiveAddressesCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
                <Label Grid.Row="2"
                       Grid.Column="1"
                       Text="{Binding SelectedAddress.TokenBalance}"
                       TextColor="{AppThemeBinding Dark={StaticResource WarningTextColorDark}, Light={StaticResource WarningTextColor}}"
                       HeightRequest="22"
                       VerticalTextAlignment="Start"
                       HorizontalTextAlignment="Start"
                       IsVisible="False">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding SelectedAddress.ShowTokenBalance}"
                                     Value="True">
                            <Setter Property="IsVisible"
                                    Value="True"/>
                        </DataTrigger>
                    </Label.Triggers>
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding SelectedAddress.TokenBalance, StringFormat='{0:0.#########}'}"
                                  FontSize="12"
                                  FontFamily="{DynamicResource BoldFont}"/>
                            <Span Text=" " /> 
                            <Span Text="{Binding SelectedAddress.TokenCode}"
                                  FontSize="10"
                                  FontFamily="{DynamicResource BoldFont}"/>
                        </FormattedString>
                    </Label.FormattedText>
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ShowReceiveAddressesCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
                <Image Source="{AppThemeBinding Dark=RightArrow__gray, Light=RightArrow__black}"
                       Grid.RowSpan="3"
                       Grid.Column="2"
                       WidthRequest="10"
                       HeightRequest="10"
                       Margin="20">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ShowReceiveAddressesCommand}"/>
                    </Image.GestureRecognizers>
                </Image>
            </Grid>
            <Frame Padding="0"
                   Margin="0,10"
                   CornerRadius="10"
                   HasShadow="False"
                   Style="{DynamicResource QrCodeFrameStyle}">
                <StackLayout Spacing="0">
                    <StackLayout HorizontalOptions="Center"
                                 VerticalOptions="Center"
                                 Padding="20,20,20,0"
                                 Orientation="Horizontal">
                        <Frame CornerRadius="12"
                               BackgroundColor="{DynamicResource MainTextColor}"
                               HeightRequest="50"
                               WidthRequest="50"
                               Padding="0"
                               HasShadow="False">
                            <Image Source="Logo"
                                   VerticalOptions="Center"
                                   HorizontalOptions="Center"
                                   WidthRequest="40"
                                   HeightRequest="40"/>
                        </Frame>
                        <StackLayout Spacing="0"
                                     Orientation="Horizontal"
                                     VerticalOptions="CenterAndExpand"
                                     Padding="5,0">
                            <Label Text="a" Style="{DynamicResource QrCodeLabelStyle}"/>
                            <Label Text="t" Style="{DynamicResource QrCodeLabelStyle}"/>
                            <Label Text="o" Style="{DynamicResource QrCodeLabelStyle}"/>
                            <Label Text="m" Style="{DynamicResource QrCodeLabelStyle}"/>
                            <Label Text="e" Style="{DynamicResource QrCodeLabelStyle}"/>
                            <Label Text="x" Style="{DynamicResource QrCodeLabelStyle}"/>
                        </StackLayout>
                    </StackLayout>
                    <zxing:ZXingBarcodeImageView Style="{DynamicResource QrCodeStyle}"
                                                 BarcodeValue="{Binding SelectedAddress.Address}"
                                                 BarcodeFormat="QR_CODE">
                        <zxing:ZXingBarcodeImageView.BarcodeOptions>
                            <zxcm:EncodingOptions Width="300"
                                                  Height="300"/>
                        </zxing:ZXingBarcodeImageView.BarcodeOptions>
                    </zxing:ZXingBarcodeImageView>
                    <Label Text="{Binding SelectedAddress.Address}"
                           TextColor="{DynamicResource AdditionalTextColor}"
                           FontFamily="{DynamicResource RegularFont}"
                           LineBreakMode="CharacterWrap"
                           HorizontalTextAlignment="Center"
                           FontSize="16"
                           Margin="20,0,20,20"/>
                </StackLayout>
            </Frame>
            <StackLayout Orientation="Horizontal"
                         HorizontalOptions="Center"
                         HeightRequest="40"
                         Margin="20"
                         Spacing="0">
                <custom:LeftRoundedButton Text="{helpers:Translate CopyButton}"
                                          Style="{DynamicResource ReceiveActionButtonStyle}"
                                          Command="{Binding CopyCommand}"/>
                <RelativeLayout>
                    <RelativeLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ShareCommand}"/>
                    </RelativeLayout.GestureRecognizers>
                    <custom:RightRoundedButton Text="{helpers:Translate ShareButton}"
                                               Style="{DynamicResource ReceiveActionButtonStyle}"
                                               Command="{Binding ShareCommand}"
                                               IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBool}}">
                        <custom:RightRoundedButton.Triggers>
                            <DataTrigger TargetType="custom:RightRoundedButton"
                                         Binding="{Binding IsLoading}"
                                         Value="True">
                                <Setter Property="Opacity"
                                        Value="0.3"/>
                            </DataTrigger>
                            <DataTrigger TargetType="custom:RightRoundedButton"
                                         Binding="{Binding IsLoading}"
                                         Value="False">
                                <Setter Property="Opacity"
                                        Value="1"/>
                            </DataTrigger>
                        </custom:RightRoundedButton.Triggers>
                    </custom:RightRoundedButton>
                    <ActivityIndicator RelativeLayout.XConstraint= "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=30}"
	             	                   RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=10}"
                                       RelativeLayout.WidthConstraint="20"
                                       RelativeLayout.HeightConstraint="20"
                                       Color="{AppThemeBinding Dark={StaticResource LoaderColorDark}, Light=Black}"
                                       BackgroundColor="Transparent"
                                       IsRunning="{Binding IsLoading}"/>
                </RelativeLayout>
            </StackLayout>
        </StackLayout>
    </ScrollView>
</ContentPage>