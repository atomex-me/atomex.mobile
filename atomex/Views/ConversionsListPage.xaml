<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             x:Class="atomex.ConversionsListPage"
             x:Name="BindingContextPage"
             Title="{helpers:Translate SwapListPageTitle}">
    <ContentPage.Content>
        <StackLayout BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
            <StackLayout VerticalOptions="FillAndExpand"
                         Padding="20"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding Swaps.Count}"
                                 Value="0">
                        <Setter Property="IsVisible"
                                Value="True"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Image Source="ic_redeem"
                       HeightRequest="48"
                       WidthRequest="48"
                       VerticalOptions="EndAndExpand"
                       HorizontalOptions="CenterAndExpand"/>
                <StackLayout VerticalOptions="StartAndExpand"
                             Margin="20">
                    <Label Text="{helpers:Translate NoSwapsLabel}"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="18"/>
                    <Label Text="{helpers:Translate SwapHistoryText}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="14"
                           HorizontalTextAlignment="Center"/>
                </StackLayout>
            </StackLayout>
            <ListView ItemsSource="{Binding GroupedSwaps}"
                      CachingStrategy="RetainElement"
                      IsGroupingEnabled="True"
                      SelectionMode="None"
                      HasUnevenRows="True"
                      SeparatorVisibility="Default"
                      SeparatorColor="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"
                      VerticalOptions="FillAndExpand"
                      BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                      Footer="">
                <ListView.Triggers>
                    <DataTrigger TargetType="ListView"
                                 Binding="{Binding GroupedSwaps.Count}"
                                 Value="0">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </ListView.Triggers>
                <ListView.GroupHeaderTemplate>
                    <DataTemplate>
                        <ViewCell Height="20">
                            <StackLayout HeightRequest="20"
                                         BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                                         Spacing="0">
                                <Label Text="{Binding Date, StringFormat='{}{0:dd.MM.yyyy}'}"
                                       BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                       FontFamily="{DynamicResource RegularFont}"
                                       Padding="10,0"
                                       FontSize="12"
                                       VerticalTextAlignment="Center"
                                       VerticalOptions="CenterAndExpand"/>
                            </StackLayout>
                         </ViewCell>
                    </DataTemplate>
                </ListView.GroupHeaderTemplate>
                <ListView.FooterTemplate>
                    <DataTemplate>
                        <StackLayout>
                            <Label Text="{helpers:Translate SwapHistoryText}"
                                   BackgroundColor="Transparent"
                                   TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                   FontFamily="{DynamicResource RegularFont}"
                                   Padding="20,10"
                                   FontSize="14"
                                   VerticalTextAlignment="Center"
                                   HorizontalTextAlignment="Center"/>
                        </StackLayout>
                    </DataTemplate>
                </ListView.FooterTemplate>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Grid Padding="8"
                                  RowSpacing="0"
                                  ColumnSpacing="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*" />
                                    <ColumnDefinition Width="6*" />
                                    <ColumnDefinition Width="2.5*" />
                                </Grid.ColumnDefinitions>
                                <Grid.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding BindingContext.SelectSwapCommand, Source={x:Reference BindingContextPage}}"
                                                          Tapped="OnItemTapped"
                                                          CommandParameter="{Binding .}"/>
                                </Grid.GestureRecognizers>
                                <RelativeLayout VerticalOptions="CenterAndExpand">
                                    <Image Source="{Binding FromCurrencyCode}"
                                           x:Name="FromCurrencyIcon"
                                           HeightRequest="32"
                                           WidthRequest="32"/>
                                    <Image Source="{Binding ToCurrencyCode}"
                                           HeightRequest="32"
                                           WidthRequest="32"
                                           RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView,ElementName=FromCurrencyIcon,Property=Y,Factor=1,Constant=0}"
                                           RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView,ElementName=FromCurrencyIcon,Property=X,Factor=1,Constant=+18}"/>
                                </RelativeLayout>
                                <Label Grid.Column="1"
                                       VerticalTextAlignment="Center"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       Padding="5">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding FromAmount, StringFormat=' {0:0.###}'}"
                                                  FontFamily="{DynamicResource BoldFont}"
                                                  FontSize="14"/>
                                            <Span Text="{Binding FromCurrencyCode, StringFormat=' {0}'}"
                                                  FontFamily="{DynamicResource BoldFont}"
                                                  FontSize="12"/>
                                            <Span Text=" to "
                                                  FontFamily="{DynamicResource RegularFont}"
                                                  FontSize="12"/>
                                            <Span Text="{Binding ToAmount, StringFormat='{0:0.###}'}"
                                                  FontFamily="{DynamicResource BoldFont}"
                                                  FontSize="14"/>
                                            <Span Text="{Binding ToCurrencyCode, StringFormat=' {0}'}"
                                                  FontFamily="{DynamicResource BoldFont}"
                                                  FontSize="12"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Frame Grid.Column="2"
                                       CornerRadius="8"
                                       Padding="2"
                                       Margin="0,10"
                                       HasShadow="False"
                                       BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                                    <Frame.Triggers>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource SwapCompletedStateColor}"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="In Progress">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource SwapInProgressStateColor}"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="Canceled">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource SwapCanceledStateColor}"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="Refunded">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource SwapRefundedStateColor}"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="Unsettled">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource SwapUnsettledStateColor}"/>
                                        </DataTrigger>
                                    </Frame.Triggers>
                                    <Label Style="{DynamicResource TxStateLabelStyle}"
                                           Text="{Binding State}"/>
                                </Frame>  
                            </Grid>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <StackLayout VerticalOptions="EndAndExpand"
                         Spacing="0"
                         Margin="20,0,20,20">
                <Button Text="{helpers:Translate CreateSwapButton}"
                        Style="{DynamicResource MainButtonStyle}"
                        Command="{Binding CreateNewSwapCommand}"/>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>
